{"version":3,"file":"main.js","mappings":"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","sources":["webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/browserify.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/control-icons.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/shadow-viewport.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/svg-pan-zoom.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/svg-utilities.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/uniwheel.js","webpack://AdventureWise JS project/./node_modules/svg-pan-zoom/src/utilities.js","webpack://AdventureWise JS project/./node_modules/svgmap/dist/svgMap.min.js","webpack://AdventureWise JS project/webpack/bootstrap","webpack://AdventureWise JS project/webpack/runtime/compat get default export","webpack://AdventureWise JS project/webpack/runtime/define property getters","webpack://AdventureWise JS project/webpack/runtime/hasOwnProperty shorthand","webpack://AdventureWise JS project/./src/countriesList.js","webpack://AdventureWise JS project/./src/cityNamesList.js","webpack://AdventureWise JS project/./src/fakeData.js","webpack://AdventureWise JS project/./src/index.js"],"sourcesContent":["var SvgPanZoom = require(\"./svg-pan-zoom.js\");\n\nmodule.exports = SvgPanZoom;\n","var SvgUtils = require(\"./svg-utilities\");\n\nmodule.exports = {\n  enable: function(instance) {\n    // Select (and create if necessary) defs\n    var defs = instance.svg.querySelector(\"defs\");\n    if (!defs) {\n      defs = document.createElementNS(SvgUtils.svgNS, \"defs\");\n      instance.svg.appendChild(defs);\n    }\n\n    // Check for style element, and create it if it doesn't exist\n    var styleEl = defs.querySelector(\"style#svg-pan-zoom-controls-styles\");\n    if (!styleEl) {\n      var style = document.createElementNS(SvgUtils.svgNS, \"style\");\n      style.setAttribute(\"id\", \"svg-pan-zoom-controls-styles\");\n      style.setAttribute(\"type\", \"text/css\");\n      style.textContent =\n        \".svg-pan-zoom-control { cursor: pointer; fill: black; fill-opacity: 0.333; } .svg-pan-zoom-control:hover { fill-opacity: 0.8; } .svg-pan-zoom-control-background { fill: white; fill-opacity: 0.5; } .svg-pan-zoom-control-background { fill-opacity: 0.8; }\";\n      defs.appendChild(style);\n    }\n\n    // Zoom Group\n    var zoomGroup = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomGroup.setAttribute(\"id\", \"svg-pan-zoom-controls\");\n    zoomGroup.setAttribute(\n      \"transform\",\n      \"translate(\" +\n        (instance.width - 70) +\n        \" \" +\n        (instance.height - 76) +\n        \") scale(0.75)\"\n    );\n    zoomGroup.setAttribute(\"class\", \"svg-pan-zoom-control\");\n\n    // Control elements\n    zoomGroup.appendChild(this._createZoomIn(instance));\n    zoomGroup.appendChild(this._createZoomReset(instance));\n    zoomGroup.appendChild(this._createZoomOut(instance));\n\n    // Finally append created element\n    instance.svg.appendChild(zoomGroup);\n\n    // Cache control instance\n    instance.controlIcons = zoomGroup;\n  },\n\n  _createZoomIn: function(instance) {\n    var zoomIn = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomIn.setAttribute(\"id\", \"svg-pan-zoom-zoom-in\");\n    zoomIn.setAttribute(\"transform\", \"translate(30.5 5) scale(0.015)\");\n    zoomIn.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    zoomIn.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().zoomIn();\n      },\n      false\n    );\n    zoomIn.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().zoomIn();\n      },\n      false\n    );\n\n    var zoomInBackground = document.createElementNS(SvgUtils.svgNS, \"rect\"); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomInBackground.setAttribute(\"x\", \"0\");\n    zoomInBackground.setAttribute(\"y\", \"0\");\n    zoomInBackground.setAttribute(\"width\", \"1500\"); // larger than expected because the whole group is transformed to scale down\n    zoomInBackground.setAttribute(\"height\", \"1400\");\n    zoomInBackground.setAttribute(\"class\", \"svg-pan-zoom-control-background\");\n    zoomIn.appendChild(zoomInBackground);\n\n    var zoomInShape = document.createElementNS(SvgUtils.svgNS, \"path\");\n    zoomInShape.setAttribute(\n      \"d\",\n      \"M1280 576v128q0 26 -19 45t-45 19h-320v320q0 26 -19 45t-45 19h-128q-26 0 -45 -19t-19 -45v-320h-320q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h320v-320q0 -26 19 -45t45 -19h128q26 0 45 19t19 45v320h320q26 0 45 19t19 45zM1536 1120v-960 q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5t84.5 -203.5z\"\n    );\n    zoomInShape.setAttribute(\"class\", \"svg-pan-zoom-control-element\");\n    zoomIn.appendChild(zoomInShape);\n\n    return zoomIn;\n  },\n\n  _createZoomReset: function(instance) {\n    // reset\n    var resetPanZoomControl = document.createElementNS(SvgUtils.svgNS, \"g\");\n    resetPanZoomControl.setAttribute(\"id\", \"svg-pan-zoom-reset-pan-zoom\");\n    resetPanZoomControl.setAttribute(\"transform\", \"translate(5 35) scale(0.4)\");\n    resetPanZoomControl.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    resetPanZoomControl.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().reset();\n      },\n      false\n    );\n    resetPanZoomControl.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().reset();\n      },\n      false\n    );\n\n    var resetPanZoomControlBackground = document.createElementNS(\n      SvgUtils.svgNS,\n      \"rect\"\n    ); // TODO change these background space fillers to rounded rectangles so they look prettier\n    resetPanZoomControlBackground.setAttribute(\"x\", \"2\");\n    resetPanZoomControlBackground.setAttribute(\"y\", \"2\");\n    resetPanZoomControlBackground.setAttribute(\"width\", \"182\"); // larger than expected because the whole group is transformed to scale down\n    resetPanZoomControlBackground.setAttribute(\"height\", \"58\");\n    resetPanZoomControlBackground.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-background\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlBackground);\n\n    var resetPanZoomControlShape1 = document.createElementNS(\n      SvgUtils.svgNS,\n      \"path\"\n    );\n    resetPanZoomControlShape1.setAttribute(\n      \"d\",\n      \"M33.051,20.632c-0.742-0.406-1.854-0.609-3.338-0.609h-7.969v9.281h7.769c1.543,0,2.701-0.188,3.473-0.562c1.365-0.656,2.048-1.953,2.048-3.891C35.032,22.757,34.372,21.351,33.051,20.632z\"\n    );\n    resetPanZoomControlShape1.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-element\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlShape1);\n\n    var resetPanZoomControlShape2 = document.createElementNS(\n      SvgUtils.svgNS,\n      \"path\"\n    );\n    resetPanZoomControlShape2.setAttribute(\n      \"d\",\n      \"M170.231,0.5H15.847C7.102,0.5,0.5,5.708,0.5,11.84v38.861C0.5,56.833,7.102,61.5,15.847,61.5h154.384c8.745,0,15.269-4.667,15.269-10.798V11.84C185.5,5.708,178.976,0.5,170.231,0.5z M42.837,48.569h-7.969c-0.219-0.766-0.375-1.383-0.469-1.852c-0.188-0.969-0.289-1.961-0.305-2.977l-0.047-3.211c-0.03-2.203-0.41-3.672-1.142-4.406c-0.732-0.734-2.103-1.102-4.113-1.102h-7.05v13.547h-7.055V14.022h16.524c2.361,0.047,4.178,0.344,5.45,0.891c1.272,0.547,2.351,1.352,3.234,2.414c0.731,0.875,1.31,1.844,1.737,2.906s0.64,2.273,0.64,3.633c0,1.641-0.414,3.254-1.242,4.84s-2.195,2.707-4.102,3.363c1.594,0.641,2.723,1.551,3.387,2.73s0.996,2.98,0.996,5.402v2.32c0,1.578,0.063,2.648,0.19,3.211c0.19,0.891,0.635,1.547,1.333,1.969V48.569z M75.579,48.569h-26.18V14.022h25.336v6.117H56.454v7.336h16.781v6H56.454v8.883h19.125V48.569z M104.497,46.331c-2.44,2.086-5.887,3.129-10.34,3.129c-4.548,0-8.125-1.027-10.731-3.082s-3.909-4.879-3.909-8.473h6.891c0.224,1.578,0.662,2.758,1.316,3.539c1.196,1.422,3.246,2.133,6.15,2.133c1.739,0,3.151-0.188,4.236-0.562c2.058-0.719,3.087-2.055,3.087-4.008c0-1.141-0.504-2.023-1.512-2.648c-1.008-0.609-2.607-1.148-4.796-1.617l-3.74-0.82c-3.676-0.812-6.201-1.695-7.576-2.648c-2.328-1.594-3.492-4.086-3.492-7.477c0-3.094,1.139-5.664,3.417-7.711s5.623-3.07,10.036-3.07c3.685,0,6.829,0.965,9.431,2.895c2.602,1.93,3.966,4.73,4.093,8.402h-6.938c-0.128-2.078-1.057-3.555-2.787-4.43c-1.154-0.578-2.587-0.867-4.301-0.867c-1.907,0-3.428,0.375-4.565,1.125c-1.138,0.75-1.706,1.797-1.706,3.141c0,1.234,0.561,2.156,1.682,2.766c0.721,0.406,2.25,0.883,4.589,1.43l6.063,1.43c2.657,0.625,4.648,1.461,5.975,2.508c2.059,1.625,3.089,3.977,3.089,7.055C108.157,41.624,106.937,44.245,104.497,46.331z M139.61,48.569h-26.18V14.022h25.336v6.117h-18.281v7.336h16.781v6h-16.781v8.883h19.125V48.569z M170.337,20.14h-10.336v28.43h-7.266V20.14h-10.383v-6.117h27.984V20.14z\"\n    );\n    resetPanZoomControlShape2.setAttribute(\n      \"class\",\n      \"svg-pan-zoom-control-element\"\n    );\n    resetPanZoomControl.appendChild(resetPanZoomControlShape2);\n\n    return resetPanZoomControl;\n  },\n\n  _createZoomOut: function(instance) {\n    // zoom out\n    var zoomOut = document.createElementNS(SvgUtils.svgNS, \"g\");\n    zoomOut.setAttribute(\"id\", \"svg-pan-zoom-zoom-out\");\n    zoomOut.setAttribute(\"transform\", \"translate(30.5 70) scale(0.015)\");\n    zoomOut.setAttribute(\"class\", \"svg-pan-zoom-control\");\n    zoomOut.addEventListener(\n      \"click\",\n      function() {\n        instance.getPublicInstance().zoomOut();\n      },\n      false\n    );\n    zoomOut.addEventListener(\n      \"touchstart\",\n      function() {\n        instance.getPublicInstance().zoomOut();\n      },\n      false\n    );\n\n    var zoomOutBackground = document.createElementNS(SvgUtils.svgNS, \"rect\"); // TODO change these background space fillers to rounded rectangles so they look prettier\n    zoomOutBackground.setAttribute(\"x\", \"0\");\n    zoomOutBackground.setAttribute(\"y\", \"0\");\n    zoomOutBackground.setAttribute(\"width\", \"1500\"); // larger than expected because the whole group is transformed to scale down\n    zoomOutBackground.setAttribute(\"height\", \"1400\");\n    zoomOutBackground.setAttribute(\"class\", \"svg-pan-zoom-control-background\");\n    zoomOut.appendChild(zoomOutBackground);\n\n    var zoomOutShape = document.createElementNS(SvgUtils.svgNS, \"path\");\n    zoomOutShape.setAttribute(\n      \"d\",\n      \"M1280 576v128q0 26 -19 45t-45 19h-896q-26 0 -45 -19t-19 -45v-128q0 -26 19 -45t45 -19h896q26 0 45 19t19 45zM1536 1120v-960q0 -119 -84.5 -203.5t-203.5 -84.5h-960q-119 0 -203.5 84.5t-84.5 203.5v960q0 119 84.5 203.5t203.5 84.5h960q119 0 203.5 -84.5 t84.5 -203.5z\"\n    );\n    zoomOutShape.setAttribute(\"class\", \"svg-pan-zoom-control-element\");\n    zoomOut.appendChild(zoomOutShape);\n\n    return zoomOut;\n  },\n\n  disable: function(instance) {\n    if (instance.controlIcons) {\n      instance.controlIcons.parentNode.removeChild(instance.controlIcons);\n      instance.controlIcons = null;\n    }\n  }\n};\n","var SvgUtils = require(\"./svg-utilities\"),\n  Utils = require(\"./utilities\");\n\nvar ShadowViewport = function(viewport, options) {\n  this.init(viewport, options);\n};\n\n/**\n * Initialization\n *\n * @param  {SVGElement} viewport\n * @param  {Object} options\n */\nShadowViewport.prototype.init = function(viewport, options) {\n  // DOM Elements\n  this.viewport = viewport;\n  this.options = options;\n\n  // State cache\n  this.originalState = { zoom: 1, x: 0, y: 0 };\n  this.activeState = { zoom: 1, x: 0, y: 0 };\n\n  this.updateCTMCached = Utils.proxy(this.updateCTM, this);\n\n  // Create a custom requestAnimationFrame taking in account refreshRate\n  this.requestAnimationFrame = Utils.createRequestAnimationFrame(\n    this.options.refreshRate\n  );\n\n  // ViewBox\n  this.viewBox = { x: 0, y: 0, width: 0, height: 0 };\n  this.cacheViewBox();\n\n  // Process CTM\n  var newCTM = this.processCTM();\n\n  // Update viewport CTM and cache zoom and pan\n  this.setCTM(newCTM);\n\n  // Update CTM in this frame\n  this.updateCTM();\n};\n\n/**\n * Cache initial viewBox value\n * If no viewBox is defined, then use viewport size/position instead for viewBox values\n */\nShadowViewport.prototype.cacheViewBox = function() {\n  var svgViewBox = this.options.svg.getAttribute(\"viewBox\");\n\n  if (svgViewBox) {\n    var viewBoxValues = svgViewBox\n      .split(/[\\s\\,]/)\n      .filter(function(v) {\n        return v;\n      })\n      .map(parseFloat);\n\n    // Cache viewbox x and y offset\n    this.viewBox.x = viewBoxValues[0];\n    this.viewBox.y = viewBoxValues[1];\n    this.viewBox.width = viewBoxValues[2];\n    this.viewBox.height = viewBoxValues[3];\n\n    var zoom = Math.min(\n      this.options.width / this.viewBox.width,\n      this.options.height / this.viewBox.height\n    );\n\n    // Update active state\n    this.activeState.zoom = zoom;\n    this.activeState.x = (this.options.width - this.viewBox.width * zoom) / 2;\n    this.activeState.y = (this.options.height - this.viewBox.height * zoom) / 2;\n\n    // Force updating CTM\n    this.updateCTMOnNextFrame();\n\n    this.options.svg.removeAttribute(\"viewBox\");\n  } else {\n    this.simpleViewBoxCache();\n  }\n};\n\n/**\n * Recalculate viewport sizes and update viewBox cache\n */\nShadowViewport.prototype.simpleViewBoxCache = function() {\n  var bBox = this.viewport.getBBox();\n\n  this.viewBox.x = bBox.x;\n  this.viewBox.y = bBox.y;\n  this.viewBox.width = bBox.width;\n  this.viewBox.height = bBox.height;\n};\n\n/**\n * Returns a viewbox object. Safe to alter\n *\n * @return {Object} viewbox object\n */\nShadowViewport.prototype.getViewBox = function() {\n  return Utils.extend({}, this.viewBox);\n};\n\n/**\n * Get initial zoom and pan values. Save them into originalState\n * Parses viewBox attribute to alter initial sizes\n *\n * @return {CTM} CTM object based on options\n */\nShadowViewport.prototype.processCTM = function() {\n  var newCTM = this.getCTM();\n\n  if (this.options.fit || this.options.contain) {\n    var newScale;\n    if (this.options.fit) {\n      newScale = Math.min(\n        this.options.width / this.viewBox.width,\n        this.options.height / this.viewBox.height\n      );\n    } else {\n      newScale = Math.max(\n        this.options.width / this.viewBox.width,\n        this.options.height / this.viewBox.height\n      );\n    }\n\n    newCTM.a = newScale; //x-scale\n    newCTM.d = newScale; //y-scale\n    newCTM.e = -this.viewBox.x * newScale; //x-transform\n    newCTM.f = -this.viewBox.y * newScale; //y-transform\n  }\n\n  if (this.options.center) {\n    var offsetX =\n        (this.options.width -\n          (this.viewBox.width + this.viewBox.x * 2) * newCTM.a) *\n        0.5,\n      offsetY =\n        (this.options.height -\n          (this.viewBox.height + this.viewBox.y * 2) * newCTM.a) *\n        0.5;\n\n    newCTM.e = offsetX;\n    newCTM.f = offsetY;\n  }\n\n  // Cache initial values. Based on activeState and fix+center opitons\n  this.originalState.zoom = newCTM.a;\n  this.originalState.x = newCTM.e;\n  this.originalState.y = newCTM.f;\n\n  return newCTM;\n};\n\n/**\n * Return originalState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getOriginalState = function() {\n  return Utils.extend({}, this.originalState);\n};\n\n/**\n * Return actualState object. Safe to alter\n *\n * @return {Object}\n */\nShadowViewport.prototype.getState = function() {\n  return Utils.extend({}, this.activeState);\n};\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getZoom = function() {\n  return this.activeState.zoom;\n};\n\n/**\n * Get zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.getRelativeZoom = function() {\n  return this.activeState.zoom / this.originalState.zoom;\n};\n\n/**\n * Compute zoom scale for pubilc usage\n *\n * @return {Float} zoom scale\n */\nShadowViewport.prototype.computeRelativeZoom = function(scale) {\n  return scale / this.originalState.zoom;\n};\n\n/**\n * Get pan\n *\n * @return {Object}\n */\nShadowViewport.prototype.getPan = function() {\n  return { x: this.activeState.x, y: this.activeState.y };\n};\n\n/**\n * Return cached viewport CTM value that can be safely modified\n *\n * @return {SVGMatrix}\n */\nShadowViewport.prototype.getCTM = function() {\n  var safeCTM = this.options.svg.createSVGMatrix();\n\n  // Copy values manually as in FF they are not itterable\n  safeCTM.a = this.activeState.zoom;\n  safeCTM.b = 0;\n  safeCTM.c = 0;\n  safeCTM.d = this.activeState.zoom;\n  safeCTM.e = this.activeState.x;\n  safeCTM.f = this.activeState.y;\n\n  return safeCTM;\n};\n\n/**\n * Set a new CTM\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.setCTM = function(newCTM) {\n  var willZoom = this.isZoomDifferent(newCTM),\n    willPan = this.isPanDifferent(newCTM);\n\n  if (willZoom || willPan) {\n    // Before zoom\n    if (willZoom) {\n      // If returns false then cancel zooming\n      if (\n        this.options.beforeZoom(\n          this.getRelativeZoom(),\n          this.computeRelativeZoom(newCTM.a)\n        ) === false\n      ) {\n        newCTM.a = newCTM.d = this.activeState.zoom;\n        willZoom = false;\n      } else {\n        this.updateCache(newCTM);\n        this.options.onZoom(this.getRelativeZoom());\n      }\n    }\n\n    // Before pan\n    if (willPan) {\n      var preventPan = this.options.beforePan(this.getPan(), {\n          x: newCTM.e,\n          y: newCTM.f\n        }),\n        // If prevent pan is an object\n        preventPanX = false,\n        preventPanY = false;\n\n      // If prevent pan is Boolean false\n      if (preventPan === false) {\n        // Set x and y same as before\n        newCTM.e = this.getPan().x;\n        newCTM.f = this.getPan().y;\n\n        preventPanX = preventPanY = true;\n      } else if (Utils.isObject(preventPan)) {\n        // Check for X axes attribute\n        if (preventPan.x === false) {\n          // Prevent panning on x axes\n          newCTM.e = this.getPan().x;\n          preventPanX = true;\n        } else if (Utils.isNumber(preventPan.x)) {\n          // Set a custom pan value\n          newCTM.e = preventPan.x;\n        }\n\n        // Check for Y axes attribute\n        if (preventPan.y === false) {\n          // Prevent panning on x axes\n          newCTM.f = this.getPan().y;\n          preventPanY = true;\n        } else if (Utils.isNumber(preventPan.y)) {\n          // Set a custom pan value\n          newCTM.f = preventPan.y;\n        }\n      }\n\n      // Update willPan flag\n      // Check if newCTM is still different\n      if ((preventPanX && preventPanY) || !this.isPanDifferent(newCTM)) {\n        willPan = false;\n      } else {\n        this.updateCache(newCTM);\n        this.options.onPan(this.getPan());\n      }\n    }\n\n    // Check again if should zoom or pan\n    if (willZoom || willPan) {\n      this.updateCTMOnNextFrame();\n    }\n  }\n};\n\nShadowViewport.prototype.isZoomDifferent = function(newCTM) {\n  return this.activeState.zoom !== newCTM.a;\n};\n\nShadowViewport.prototype.isPanDifferent = function(newCTM) {\n  return this.activeState.x !== newCTM.e || this.activeState.y !== newCTM.f;\n};\n\n/**\n * Update cached CTM and active state\n *\n * @param {SVGMatrix} newCTM\n */\nShadowViewport.prototype.updateCache = function(newCTM) {\n  this.activeState.zoom = newCTM.a;\n  this.activeState.x = newCTM.e;\n  this.activeState.y = newCTM.f;\n};\n\nShadowViewport.prototype.pendingUpdate = false;\n\n/**\n * Place a request to update CTM on next Frame\n */\nShadowViewport.prototype.updateCTMOnNextFrame = function() {\n  if (!this.pendingUpdate) {\n    // Lock\n    this.pendingUpdate = true;\n\n    // Throttle next update\n    this.requestAnimationFrame.call(window, this.updateCTMCached);\n  }\n};\n\n/**\n * Update viewport CTM with cached CTM\n */\nShadowViewport.prototype.updateCTM = function() {\n  var ctm = this.getCTM();\n\n  // Updates SVG element\n  SvgUtils.setCTM(this.viewport, ctm, this.defs);\n\n  // Free the lock\n  this.pendingUpdate = false;\n\n  // Notify about the update\n  if (this.options.onUpdatedCTM) {\n    this.options.onUpdatedCTM(ctm);\n  }\n};\n\nmodule.exports = function(viewport, options) {\n  return new ShadowViewport(viewport, options);\n};\n","var Wheel = require(\"./uniwheel\"),\n  ControlIcons = require(\"./control-icons\"),\n  Utils = require(\"./utilities\"),\n  SvgUtils = require(\"./svg-utilities\"),\n  ShadowViewport = require(\"./shadow-viewport\");\n\nvar SvgPanZoom = function(svg, options) {\n  this.init(svg, options);\n};\n\nvar optionsDefaults = {\n  viewportSelector: \".svg-pan-zoom_viewport\", // Viewport selector. Can be querySelector string or SVGElement\n  panEnabled: true, // enable or disable panning (default enabled)\n  controlIconsEnabled: false, // insert icons to give user an option in addition to mouse events to control pan/zoom (default disabled)\n  zoomEnabled: true, // enable or disable zooming (default enabled)\n  dblClickZoomEnabled: true, // enable or disable zooming by double clicking (default enabled)\n  mouseWheelZoomEnabled: true, // enable or disable zooming by mouse wheel (default enabled)\n  preventMouseEventsDefault: true, // enable or disable preventDefault for mouse events\n  zoomScaleSensitivity: 0.1, // Zoom sensitivity\n  minZoom: 0.5, // Minimum Zoom level\n  maxZoom: 10, // Maximum Zoom level\n  fit: true, // enable or disable viewport fit in SVG (default true)\n  contain: false, // enable or disable viewport contain the svg (default false)\n  center: true, // enable or disable viewport centering in SVG (default true)\n  refreshRate: \"auto\", // Maximum number of frames per second (altering SVG's viewport)\n  beforeZoom: null,\n  onZoom: null,\n  beforePan: null,\n  onPan: null,\n  customEventsHandler: null,\n  eventsListenerElement: null,\n  onUpdatedCTM: null\n};\n\nvar passiveListenerOption = { passive: true };\n\nSvgPanZoom.prototype.init = function(svg, options) {\n  var that = this;\n\n  this.svg = svg;\n  this.defs = svg.querySelector(\"defs\");\n\n  // Add default attributes to SVG\n  SvgUtils.setupSvgAttributes(this.svg);\n\n  // Set options\n  this.options = Utils.extend(Utils.extend({}, optionsDefaults), options);\n\n  // Set default state\n  this.state = \"none\";\n\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(\n    svg\n  );\n  this.width = boundingClientRectNormalized.width;\n  this.height = boundingClientRectNormalized.height;\n\n  // Init shadow viewport\n  this.viewport = ShadowViewport(\n    SvgUtils.getOrCreateViewport(this.svg, this.options.viewportSelector),\n    {\n      svg: this.svg,\n      width: this.width,\n      height: this.height,\n      fit: this.options.fit,\n      contain: this.options.contain,\n      center: this.options.center,\n      refreshRate: this.options.refreshRate,\n      // Put callbacks into functions as they can change through time\n      beforeZoom: function(oldScale, newScale) {\n        if (that.viewport && that.options.beforeZoom) {\n          return that.options.beforeZoom(oldScale, newScale);\n        }\n      },\n      onZoom: function(scale) {\n        if (that.viewport && that.options.onZoom) {\n          return that.options.onZoom(scale);\n        }\n      },\n      beforePan: function(oldPoint, newPoint) {\n        if (that.viewport && that.options.beforePan) {\n          return that.options.beforePan(oldPoint, newPoint);\n        }\n      },\n      onPan: function(point) {\n        if (that.viewport && that.options.onPan) {\n          return that.options.onPan(point);\n        }\n      },\n      onUpdatedCTM: function(ctm) {\n        if (that.viewport && that.options.onUpdatedCTM) {\n          return that.options.onUpdatedCTM(ctm);\n        }\n      }\n    }\n  );\n\n  // Wrap callbacks into public API context\n  var publicInstance = this.getPublicInstance();\n  publicInstance.setBeforeZoom(this.options.beforeZoom);\n  publicInstance.setOnZoom(this.options.onZoom);\n  publicInstance.setBeforePan(this.options.beforePan);\n  publicInstance.setOnPan(this.options.onPan);\n  publicInstance.setOnUpdatedCTM(this.options.onUpdatedCTM);\n\n  if (this.options.controlIconsEnabled) {\n    ControlIcons.enable(this);\n  }\n\n  // Init events handlers\n  this.lastMouseWheelEventTime = Date.now();\n  this.setupHandlers();\n};\n\n/**\n * Register event handlers\n */\nSvgPanZoom.prototype.setupHandlers = function() {\n  var that = this,\n    prevEvt = null; // use for touchstart event to detect double tap\n\n  this.eventListeners = {\n    // Mouse down group\n    mousedown: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt;\n      return result;\n    },\n    touchstart: function(evt) {\n      var result = that.handleMouseDown(evt, prevEvt);\n      prevEvt = evt;\n      return result;\n    },\n\n    // Mouse up group\n    mouseup: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchend: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n\n    // Mouse move group\n    mousemove: function(evt) {\n      return that.handleMouseMove(evt);\n    },\n    touchmove: function(evt) {\n      return that.handleMouseMove(evt);\n    },\n\n    // Mouse leave group\n    mouseleave: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchleave: function(evt) {\n      return that.handleMouseUp(evt);\n    },\n    touchcancel: function(evt) {\n      return that.handleMouseUp(evt);\n    }\n  };\n\n  // Init custom events handler if available\n  // eslint-disable-next-line eqeqeq\n  if (this.options.customEventsHandler != null) {\n    this.options.customEventsHandler.init({\n      svgElement: this.svg,\n      eventsListenerElement: this.options.eventsListenerElement,\n      instance: this.getPublicInstance()\n    });\n\n    // Custom event handler may halt builtin listeners\n    var haltEventListeners = this.options.customEventsHandler\n      .haltEventListeners;\n    if (haltEventListeners && haltEventListeners.length) {\n      for (var i = haltEventListeners.length - 1; i >= 0; i--) {\n        if (this.eventListeners.hasOwnProperty(haltEventListeners[i])) {\n          delete this.eventListeners[haltEventListeners[i]];\n        }\n      }\n    }\n  }\n\n  // Bind eventListeners\n  for (var event in this.eventListeners) {\n    // Attach event to eventsListenerElement or SVG if not available\n    (this.options.eventsListenerElement || this.svg).addEventListener(\n      event,\n      this.eventListeners[event],\n      !this.options.preventMouseEventsDefault ? passiveListenerOption : false\n    );\n  }\n\n  // Zoom using mouse wheel\n  if (this.options.mouseWheelZoomEnabled) {\n    this.options.mouseWheelZoomEnabled = false; // set to false as enable will set it back to true\n    this.enableMouseWheelZoom();\n  }\n};\n\n/**\n * Enable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.enableMouseWheelZoom = function() {\n  if (!this.options.mouseWheelZoomEnabled) {\n    var that = this;\n\n    // Mouse wheel listener\n    this.wheelListener = function(evt) {\n      return that.handleMouseWheel(evt);\n    };\n\n    // Bind wheelListener\n    var isPassiveListener = !this.options.preventMouseEventsDefault;\n    Wheel.on(\n      this.options.eventsListenerElement || this.svg,\n      this.wheelListener,\n      isPassiveListener\n    );\n\n    this.options.mouseWheelZoomEnabled = true;\n  }\n};\n\n/**\n * Disable ability to zoom using mouse wheel\n */\nSvgPanZoom.prototype.disableMouseWheelZoom = function() {\n  if (this.options.mouseWheelZoomEnabled) {\n    var isPassiveListener = !this.options.preventMouseEventsDefault;\n    Wheel.off(\n      this.options.eventsListenerElement || this.svg,\n      this.wheelListener,\n      isPassiveListener\n    );\n    this.options.mouseWheelZoomEnabled = false;\n  }\n};\n\n/**\n * Handle mouse wheel event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseWheel = function(evt) {\n  if (!this.options.zoomEnabled || this.state !== \"none\") {\n    return;\n  }\n\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Default delta in case that deltaY is not available\n  var delta = evt.deltaY || 1,\n    timeDelta = Date.now() - this.lastMouseWheelEventTime,\n    divider = 3 + Math.max(0, 30 - timeDelta);\n\n  // Update cache\n  this.lastMouseWheelEventTime = Date.now();\n\n  // Make empirical adjustments for browsers that give deltaY in pixels (deltaMode=0)\n  if (\"deltaMode\" in evt && evt.deltaMode === 0 && evt.wheelDelta) {\n    delta = evt.deltaY === 0 ? 0 : Math.abs(evt.wheelDelta) / evt.deltaY;\n  }\n\n  delta =\n    -0.3 < delta && delta < 0.3\n      ? delta\n      : ((delta > 0 ? 1 : -1) * Math.log(Math.abs(delta) + 10)) / divider;\n\n  var inversedScreenCTM = this.svg.getScreenCTM().inverse(),\n    relativeMousePoint = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n      inversedScreenCTM\n    ),\n    zoom = Math.pow(1 + this.options.zoomScaleSensitivity, -1 * delta); // multiplying by neg. 1 so as to make zoom in/out behavior match Google maps behavior\n\n  this.zoomAtPoint(zoom, relativeMousePoint);\n};\n\n/**\n * Zoom in at a SVG point\n *\n * @param  {SVGPoint} point\n * @param  {Float} zoomScale    Number representing how much to zoom\n * @param  {Boolean} zoomAbsolute Default false. If true, zoomScale is treated as an absolute value.\n *                                Otherwise, zoomScale is treated as a multiplied (e.g. 1.10 would zoom in 10%)\n */\nSvgPanZoom.prototype.zoomAtPoint = function(zoomScale, point, zoomAbsolute) {\n  var originalState = this.viewport.getOriginalState();\n\n  if (!zoomAbsolute) {\n    // Fit zoomScale in set bounds\n    if (\n      this.getZoom() * zoomScale <\n      this.options.minZoom * originalState.zoom\n    ) {\n      zoomScale = (this.options.minZoom * originalState.zoom) / this.getZoom();\n    } else if (\n      this.getZoom() * zoomScale >\n      this.options.maxZoom * originalState.zoom\n    ) {\n      zoomScale = (this.options.maxZoom * originalState.zoom) / this.getZoom();\n    }\n  } else {\n    // Fit zoomScale in set bounds\n    zoomScale = Math.max(\n      this.options.minZoom * originalState.zoom,\n      Math.min(this.options.maxZoom * originalState.zoom, zoomScale)\n    );\n    // Find relative scale to achieve desired scale\n    zoomScale = zoomScale / this.getZoom();\n  }\n\n  var oldCTM = this.viewport.getCTM(),\n    relativePoint = point.matrixTransform(oldCTM.inverse()),\n    modifier = this.svg\n      .createSVGMatrix()\n      .translate(relativePoint.x, relativePoint.y)\n      .scale(zoomScale)\n      .translate(-relativePoint.x, -relativePoint.y),\n    newCTM = oldCTM.multiply(modifier);\n\n  if (newCTM.a !== oldCTM.a) {\n    this.viewport.setCTM(newCTM);\n  }\n};\n\n/**\n * Zoom at center point\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.zoom = function(scale, absolute) {\n  this.zoomAtPoint(\n    scale,\n    SvgUtils.getSvgCenterPoint(this.svg, this.width, this.height),\n    absolute\n  );\n};\n\n/**\n * Zoom used by public instance\n *\n * @param  {Float} scale\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoom = function(scale, absolute) {\n  if (absolute) {\n    scale = this.computeFromRelativeZoom(scale);\n  }\n\n  this.zoom(scale, absolute);\n};\n\n/**\n * Zoom at point used by public instance\n *\n * @param  {Float} scale\n * @param  {SVGPoint|Object} point    An object that has x and y attributes\n * @param  {Boolean} absolute Marks zoom scale as relative or absolute\n */\nSvgPanZoom.prototype.publicZoomAtPoint = function(scale, point, absolute) {\n  if (absolute) {\n    // Transform zoom into a relative value\n    scale = this.computeFromRelativeZoom(scale);\n  }\n\n  // If not a SVGPoint but has x and y then create a SVGPoint\n  if (Utils.getType(point) !== \"SVGPoint\") {\n    if (\"x\" in point && \"y\" in point) {\n      point = SvgUtils.createSVGPoint(this.svg, point.x, point.y);\n    } else {\n      throw new Error(\"Given point is invalid\");\n    }\n  }\n\n  this.zoomAtPoint(scale, point, absolute);\n};\n\n/**\n * Get zoom scale\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getZoom = function() {\n  return this.viewport.getZoom();\n};\n\n/**\n * Get zoom scale for public usage\n *\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.getRelativeZoom = function() {\n  return this.viewport.getRelativeZoom();\n};\n\n/**\n * Compute actual zoom from public zoom\n *\n * @param  {Float} zoom\n * @return {Float} zoom scale\n */\nSvgPanZoom.prototype.computeFromRelativeZoom = function(zoom) {\n  return zoom * this.viewport.getOriginalState().zoom;\n};\n\n/**\n * Set zoom to initial state\n */\nSvgPanZoom.prototype.resetZoom = function() {\n  var originalState = this.viewport.getOriginalState();\n\n  this.zoom(originalState.zoom, true);\n};\n\n/**\n * Set pan to initial state\n */\nSvgPanZoom.prototype.resetPan = function() {\n  this.pan(this.viewport.getOriginalState());\n};\n\n/**\n * Set pan and zoom to initial state\n */\nSvgPanZoom.prototype.reset = function() {\n  this.resetZoom();\n  this.resetPan();\n};\n\n/**\n * Handle double click event\n * See handleMouseDown() for alternate detection method\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleDblClick = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  // Check if target was a control button\n  if (this.options.controlIconsEnabled) {\n    var targetClass = evt.target.getAttribute(\"class\") || \"\";\n    if (targetClass.indexOf(\"svg-pan-zoom-control\") > -1) {\n      return false;\n    }\n  }\n\n  var zoomFactor;\n\n  if (evt.shiftKey) {\n    zoomFactor = 1 / ((1 + this.options.zoomScaleSensitivity) * 2); // zoom out when shift key pressed\n  } else {\n    zoomFactor = (1 + this.options.zoomScaleSensitivity) * 2;\n  }\n\n  var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n    this.svg.getScreenCTM().inverse()\n  );\n  this.zoomAtPoint(zoomFactor, point);\n};\n\n/**\n * Handle click event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseDown = function(evt, prevEvt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  Utils.mouseAndTouchNormalize(evt, this.svg);\n\n  // Double click detection; more consistent than ondblclick\n  if (this.options.dblClickZoomEnabled && Utils.isDblClick(evt, prevEvt)) {\n    this.handleDblClick(evt);\n  } else {\n    // Pan mode\n    this.state = \"pan\";\n    this.firstEventCTM = this.viewport.getCTM();\n    this.stateOrigin = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n      this.firstEventCTM.inverse()\n    );\n  }\n};\n\n/**\n * Handle mouse move event\n *\n * @param  {Event} evt\n */\nSvgPanZoom.prototype.handleMouseMove = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  if (this.state === \"pan\" && this.options.panEnabled) {\n    // Pan mode\n    var point = SvgUtils.getEventPoint(evt, this.svg).matrixTransform(\n        this.firstEventCTM.inverse()\n      ),\n      viewportCTM = this.firstEventCTM.translate(\n        point.x - this.stateOrigin.x,\n        point.y - this.stateOrigin.y\n      );\n\n    this.viewport.setCTM(viewportCTM);\n  }\n};\n\n/**\n * Handle mouse button release event\n *\n * @param {Event} evt\n */\nSvgPanZoom.prototype.handleMouseUp = function(evt) {\n  if (this.options.preventMouseEventsDefault) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    } else {\n      evt.returnValue = false;\n    }\n  }\n\n  if (this.state === \"pan\") {\n    // Quit pan mode\n    this.state = \"none\";\n  }\n};\n\n/**\n * Adjust viewport size (only) so it will fit in SVG\n * Does not center image\n */\nSvgPanZoom.prototype.fit = function() {\n  var viewBox = this.viewport.getViewBox(),\n    newScale = Math.min(\n      this.width / viewBox.width,\n      this.height / viewBox.height\n    );\n\n  this.zoom(newScale, true);\n};\n\n/**\n * Adjust viewport size (only) so it will contain the SVG\n * Does not center image\n */\nSvgPanZoom.prototype.contain = function() {\n  var viewBox = this.viewport.getViewBox(),\n    newScale = Math.max(\n      this.width / viewBox.width,\n      this.height / viewBox.height\n    );\n\n  this.zoom(newScale, true);\n};\n\n/**\n * Adjust viewport pan (only) so it will be centered in SVG\n * Does not zoom/fit/contain image\n */\nSvgPanZoom.prototype.center = function() {\n  var viewBox = this.viewport.getViewBox(),\n    offsetX =\n      (this.width - (viewBox.width + viewBox.x * 2) * this.getZoom()) * 0.5,\n    offsetY =\n      (this.height - (viewBox.height + viewBox.y * 2) * this.getZoom()) * 0.5;\n\n  this.getPublicInstance().pan({ x: offsetX, y: offsetY });\n};\n\n/**\n * Update content cached BorderBox\n * Use when viewport contents change\n */\nSvgPanZoom.prototype.updateBBox = function() {\n  this.viewport.simpleViewBoxCache();\n};\n\n/**\n * Pan to a rendered position\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.pan = function(point) {\n  var viewportCTM = this.viewport.getCTM();\n  viewportCTM.e = point.x;\n  viewportCTM.f = point.y;\n  this.viewport.setCTM(viewportCTM);\n};\n\n/**\n * Relatively pan the graph by a specified rendered position vector\n *\n * @param  {Object} point {x: 0, y: 0}\n */\nSvgPanZoom.prototype.panBy = function(point) {\n  var viewportCTM = this.viewport.getCTM();\n  viewportCTM.e += point.x;\n  viewportCTM.f += point.y;\n  this.viewport.setCTM(viewportCTM);\n};\n\n/**\n * Get pan vector\n *\n * @return {Object} {x: 0, y: 0}\n */\nSvgPanZoom.prototype.getPan = function() {\n  var state = this.viewport.getState();\n\n  return { x: state.x, y: state.y };\n};\n\n/**\n * Recalculates cached svg dimensions and controls position\n */\nSvgPanZoom.prototype.resize = function() {\n  // Get dimensions\n  var boundingClientRectNormalized = SvgUtils.getBoundingClientRectNormalized(\n    this.svg\n  );\n  this.width = boundingClientRectNormalized.width;\n  this.height = boundingClientRectNormalized.height;\n\n  // Recalculate original state\n  var viewport = this.viewport;\n  viewport.options.width = this.width;\n  viewport.options.height = this.height;\n  viewport.processCTM();\n\n  // Reposition control icons by re-enabling them\n  if (this.options.controlIconsEnabled) {\n    this.getPublicInstance().disableControlIcons();\n    this.getPublicInstance().enableControlIcons();\n  }\n};\n\n/**\n * Unbind mouse events, free callbacks and destroy public instance\n */\nSvgPanZoom.prototype.destroy = function() {\n  var that = this;\n\n  // Free callbacks\n  this.beforeZoom = null;\n  this.onZoom = null;\n  this.beforePan = null;\n  this.onPan = null;\n  this.onUpdatedCTM = null;\n\n  // Destroy custom event handlers\n  // eslint-disable-next-line eqeqeq\n  if (this.options.customEventsHandler != null) {\n    this.options.customEventsHandler.destroy({\n      svgElement: this.svg,\n      eventsListenerElement: this.options.eventsListenerElement,\n      instance: this.getPublicInstance()\n    });\n  }\n\n  // Unbind eventListeners\n  for (var event in this.eventListeners) {\n    (this.options.eventsListenerElement || this.svg).removeEventListener(\n      event,\n      this.eventListeners[event],\n      !this.options.preventMouseEventsDefault ? passiveListenerOption : false\n    );\n  }\n\n  // Unbind wheelListener\n  this.disableMouseWheelZoom();\n\n  // Remove control icons\n  this.getPublicInstance().disableControlIcons();\n\n  // Reset zoom and pan\n  this.reset();\n\n  // Remove instance from instancesStore\n  instancesStore = instancesStore.filter(function(instance) {\n    return instance.svg !== that.svg;\n  });\n\n  // Delete options and its contents\n  delete this.options;\n\n  // Delete viewport to make public shadow viewport functions uncallable\n  delete this.viewport;\n\n  // Destroy public instance and rewrite getPublicInstance\n  delete this.publicInstance;\n  delete this.pi;\n  this.getPublicInstance = function() {\n    return null;\n  };\n};\n\n/**\n * Returns a public instance object\n *\n * @return {Object} Public instance object\n */\nSvgPanZoom.prototype.getPublicInstance = function() {\n  var that = this;\n\n  // Create cache\n  if (!this.publicInstance) {\n    this.publicInstance = this.pi = {\n      // Pan\n      enablePan: function() {\n        that.options.panEnabled = true;\n        return that.pi;\n      },\n      disablePan: function() {\n        that.options.panEnabled = false;\n        return that.pi;\n      },\n      isPanEnabled: function() {\n        return !!that.options.panEnabled;\n      },\n      pan: function(point) {\n        that.pan(point);\n        return that.pi;\n      },\n      panBy: function(point) {\n        that.panBy(point);\n        return that.pi;\n      },\n      getPan: function() {\n        return that.getPan();\n      },\n      // Pan event\n      setBeforePan: function(fn) {\n        that.options.beforePan =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      setOnPan: function(fn) {\n        that.options.onPan =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Zoom and Control Icons\n      enableZoom: function() {\n        that.options.zoomEnabled = true;\n        return that.pi;\n      },\n      disableZoom: function() {\n        that.options.zoomEnabled = false;\n        return that.pi;\n      },\n      isZoomEnabled: function() {\n        return !!that.options.zoomEnabled;\n      },\n      enableControlIcons: function() {\n        if (!that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = true;\n          ControlIcons.enable(that);\n        }\n        return that.pi;\n      },\n      disableControlIcons: function() {\n        if (that.options.controlIconsEnabled) {\n          that.options.controlIconsEnabled = false;\n          ControlIcons.disable(that);\n        }\n        return that.pi;\n      },\n      isControlIconsEnabled: function() {\n        return !!that.options.controlIconsEnabled;\n      },\n      // Double click zoom\n      enableDblClickZoom: function() {\n        that.options.dblClickZoomEnabled = true;\n        return that.pi;\n      },\n      disableDblClickZoom: function() {\n        that.options.dblClickZoomEnabled = false;\n        return that.pi;\n      },\n      isDblClickZoomEnabled: function() {\n        return !!that.options.dblClickZoomEnabled;\n      },\n      // Mouse wheel zoom\n      enableMouseWheelZoom: function() {\n        that.enableMouseWheelZoom();\n        return that.pi;\n      },\n      disableMouseWheelZoom: function() {\n        that.disableMouseWheelZoom();\n        return that.pi;\n      },\n      isMouseWheelZoomEnabled: function() {\n        return !!that.options.mouseWheelZoomEnabled;\n      },\n      // Zoom scale and bounds\n      setZoomScaleSensitivity: function(scale) {\n        that.options.zoomScaleSensitivity = scale;\n        return that.pi;\n      },\n      setMinZoom: function(zoom) {\n        that.options.minZoom = zoom;\n        return that.pi;\n      },\n      setMaxZoom: function(zoom) {\n        that.options.maxZoom = zoom;\n        return that.pi;\n      },\n      // Zoom event\n      setBeforeZoom: function(fn) {\n        that.options.beforeZoom =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      setOnZoom: function(fn) {\n        that.options.onZoom =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Zooming\n      zoom: function(scale) {\n        that.publicZoom(scale, true);\n        return that.pi;\n      },\n      zoomBy: function(scale) {\n        that.publicZoom(scale, false);\n        return that.pi;\n      },\n      zoomAtPoint: function(scale, point) {\n        that.publicZoomAtPoint(scale, point, true);\n        return that.pi;\n      },\n      zoomAtPointBy: function(scale, point) {\n        that.publicZoomAtPoint(scale, point, false);\n        return that.pi;\n      },\n      zoomIn: function() {\n        this.zoomBy(1 + that.options.zoomScaleSensitivity);\n        return that.pi;\n      },\n      zoomOut: function() {\n        this.zoomBy(1 / (1 + that.options.zoomScaleSensitivity));\n        return that.pi;\n      },\n      getZoom: function() {\n        return that.getRelativeZoom();\n      },\n      // CTM update\n      setOnUpdatedCTM: function(fn) {\n        that.options.onUpdatedCTM =\n          fn === null ? null : Utils.proxy(fn, that.publicInstance);\n        return that.pi;\n      },\n      // Reset\n      resetZoom: function() {\n        that.resetZoom();\n        return that.pi;\n      },\n      resetPan: function() {\n        that.resetPan();\n        return that.pi;\n      },\n      reset: function() {\n        that.reset();\n        return that.pi;\n      },\n      // Fit, Contain and Center\n      fit: function() {\n        that.fit();\n        return that.pi;\n      },\n      contain: function() {\n        that.contain();\n        return that.pi;\n      },\n      center: function() {\n        that.center();\n        return that.pi;\n      },\n      // Size and Resize\n      updateBBox: function() {\n        that.updateBBox();\n        return that.pi;\n      },\n      resize: function() {\n        that.resize();\n        return that.pi;\n      },\n      getSizes: function() {\n        return {\n          width: that.width,\n          height: that.height,\n          realZoom: that.getZoom(),\n          viewBox: that.viewport.getViewBox()\n        };\n      },\n      // Destroy\n      destroy: function() {\n        that.destroy();\n        return that.pi;\n      }\n    };\n  }\n\n  return this.publicInstance;\n};\n\n/**\n * Stores pairs of instances of SvgPanZoom and SVG\n * Each pair is represented by an object {svg: SVGSVGElement, instance: SvgPanZoom}\n *\n * @type {Array}\n */\nvar instancesStore = [];\n\nvar svgPanZoom = function(elementOrSelector, options) {\n  var svg = Utils.getSvg(elementOrSelector);\n\n  if (svg === null) {\n    return null;\n  } else {\n    // Look for existent instance\n    for (var i = instancesStore.length - 1; i >= 0; i--) {\n      if (instancesStore[i].svg === svg) {\n        return instancesStore[i].instance.getPublicInstance();\n      }\n    }\n\n    // If instance not found - create one\n    instancesStore.push({\n      svg: svg,\n      instance: new SvgPanZoom(svg, options)\n    });\n\n    // Return just pushed instance\n    return instancesStore[\n      instancesStore.length - 1\n    ].instance.getPublicInstance();\n  }\n};\n\nmodule.exports = svgPanZoom;\n","var Utils = require(\"./utilities\"),\n  _browser = \"unknown\";\n\n// http://stackoverflow.com/questions/9847580/how-to-detect-safari-chrome-ie-firefox-and-opera-browser\nif (/*@cc_on!@*/ false || !!document.documentMode) {\n  // internet explorer\n  _browser = \"ie\";\n}\n\nmodule.exports = {\n  svgNS: \"http://www.w3.org/2000/svg\",\n  xmlNS: \"http://www.w3.org/XML/1998/namespace\",\n  xmlnsNS: \"http://www.w3.org/2000/xmlns/\",\n  xlinkNS: \"http://www.w3.org/1999/xlink\",\n  evNS: \"http://www.w3.org/2001/xml-events\",\n\n  /**\n   * Get svg dimensions: width and height\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {Object}     {width: 0, height: 0}\n   */\n  getBoundingClientRectNormalized: function(svg) {\n    if (svg.clientWidth && svg.clientHeight) {\n      return { width: svg.clientWidth, height: svg.clientHeight };\n    } else if (!!svg.getBoundingClientRect()) {\n      return svg.getBoundingClientRect();\n    } else {\n      throw new Error(\"Cannot get BoundingClientRect for SVG.\");\n    }\n  },\n\n  /**\n   * Gets g element with class of \"viewport\" or creates it if it doesn't exist\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGElement}     g (group) element\n   */\n  getOrCreateViewport: function(svg, selector) {\n    var viewport = null;\n\n    if (Utils.isElement(selector)) {\n      viewport = selector;\n    } else {\n      viewport = svg.querySelector(selector);\n    }\n\n    // Check if there is just one main group in SVG\n    if (!viewport) {\n      var childNodes = Array.prototype.slice\n        .call(svg.childNodes || svg.children)\n        .filter(function(el) {\n          return el.nodeName !== \"defs\" && el.nodeName !== \"#text\";\n        });\n\n      // Node name should be SVGGElement and should have no transform attribute\n      // Groups with transform are not used as viewport because it involves parsing of all transform possibilities\n      if (\n        childNodes.length === 1 &&\n        childNodes[0].nodeName === \"g\" &&\n        childNodes[0].getAttribute(\"transform\") === null\n      ) {\n        viewport = childNodes[0];\n      }\n    }\n\n    // If no favorable group element exists then create one\n    if (!viewport) {\n      var viewportId =\n        \"viewport-\" + new Date().toISOString().replace(/\\D/g, \"\");\n      viewport = document.createElementNS(this.svgNS, \"g\");\n      viewport.setAttribute(\"id\", viewportId);\n\n      // Internet Explorer (all versions?) can't use childNodes, but other browsers prefer (require?) using childNodes\n      var svgChildren = svg.childNodes || svg.children;\n      if (!!svgChildren && svgChildren.length > 0) {\n        for (var i = svgChildren.length; i > 0; i--) {\n          // Move everything into viewport except defs\n          if (svgChildren[svgChildren.length - i].nodeName !== \"defs\") {\n            viewport.appendChild(svgChildren[svgChildren.length - i]);\n          }\n        }\n      }\n      svg.appendChild(viewport);\n    }\n\n    // Parse class names\n    var classNames = [];\n    if (viewport.getAttribute(\"class\")) {\n      classNames = viewport.getAttribute(\"class\").split(\" \");\n    }\n\n    // Set class (if not set already)\n    if (!~classNames.indexOf(\"svg-pan-zoom_viewport\")) {\n      classNames.push(\"svg-pan-zoom_viewport\");\n      viewport.setAttribute(\"class\", classNames.join(\" \"));\n    }\n\n    return viewport;\n  },\n\n  /**\n   * Set SVG attributes\n   *\n   * @param  {SVGSVGElement} svg\n   */\n  setupSvgAttributes: function(svg) {\n    // Setting default attributes\n    svg.setAttribute(\"xmlns\", this.svgNS);\n    svg.setAttributeNS(this.xmlnsNS, \"xmlns:xlink\", this.xlinkNS);\n    svg.setAttributeNS(this.xmlnsNS, \"xmlns:ev\", this.evNS);\n\n    // Needed for Internet Explorer, otherwise the viewport overflows\n    if (svg.parentNode !== null) {\n      var style = svg.getAttribute(\"style\") || \"\";\n      if (style.toLowerCase().indexOf(\"overflow\") === -1) {\n        svg.setAttribute(\"style\", \"overflow: hidden; \" + style);\n      }\n    }\n  },\n\n  /**\n   * How long Internet Explorer takes to finish updating its display (ms).\n   */\n  internetExplorerRedisplayInterval: 300,\n\n  /**\n   * Forces the browser to redisplay all SVG elements that rely on an\n   * element defined in a 'defs' section. It works globally, for every\n   * available defs element on the page.\n   * The throttling is intentionally global.\n   *\n   * This is only needed for IE. It is as a hack to make markers (and 'use' elements?)\n   * visible after pan/zoom when there are multiple SVGs on the page.\n   * See bug report: https://connect.microsoft.com/IE/feedback/details/781964/\n   * also see svg-pan-zoom issue: https://github.com/ariutta/svg-pan-zoom/issues/62\n   */\n  refreshDefsGlobal: Utils.throttle(\n    function() {\n      var allDefs = document.querySelectorAll(\"defs\");\n      var allDefsCount = allDefs.length;\n      for (var i = 0; i < allDefsCount; i++) {\n        var thisDefs = allDefs[i];\n        thisDefs.parentNode.insertBefore(thisDefs, thisDefs);\n      }\n    },\n    this ? this.internetExplorerRedisplayInterval : null\n  ),\n\n  /**\n   * Sets the current transform matrix of an element\n   *\n   * @param {SVGElement} element\n   * @param {SVGMatrix} matrix  CTM\n   * @param {SVGElement} defs\n   */\n  setCTM: function(element, matrix, defs) {\n    var that = this,\n      s =\n        \"matrix(\" +\n        matrix.a +\n        \",\" +\n        matrix.b +\n        \",\" +\n        matrix.c +\n        \",\" +\n        matrix.d +\n        \",\" +\n        matrix.e +\n        \",\" +\n        matrix.f +\n        \")\";\n\n    element.setAttributeNS(null, \"transform\", s);\n    if (\"transform\" in element.style) {\n      element.style.transform = s;\n    } else if (\"-ms-transform\" in element.style) {\n      element.style[\"-ms-transform\"] = s;\n    } else if (\"-webkit-transform\" in element.style) {\n      element.style[\"-webkit-transform\"] = s;\n    }\n\n    // IE has a bug that makes markers disappear on zoom (when the matrix \"a\" and/or \"d\" elements change)\n    // see http://stackoverflow.com/questions/17654578/svg-marker-does-not-work-in-ie9-10\n    // and http://srndolha.wordpress.com/2013/11/25/svg-line-markers-may-disappear-in-internet-explorer-11/\n    if (_browser === \"ie\" && !!defs) {\n      // this refresh is intended for redisplaying the SVG during zooming\n      defs.parentNode.insertBefore(defs, defs);\n      // this refresh is intended for redisplaying the other SVGs on a page when panning a given SVG\n      // it is also needed for the given SVG itself, on zoomEnd, if the SVG contains any markers that\n      // are located under any other element(s).\n      window.setTimeout(function() {\n        that.refreshDefsGlobal();\n      }, that.internetExplorerRedisplayInterval);\n    }\n  },\n\n  /**\n   * Instantiate an SVGPoint object with given event coordinates\n   *\n   * @param {Event} evt\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}     point\n   */\n  getEventPoint: function(evt, svg) {\n    var point = svg.createSVGPoint();\n\n    Utils.mouseAndTouchNormalize(evt, svg);\n\n    point.x = evt.clientX;\n    point.y = evt.clientY;\n\n    return point;\n  },\n\n  /**\n   * Get SVG center point\n   *\n   * @param  {SVGSVGElement} svg\n   * @return {SVGPoint}\n   */\n  getSvgCenterPoint: function(svg, width, height) {\n    return this.createSVGPoint(svg, width / 2, height / 2);\n  },\n\n  /**\n   * Create a SVGPoint with given x and y\n   *\n   * @param  {SVGSVGElement} svg\n   * @param  {Number} x\n   * @param  {Number} y\n   * @return {SVGPoint}\n   */\n  createSVGPoint: function(svg, x, y) {\n    var point = svg.createSVGPoint();\n    point.x = x;\n    point.y = y;\n\n    return point;\n  }\n};\n","// uniwheel 0.1.2 (customized)\n// A unified cross browser mouse wheel event handler\n// https://github.com/teemualap/uniwheel\n\nmodule.exports = (function(){\n\n  //Full details: https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel\n\n  var prefix = \"\", _addEventListener, _removeEventListener, support, fns = [];\n  var passiveOption = {passive: true};\n\n  // detect event model\n  if ( window.addEventListener ) {\n    _addEventListener = \"addEventListener\";\n    _removeEventListener = \"removeEventListener\";\n  } else {\n    _addEventListener = \"attachEvent\";\n    _removeEventListener = \"detachEvent\";\n    prefix = \"on\";\n  }\n\n  // detect available wheel event\n  support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n            document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n            \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n\n  function createCallback(element,callback) {\n\n    var fn = function(originalEvent) {\n\n      !originalEvent && ( originalEvent = window.event );\n\n      // create a normalized event object\n      var event = {\n        // keep a ref to the original event object\n        originalEvent: originalEvent,\n        target: originalEvent.target || originalEvent.srcElement,\n        type: \"wheel\",\n        deltaMode: originalEvent.type == \"MozMousePixelScroll\" ? 0 : 1,\n        deltaX: 0,\n        delatZ: 0,\n        preventDefault: function() {\n          originalEvent.preventDefault ?\n            originalEvent.preventDefault() :\n            originalEvent.returnValue = false;\n        }\n      };\n\n      // calculate deltaY (and deltaX) according to the event\n      if ( support == \"mousewheel\" ) {\n        event.deltaY = - 1/40 * originalEvent.wheelDelta;\n        // Webkit also support wheelDeltaX\n        originalEvent.wheelDeltaX && ( event.deltaX = - 1/40 * originalEvent.wheelDeltaX );\n      } else {\n        event.deltaY = originalEvent.detail;\n      }\n\n      // it's time to fire the callback\n      return callback( event );\n\n    };\n\n    fns.push({\n      element: element,\n      fn: fn,\n    });\n\n    return fn;\n  }\n\n  function getCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns[i].fn;\n      }\n    }\n    return function(){};\n  }\n\n  function removeCallback(element) {\n    for (var i = 0; i < fns.length; i++) {\n      if (fns[i].element === element) {\n        return fns.splice(i,1);\n      }\n    }\n  }\n\n  function _addWheelListener(elem, eventName, callback, isPassiveListener ) {\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = createCallback(elem, callback);\n    }\n\n    elem[_addEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n  }\n\n  function _removeWheelListener(elem, eventName, callback, isPassiveListener ) {\n\n    var cb;\n\n    if (support === \"wheel\") {\n      cb = callback;\n    } else {\n      cb = getCallback(elem);\n    }\n\n    elem[_removeEventListener](prefix + eventName, cb, isPassiveListener ? passiveOption : false);\n\n    removeCallback(elem);\n  }\n\n  function addWheelListener( elem, callback, isPassiveListener ) {\n    _addWheelListener(elem, support, callback, isPassiveListener );\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _addWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener );\n    }\n  }\n\n  function removeWheelListener(elem, callback, isPassiveListener){\n    _removeWheelListener(elem, support, callback, isPassiveListener);\n\n    // handle MozMousePixelScroll in older Firefox\n    if( support == \"DOMMouseScroll\" ) {\n      _removeWheelListener(elem, \"MozMousePixelScroll\", callback, isPassiveListener);\n    }\n  }\n\n  return {\n    on: addWheelListener,\n    off: removeWheelListener\n  };\n\n})();\n","module.exports = {\n  /**\n   * Extends an object\n   *\n   * @param  {Object} target object to extend\n   * @param  {Object} source object to take properties from\n   * @return {Object}        extended object\n   */\n  extend: function(target, source) {\n    target = target || {};\n    for (var prop in source) {\n      // Go recursively\n      if (this.isObject(source[prop])) {\n        target[prop] = this.extend(target[prop], source[prop]);\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n    return target;\n  },\n\n  /**\n   * Checks if an object is a DOM element\n   *\n   * @param  {Object}  o HTML element or String\n   * @return {Boolean}   returns true if object is a DOM element\n   */\n  isElement: function(o) {\n    return (\n      o instanceof HTMLElement ||\n      o instanceof SVGElement ||\n      o instanceof SVGSVGElement || //DOM2\n      (o &&\n        typeof o === \"object\" &&\n        o !== null &&\n        o.nodeType === 1 &&\n        typeof o.nodeName === \"string\")\n    );\n  },\n\n  /**\n   * Checks if an object is an Object\n   *\n   * @param  {Object}  o Object\n   * @return {Boolean}   returns true if object is an Object\n   */\n  isObject: function(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n  },\n\n  /**\n   * Checks if variable is Number\n   *\n   * @param  {Integer|Float}  n\n   * @return {Boolean}   returns true if variable is Number\n   */\n  isNumber: function(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  },\n\n  /**\n   * Search for an SVG element\n   *\n   * @param  {Object|String} elementOrSelector DOM Element or selector String\n   * @return {Object|Null}                   SVG or null\n   */\n  getSvg: function(elementOrSelector) {\n    var element, svg;\n\n    if (!this.isElement(elementOrSelector)) {\n      // If selector provided\n      if (\n        typeof elementOrSelector === \"string\" ||\n        elementOrSelector instanceof String\n      ) {\n        // Try to find the element\n        element = document.querySelector(elementOrSelector);\n\n        if (!element) {\n          throw new Error(\n            \"Provided selector did not find any elements. Selector: \" +\n              elementOrSelector\n          );\n          return null;\n        }\n      } else {\n        throw new Error(\"Provided selector is not an HTML object nor String\");\n        return null;\n      }\n    } else {\n      element = elementOrSelector;\n    }\n\n    if (element.tagName.toLowerCase() === \"svg\") {\n      svg = element;\n    } else {\n      if (element.tagName.toLowerCase() === \"object\") {\n        svg = element.contentDocument.documentElement;\n      } else {\n        if (element.tagName.toLowerCase() === \"embed\") {\n          svg = element.getSVGDocument().documentElement;\n        } else {\n          if (element.tagName.toLowerCase() === \"img\") {\n            throw new Error(\n              'Cannot script an SVG in an \"img\" element. Please use an \"object\" element or an in-line SVG.'\n            );\n          } else {\n            throw new Error(\"Cannot get SVG.\");\n          }\n          return null;\n        }\n      }\n    }\n\n    return svg;\n  },\n\n  /**\n   * Attach a given context to a function\n   * @param  {Function} fn      Function\n   * @param  {Object}   context Context\n   * @return {Function}           Function with certain context\n   */\n  proxy: function(fn, context) {\n    return function() {\n      return fn.apply(context, arguments);\n    };\n  },\n\n  /**\n   * Returns object type\n   * Uses toString that returns [object SVGPoint]\n   * And than parses object type from string\n   *\n   * @param  {Object} o Any object\n   * @return {String}   Object type\n   */\n  getType: function(o) {\n    return Object.prototype.toString\n      .apply(o)\n      .replace(/^\\[object\\s/, \"\")\n      .replace(/\\]$/, \"\");\n  },\n\n  /**\n   * If it is a touch event than add clientX and clientY to event object\n   *\n   * @param  {Event} evt\n   * @param  {SVGSVGElement} svg\n   */\n  mouseAndTouchNormalize: function(evt, svg) {\n    // If no clientX then fallback\n    if (evt.clientX === void 0 || evt.clientX === null) {\n      // Fallback\n      evt.clientX = 0;\n      evt.clientY = 0;\n\n      // If it is a touch event\n      if (evt.touches !== void 0 && evt.touches.length) {\n        if (evt.touches[0].clientX !== void 0) {\n          evt.clientX = evt.touches[0].clientX;\n          evt.clientY = evt.touches[0].clientY;\n        } else if (evt.touches[0].pageX !== void 0) {\n          var rect = svg.getBoundingClientRect();\n\n          evt.clientX = evt.touches[0].pageX - rect.left;\n          evt.clientY = evt.touches[0].pageY - rect.top;\n        }\n        // If it is a custom event\n      } else if (evt.originalEvent !== void 0) {\n        if (evt.originalEvent.clientX !== void 0) {\n          evt.clientX = evt.originalEvent.clientX;\n          evt.clientY = evt.originalEvent.clientY;\n        }\n      }\n    }\n  },\n\n  /**\n   * Check if an event is a double click/tap\n   * TODO: For touch gestures use a library (hammer.js) that takes in account other events\n   * (touchmove and touchend). It should take in account tap duration and traveled distance\n   *\n   * @param  {Event}  evt\n   * @param  {Event}  prevEvt Previous Event\n   * @return {Boolean}\n   */\n  isDblClick: function(evt, prevEvt) {\n    // Double click detected by browser\n    if (evt.detail === 2) {\n      return true;\n    }\n    // Try to compare events\n    else if (prevEvt !== void 0 && prevEvt !== null) {\n      var timeStampDiff = evt.timeStamp - prevEvt.timeStamp, // should be lower than 250 ms\n        touchesDistance = Math.sqrt(\n          Math.pow(evt.clientX - prevEvt.clientX, 2) +\n            Math.pow(evt.clientY - prevEvt.clientY, 2)\n        );\n\n      return timeStampDiff < 250 && touchesDistance < 10;\n    }\n\n    // Nothing found\n    return false;\n  },\n\n  /**\n   * Returns current timestamp as an integer\n   *\n   * @return {Number}\n   */\n  now:\n    Date.now ||\n    function() {\n      return new Date().getTime();\n    },\n\n  // From underscore.\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  throttle: function(func, wait, options) {\n    var that = this;\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) {\n      options = {};\n    }\n    var later = function() {\n      previous = options.leading === false ? 0 : that.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) {\n        context = args = null;\n      }\n    };\n    return function() {\n      var now = that.now();\n      if (!previous && options.leading === false) {\n        previous = now;\n      }\n      var remaining = wait - (now - previous);\n      context = this; // eslint-disable-line consistent-this\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) {\n          context = args = null;\n        }\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  },\n\n  /**\n   * Create a requestAnimationFrame simulation\n   *\n   * @param  {Number|String} refreshRate\n   * @return {Function}\n   */\n  createRequestAnimationFrame: function(refreshRate) {\n    var timeout = null;\n\n    // Convert refreshRate to timeout\n    if (refreshRate !== \"auto\" && refreshRate < 60 && refreshRate > 1) {\n      timeout = Math.floor(1000 / refreshRate);\n    }\n\n    if (timeout === null) {\n      return window.requestAnimationFrame || requestTimeout(33);\n    } else {\n      return requestTimeout(timeout);\n    }\n  }\n};\n\n/**\n * Create a callback that will execute after a given timeout\n *\n * @param  {Function} timeout\n * @return {Function}\n */\nfunction requestTimeout(timeout) {\n  return function(callback) {\n    window.setTimeout(callback, timeout);\n  };\n}\n","/*! svgMap | https://github.com/StephanWagner/svgMap | MIT License | Copyright Stephan Wagner | https://stephanwagner.me */\nfunction svgMapWrapper(i){function a(l){this.init(l)}return a.prototype.init=function(l){this.options=Object.assign({},{targetElementID:\"\",minZoom:1,maxZoom:25,initialZoom:1.06,initialPan:{x:0,y:0},zoomScaleSensitivity:.2,mouseWheelZoomEnabled:!0,mouseWheelZoomWithKey:!1,mouseWheelKeyMessage:\"Press the [ALT] key to zoom\",mouseWheelKeyMessageMac:\"Press the [COMMAND] key to zoom\",colorMax:\"#CC0033\",colorMin:\"#FFE5D9\",colorNoData:\"#E2E2E2\",manualColorAttribute:\"color\",flagType:\"image\",flagURL:\"https://cdn.jsdelivr.net/gh/hjnilsson/country-flags@latest/svg/{0}.svg\",hideFlag:!1,hideMissingData:!1,noDataText:\"No data available\",touchLink:!1,showZoomReset:!1,onGetTooltip:function(l,t,e){return null},countries:{EH:!0,Crimea:\"UA\"},showContinentSelector:!1},l||{}),this.options.targetElementID&&document.getElementById(this.options.targetElementID)||this.error(\"Target element not found\"),this.options.data||this.error(\"No data\"),this.id=this.options.targetElementID,this.wrapper=document.getElementById(this.options.targetElementID),this.wrapper.classList.add(\"svgMap-wrapper\"),this.container=document.createElement(\"div\"),this.container.classList.add(\"svgMap-container\"),this.wrapper.appendChild(this.container),this.options.mouseWheelZoomEnabled&&this.options.mouseWheelZoomWithKey&&(this.addMouseWheelZoomNotice(),this.addMouseWheelZoomWithKeyEvents()),this.mapContainer=document.createElement(\"div\"),this.mapContainer.classList.add(\"svgMap-map-container\"),this.container.appendChild(this.mapContainer),this.createMap(),this.applyData(this.options.data)},a.prototype.countries={AF:\"Afghanistan\",AX:\"Åland Islands\",AL:\"Albania\",DZ:\"Algeria\",AS:\"American Samoa\",AD:\"Andorra\",AO:\"Angola\",AI:\"Anguilla\",AQ:\"Antarctica\",AG:\"Antigua and Barbuda\",AR:\"Argentina\",AM:\"Armenia\",AW:\"Aruba\",AU:\"Australia\",AT:\"Austria\",AZ:\"Azerbaijan\",BS:\"Bahamas\",BH:\"Bahrain\",BD:\"Bangladesh\",BB:\"Barbados\",BY:\"Belarus\",BE:\"Belgium\",BZ:\"Belize\",BJ:\"Benin\",BM:\"Bermuda\",BT:\"Bhutan\",BO:\"Bolivia\",BA:\"Bosnia and Herzegovina\",BW:\"Botswana\",BR:\"Brazil\",IO:\"British Indian Ocean Territory\",VG:\"British Virgin Islands\",BN:\"Brunei Darussalam\",BG:\"Bulgaria\",BF:\"Burkina Faso\",BI:\"Burundi\",KH:\"Cambodia\",CM:\"Cameroon\",CA:\"Canada\",CV:\"Cape Verde\",BQ:\"Caribbean Netherlands\",KY:\"Cayman Islands\",CF:\"Central African Republic\",TD:\"Chad\",CL:\"Chile\",CN:\"China\",CX:\"Christmas Island\",CC:\"Cocos Islands\",CO:\"Colombia\",KM:\"Comoros\",CG:\"Congo\",CK:\"Cook Islands\",CR:\"Costa Rica\",HR:\"Croatia\",CU:\"Cuba\",CW:\"Curaçao\",CY:\"Cyprus\",CZ:\"Czech Republic\",CD:\"Democratic Republic of the Congo\",DK:\"Denmark\",DJ:\"Djibouti\",DM:\"Dominica\",DO:\"Dominican Republic\",EC:\"Ecuador\",EG:\"Egypt\",SV:\"El Salvador\",GQ:\"Equatorial Guinea\",ER:\"Eritrea\",EE:\"Estonia\",ET:\"Ethiopia\",FK:\"Falkland Islands\",FO:\"Faroe Islands\",FM:\"Federated States of Micronesia\",FJ:\"Fiji\",FI:\"Finland\",FR:\"France\",GF:\"French Guiana\",PF:\"French Polynesia\",TF:\"French Southern Territories\",GA:\"Gabon\",GM:\"Gambia\",GE:\"Georgia\",DE:\"Germany\",GH:\"Ghana\",GI:\"Gibraltar\",GR:\"Greece\",GL:\"Greenland\",GD:\"Grenada\",GP:\"Guadeloupe\",GU:\"Guam\",GT:\"Guatemala\",GN:\"Guinea\",GW:\"Guinea-Bissau\",GY:\"Guyana\",HT:\"Haiti\",HN:\"Honduras\",HK:\"Hong Kong\",HU:\"Hungary\",IS:\"Iceland\",IN:\"India\",ID:\"Indonesia\",IR:\"Iran\",IQ:\"Iraq\",IE:\"Ireland\",IM:\"Isle of Man\",IL:\"Israel\",IT:\"Italy\",CI:\"Ivory Coast\",JM:\"Jamaica\",JP:\"Japan\",JE:\"Jersey\",JO:\"Jordan\",KZ:\"Kazakhstan\",KE:\"Kenya\",KI:\"Kiribati\",XK:\"Kosovo\",KW:\"Kuwait\",KG:\"Kyrgyzstan\",LA:\"Laos\",LV:\"Latvia\",LB:\"Lebanon\",LS:\"Lesotho\",LR:\"Liberia\",LY:\"Libya\",LI:\"Liechtenstein\",LT:\"Lithuania\",LU:\"Luxembourg\",MO:\"Macau\",MK:\"Macedonia\",MG:\"Madagascar\",MW:\"Malawi\",MY:\"Malaysia\",MV:\"Maldives\",ML:\"Mali\",MT:\"Malta\",MH:\"Marshall Islands\",MQ:\"Martinique\",MR:\"Mauritania\",MU:\"Mauritius\",YT:\"Mayotte\",MX:\"Mexico\",MD:\"Moldova\",MC:\"Monaco\",MN:\"Mongolia\",ME:\"Montenegro\",MS:\"Montserrat\",MA:\"Morocco\",MZ:\"Mozambique\",MM:\"Myanmar\",NA:\"Namibia\",NR:\"Nauru\",NP:\"Nepal\",NL:\"Netherlands\",NC:\"New Caledonia\",NZ:\"New Zealand\",NI:\"Nicaragua\",NE:\"Niger\",NG:\"Nigeria\",NU:\"Niue\",NF:\"Norfolk Island\",KP:\"North Korea\",MP:\"Northern Mariana Islands\",NO:\"Norway\",OM:\"Oman\",PK:\"Pakistan\",PW:\"Palau\",PS:\"Palestine\",PA:\"Panama\",PG:\"Papua New Guinea\",PY:\"Paraguay\",PE:\"Peru\",PH:\"Philippines\",PN:\"Pitcairn Islands\",PL:\"Poland\",PT:\"Portugal\",PR:\"Puerto Rico\",QA:\"Qatar\",RE:\"Reunion\",RO:\"Romania\",RU:\"Russia\",RW:\"Rwanda\",SH:\"Saint Helena\",KN:\"Saint Kitts and Nevis\",LC:\"Saint Lucia\",PM:\"Saint Pierre and Miquelon\",VC:\"Saint Vincent and the Grenadines\",WS:\"Samoa\",SM:\"San Marino\",ST:\"São Tomé and Príncipe\",SA:\"Saudi Arabia\",SN:\"Senegal\",RS:\"Serbia\",SC:\"Seychelles\",SL:\"Sierra Leone\",SG:\"Singapore\",SX:\"Sint Maarten\",SK:\"Slovakia\",SI:\"Slovenia\",SB:\"Solomon Islands\",SO:\"Somalia\",ZA:\"South Africa\",GS:\"South Georgia and the South Sandwich Islands\",KR:\"South Korea\",SS:\"South Sudan\",ES:\"Spain\",LK:\"Sri Lanka\",SD:\"Sudan\",SR:\"Suriname\",SJ:\"Svalbard and Jan Mayen\",SZ:\"Eswatini\",SE:\"Sweden\",CH:\"Switzerland\",SY:\"Syria\",TW:\"Taiwan\",TJ:\"Tajikistan\",TZ:\"Tanzania\",TH:\"Thailand\",TL:\"Timor-Leste\",TG:\"Togo\",TK:\"Tokelau\",TO:\"Tonga\",TT:\"Trinidad and Tobago\",TN:\"Tunisia\",TR:\"Turkey\",TM:\"Turkmenistan\",TC:\"Turks and Caicos Islands\",TV:\"Tuvalu\",UG:\"Uganda\",UA:\"Ukraine\",AE:\"United Arab Emirates\",GB:\"United Kingdom\",US:\"United States\",UM:\"United States Minor Outlying Islands\",VI:\"United States Virgin Islands\",UY:\"Uruguay\",UZ:\"Uzbekistan\",VU:\"Vanuatu\",VA:\"Vatican City\",VE:\"Venezuela\",VN:\"Vietnam\",WF:\"Wallis and Futuna\",EH:\"Western Sahara\",YE:\"Yemen\",ZM:\"Zambia\",ZW:\"Zimbabwe\"},a.prototype.applyData=function(o){var i=null,a=null;Object.keys(o.values).forEach(function(l){l=parseInt(o.values[l][o.applyData],10);(i=null===i?l:i)<l&&(i=l),l<(a=null===a?l:a)&&(a=l)}),o.data[o.applyData].thresholdMax&&(i=Math.min(i,o.data[o.applyData].thresholdMax)),o.data[o.applyData].thresholdMin&&(a=Math.max(a,o.data[o.applyData].thresholdMin)),Object.keys(this.countries).forEach(function(l){var t,e=document.getElementById(this.id+\"-map-country-\"+l);e&&(o.values[l]?void 0===o.values[l].color?(t=Math.max(a,parseInt(o.values[l][o.applyData],10)),t=Math.max(0,Math.min(1,(t-a)/(i-a))),t=this.getColor(this.options.colorMax,this.options.colorMin,t||0===t?t:1),e.setAttribute(\"fill\",t)):e.setAttribute(\"fill\",o.values[l].color):e.setAttribute(\"fill\",this.options.colorNoData))}.bind(this))},a.prototype.emojiFlags={AF:\"🇦🇫\",AX:\"🇦🇽\",AL:\"🇦🇱\",DZ:\"🇩🇿\",AS:\"🇦🇸\",AD:\"🇦🇩\",AO:\"🇦🇴\",AI:\"🇦🇮\",AQ:\"🇦🇶\",AG:\"🇦🇬\",AR:\"🇦🇷\",AM:\"🇦🇲\",AW:\"🇦🇼\",AU:\"🇦🇺\",AT:\"🇦🇹\",AZ:\"🇦🇿\",BS:\"🇧🇸\",BH:\"🇧🇭\",BD:\"🇧🇩\",BB:\"🇧🇧\",BY:\"🇧🇾\",BE:\"🇧🇪\",BZ:\"🇧🇿\",BJ:\"🇧🇯\",BM:\"🇧🇲\",BT:\"🇧🇹\",BO:\"🇧🇴\",BA:\"🇧🇦\",BW:\"🇧🇼\",BR:\"🇧🇷\",IO:\"🇮🇴\",VG:\"🇻🇬\",BN:\"🇧🇳\",BG:\"🇧🇬\",BF:\"🇧🇫\",BI:\"🇧🇮\",KH:\"🇰🇭\",CM:\"🇨🇲\",CA:\"🇨🇦\",CV:\"🇨🇻\",BQ:\"🇧🇶\",KY:\"🇰🇾\",CF:\"🇨🇫\",TD:\"🇹🇩\",CL:\"🇨🇱\",CN:\"🇨🇳\",CX:\"🇨🇽\",CC:\"🇨🇨\",CO:\"🇨🇴\",KM:\"🇰🇲\",CG:\"🇨🇬\",CK:\"🇨🇰\",CR:\"🇨🇷\",HR:\"🇭🇷\",CU:\"🇨🇺\",CW:\"🇨🇼\",CY:\"🇨🇾\",CZ:\"🇨🇿\",CD:\"🇨🇩\",DK:\"🇩🇰\",DJ:\"🇩🇯\",DM:\"🇩🇲\",DO:\"🇩🇴\",EC:\"🇪🇨\",EG:\"🇪🇬\",SV:\"🇸🇻\",GQ:\"🇬🇶\",ER:\"🇪🇷\",EE:\"🇪🇪\",ET:\"🇪🇹\",FK:\"🇫🇰\",FO:\"🇫🇴\",FM:\"🇫🇲\",FJ:\"🇫🇯\",FI:\"🇫🇮\",FR:\"🇫🇷\",GF:\"🇬🇫\",PF:\"🇵🇫\",TF:\"🇹🇫\",GA:\"🇬🇦\",GM:\"🇬🇲\",GE:\"🇬🇪\",DE:\"🇩🇪\",GH:\"🇬🇭\",GI:\"🇬🇮\",GR:\"🇬🇷\",GL:\"🇬🇱\",GD:\"🇬🇩\",GP:\"🇬🇵\",GU:\"🇬🇺\",GT:\"🇬🇹\",GN:\"🇬🇳\",GW:\"🇬🇼\",GY:\"🇬🇾\",HT:\"🇭🇹\",HN:\"🇭🇳\",HK:\"🇭🇰\",HU:\"🇭🇺\",IS:\"🇮🇸\",IN:\"🇮🇳\",ID:\"🇮🇩\",IR:\"🇮🇷\",IQ:\"🇮🇶\",IE:\"🇮🇪\",IM:\"🇮🇲\",IL:\"🇮🇱\",IT:\"🇮🇹\",CI:\"🇨🇮\",JM:\"🇯🇲\",JP:\"🇯🇵\",JE:\"🇯🇪\",JO:\"🇯🇴\",KZ:\"🇰🇿\",KE:\"🇰🇪\",KI:\"🇰🇮\",XK:\"🇽🇰\",KW:\"🇰🇼\",KG:\"🇰🇬\",LA:\"🇱🇦\",LV:\"🇱🇻\",LB:\"🇱🇧\",LS:\"🇱🇸\",LR:\"🇱🇷\",LY:\"🇱🇾\",LI:\"🇱🇮\",LT:\"🇱🇹\",LU:\"🇱🇺\",MO:\"🇲🇴\",MK:\"🇲🇰\",MG:\"🇲🇬\",MW:\"🇲🇼\",MY:\"🇲🇾\",MV:\"🇲🇻\",ML:\"🇲🇱\",MT:\"🇲🇹\",MH:\"🇲🇭\",MQ:\"🇲🇶\",MR:\"🇲🇷\",MU:\"🇲🇺\",YT:\"🇾🇹\",MX:\"🇲🇽\",MD:\"🇲🇩\",MC:\"🇲🇨\",MN:\"🇲🇳\",ME:\"🇲🇪\",MS:\"🇲🇸\",MA:\"🇲🇦\",MZ:\"🇲🇿\",MM:\"🇲🇲\",NA:\"🇳🇦\",NR:\"🇳🇷\",NP:\"🇳🇵\",NL:\"🇳🇱\",NC:\"🇳🇨\",NZ:\"🇳🇿\",NI:\"🇳🇮\",NE:\"🇳🇪\",NG:\"🇳🇬\",NU:\"🇳🇺\",NF:\"🇳🇫\",KP:\"🇰🇵\",MP:\"🇲🇵\",NO:\"🇳🇴\",OM:\"🇴🇲\",PK:\"🇵🇰\",PW:\"🇵🇼\",PS:\"🇵🇸\",PA:\"🇵🇦\",PG:\"🇵🇬\",PY:\"🇵🇾\",PE:\"🇵🇪\",PH:\"🇵🇭\",PN:\"🇵🇳\",PL:\"🇵🇱\",PT:\"🇵🇹\",PR:\"🇵🇷\",QA:\"🇶🇦\",RE:\"🇷🇪\",RO:\"🇷🇴\",RU:\"🇷🇺\",RW:\"🇷🇼\",SH:\"🇸🇭\",KN:\"🇰🇳\",LC:\"🇱🇨\",PM:\"🇵🇲\",VC:\"🇻🇨\",WS:\"🇼🇸\",SM:\"🇸🇲\",ST:\"🇸🇹\",SA:\"🇸🇦\",SN:\"🇸🇳\",RS:\"🇷🇸\",SC:\"🇸🇨\",SL:\"🇸🇱\",SG:\"🇸🇬\",SX:\"🇸🇽\",SK:\"🇸🇰\",SI:\"🇸🇮\",SB:\"🇸🇧\",SO:\"🇸🇴\",ZA:\"🇿🇦\",GS:\"🇬🇸\",KR:\"🇰🇷\",SS:\"🇸🇸\",ES:\"🇪🇸\",LK:\"🇱🇰\",SD:\"🇸🇩\",SR:\"🇸🇷\",SJ:\"🇸🇯\",SZ:\"🇸🇿\",SE:\"🇸🇪\",CH:\"🇨🇭\",SY:\"🇸🇾\",TW:\"🇹🇼\",TJ:\"🇹🇯\",TZ:\"🇹🇿\",TH:\"🇹🇭\",TL:\"🇹🇱\",TG:\"🇹🇬\",TK:\"🇹🇰\",TO:\"🇹🇴\",TT:\"🇹🇹\",TN:\"🇹🇳\",TR:\"🇹🇷\",TM:\"🇹🇲\",TC:\"🇹🇨\",TV:\"🇹🇻\",UG:\"🇺🇬\",UA:\"🇺🇦\",AE:\"🇦🇪\",GB:\"🇬🇧\",US:\"🇺🇸\",UM:\"🇺🇲\",VI:\"🇻🇮\",UY:\"🇺🇾\",UZ:\"🇺🇿\",VU:\"🇻🇺\",VA:\"🇻🇦\",VE:\"🇻🇪\",VN:\"🇻🇳\",WF:\"🇼🇫\",EH:\"🇪🇭\",YE:\"🇾🇪\",ZM:\"🇿🇲\",ZW:\"🇿🇼\"},a.prototype.continents={EA:{iso:\"EA\",name:\"World\"},AF:{iso:\"AF\",name:\"Africa\",pan:{x:454,y:250},zoom:1.9},AS:{iso:\"AS\",name:\"Asia\",pan:{x:904,y:80},zoom:1.8},EU:{iso:\"EU\",name:\"Europe\",pan:{x:404,y:80},zoom:5},NA:{iso:\"NA\",name:\"North America\",pan:{x:104,y:55},zoom:2.6},MA:{iso:\"MA\",name:\"Middle America\",pan:{x:104,y:200},zoom:2.6},SA:{iso:\"SA\",name:\"South America\",pan:{x:104,y:340},zoom:2.2},OC:{iso:\"OC\",name:\"Oceania\",pan:{x:954,y:350},zoom:1.9}},a.prototype.createMap=function(){this.createTooltip(),this.mapWrapper=this.createElement(\"div\",\"svgMap-map-wrapper\",this.mapContainer),this.mapImage=document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),this.mapImage.setAttribute(\"viewBox\",\"0 0 2000 1001\"),this.mapImage.classList.add(\"svgMap-map-image\"),this.mapWrapper.appendChild(this.mapImage);var e,l=this.createElement(\"div\",\"svgMap-map-controls-wrapper\",this.mapWrapper),o=this.createElement(\"div\",\"svgMap-map-controls-zoom\",l);[\"in\",\"out\",\"reset\"].forEach(function(l){var t;(\"reset\"===l&&this.options.showZoomReset||\"reset\"!==l)&&(this[t=\"zoomControl\"+l.charAt(0).toUpperCase()+l.slice(1)]=this.createElement(\"button\",\"svgMap-control-button svgMap-zoom-button svgMap-zoom-\"+l+\"-button\",o),this[t].type=\"button\",this[t].addEventListener(\"click\",function(){this.zoomMap(l)}.bind(this),{passive:!0}))}.bind(this)),this.zoomControlIn.setAttribute(\"aria-label\",\"Zoom in\"),this.zoomControlOut.setAttribute(\"aria-label\",\"Zoom out\"),this.options.showContinentSelector&&(t=this.createElement(\"div\",\"svgMap-map-continent-controls-wrapper\",this.mapWrapper),this.continentSelect=this.createElement(\"select\",\"svgMap-continent-select\",t),e=this,Object.keys(a.prototype.continents).forEach(function(l){let t=e.createElement(\"option\",\"svgMap-continent-option svgMap-continent-iso-\"+a.prototype.continents[l].iso,e.continentSelect,a.prototype.continents[l].name);t.value=l}),this.continentSelect.addEventListener(\"change\",function(l){l.target.value&&this.zoomContinent(l.target.value)}.bind(e),{passive:!0}),t.setAttribute(\"aria-label\",\"Select continent\"));var t=Object.assign({},this.mapPaths);this.options.countries.EH||(t.MA.d=t[\"MA-EH\"].d,delete t.EH),delete t[\"MA-EH\"],\"RU\"===this.options.countries.Crimea&&(t.RU.d=t[\"RU-WITH-CRIMEA\"].d,t.UA.d=t[\"UA-WITHOUT-CRIMEA\"].d),delete t[\"RU-WITH-CRIMEA\"],delete t[\"UA-WITHOUT-CRIMEA\"],this.tooltipMoveEvent=function(l){this.moveTooltip(l)}.bind(this),Object.keys(t).forEach(function(l){var t=this.mapPaths[l];if(t.d){var i=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\");if(i.setAttribute(\"d\",t.d),i.setAttribute(\"id\",this.id+\"-map-country-\"+l),i.setAttribute(\"data-id\",l),i.classList.add(\"svgMap-country\"),this.mapImage.appendChild(i),i.addEventListener(\"touchstart\",function(l){i.parentNode.appendChild(i),i.classList.add(\"svgMap-active\");var t=i.getAttribute(\"data-id\"),e=i.getAttribute(\"data-link\");this.options.touchLink&&e?window.location.href=e:(this.setTooltipContent(this.getTooltipContent(t)),this.showTooltip(l),this.moveTooltip(l),i.addEventListener(\"touchmove\",this.tooltipMoveEvent,{passive:!0}))}.bind(this),{passive:!0}),i.addEventListener(\"mouseenter\",function(l){i.parentNode.appendChild(i);var t=i.getAttribute(\"data-id\");this.setTooltipContent(this.getTooltipContent(t)),this.showTooltip(l),i.addEventListener(\"mousemove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0}),this.options.data.values&&this.options.data.values[l]&&this.options.data.values[l].link){i.setAttribute(\"data-link\",this.options.data.values[l].link),this.options.data.values[l].linkTarget&&i.setAttribute(\"data-link-target\",this.options.data.values[l].linkTarget);let o=!1;i.addEventListener(\"mousedown\",function(){o=!1}),i.addEventListener(\"touchstart\",function(){o=!1}),i.addEventListener(\"mousemove\",function(){o=!0}),i.addEventListener(\"touchmove\",function(){o=!0});l=function(l){var t,e;o||(t=i.getAttribute(\"data-link\"),(e=i.getAttribute(\"data-link-target\"))?window.open(t,e):window.location.href=t)};i.addEventListener(\"click\",l),i.addEventListener(\"touchend\",l)}i.addEventListener(\"mouseleave\",function(){this.hideTooltip(),i.removeEventListener(\"mousemove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0}),i.addEventListener(\"touchend\",function(){this.hideTooltip(),i.classList.remove(\"svgMap-active\"),i.removeEventListener(\"touchmove\",this.tooltipMoveEvent,{passive:!0})}.bind(this),{passive:!0})}}.bind(this));var n=this;this.mapPanZoom=i(this.mapImage,{zoomEnabled:!0,fit:!0,center:!0,minZoom:this.options.minZoom,maxZoom:this.options.maxZoom,zoomScaleSensitivity:this.options.zoomScaleSensitivity,controlIconsEnabled:!1,mouseWheelZoomEnabled:this.options.mouseWheelZoomEnabled,preventMouseEventsDefault:!0,onZoom:function(){n.setControlStatuses()},beforePan:function(l,t){var e=.85*n.mapWrapper.offsetWidth,o=.85*n.mapWrapper.offsetHeight,i=this.getSizes(),a=-((i.viewBox.x+i.viewBox.width)*i.realZoom)+e,L=i.width-e-i.viewBox.x*i.realZoom,e=-((i.viewBox.y+i.viewBox.height)*i.realZoom)+o,i=i.height-o-i.viewBox.y*i.realZoom;return{x:Math.max(a,Math.min(L,t.x)),y:Math.max(e,Math.min(i,t.y))}}}),0!=this.options.initialPan.x||0!=this.options.initialPan.y?this.mapPanZoom.zoomAtPointBy(this.options.initialZoom,{x:this.options.initialPan.x,y:this.options.initialPan.y}):this.mapPanZoom.zoom(this.options.initialZoom),this.setControlStatuses()},a.prototype.getTooltipContent=function(e){if(this.options.onGetTooltip){var l=this.options.onGetTooltip(this.tooltip,e,this.options.data.values[e]);if(l)return l}l=this.createElement(\"div\",\"svgMap-tooltip-content-container\");!1===this.options.hideFlag&&(t=this.createElement(\"div\",\"svgMap-tooltip-flag-container svgMap-tooltip-flag-container-\"+this.options.flagType,l),\"image\"===this.options.flagType?this.createElement(\"img\",\"svgMap-tooltip-flag\",t).setAttribute(\"src\",this.options.flagURL.replace(\"{0}\",e.toLowerCase())):\"emoji\"===this.options.flagType&&(t.innerHTML=this.emojiFlags[e])),this.createElement(\"div\",\"svgMap-tooltip-title\",l).innerHTML=this.getCountryName(e);var o,t=this.createElement(\"div\",\"svgMap-tooltip-content\",l);return this.options.data.values[e]?(o=\"<table>\",Object.keys(this.options.data.data).forEach(function(l){var t=this.options.data.data[l],l=this.options.data.values[e][l];(void 0!==l&&!0===this.options.hideMissingData||!1===this.options.hideMissingData)&&(t.floatingNumbers&&(l=l.toFixed(1)),t.thousandSeparator&&(l=this.numberWithCommas(l,t.thousandSeparator)),l=t.format?t.format.replace(\"{0}\",\"<span>\"+l+\"</span>\"):\"<span>\"+l+\"</span>\",o+=\"<tr><td>\"+(t.name||\"\")+\"</td><td>\"+l+\"</td></tr>\")}.bind(this)),o+=\"</table>\",t.innerHTML=o):this.createElement(\"div\",\"svgMap-tooltip-no-data\",t).innerHTML=this.options.noDataText,l},a.prototype.setControlStatuses=function(){this.zoomControlIn.classList.remove(\"svgMap-disabled\"),this.zoomControlIn.setAttribute(\"aria-disabled\",\"false\"),this.zoomControlOut.classList.remove(\"svgMap-disabled\"),this.zoomControlOut.setAttribute(\"aria-disabled\",\"false\"),this.options.showZoomReset&&(this.zoomControlReset.classList.remove(\"svgMap-disabled\"),this.zoomControlReset.setAttribute(\"aria-disabled\",\"false\")),this.mapPanZoom.getZoom().toFixed(3)<=this.options.minZoom&&(this.zoomControlOut.classList.add(\"svgMap-disabled\"),this.zoomControlOut.setAttribute(\"aria-disabled\",\"true\")),this.mapPanZoom.getZoom().toFixed(3)>=this.options.maxZoom&&(this.zoomControlIn.classList.add(\"svgMap-disabled\"),this.zoomControlIn.setAttribute(\"aria-disabled\",\"true\")),this.options.showZoomReset&&this.mapPanZoom.getZoom().toFixed(3)==this.options.initialZoom&&(this.zoomControlReset.classList.add(\"svgMap-disabled\"),this.zoomControlReset.setAttribute(\"aria-disabled\",\"true\"))},a.prototype.zoomMap=function(l){if(this[\"zoomControl\"+l.charAt(0).toUpperCase()+l.slice(1)].classList.contains(\"svgMap-disabled\"))return!1;\"reset\"===l?(this.mapPanZoom.reset(),0!=this.options.initialPan.x||0!=this.options.initialPan.y?this.mapPanZoom.zoomAtPointBy(this.options.initialZoom,{x:this.options.initialPan.x,y:this.options.initialPan.y}):this.mapPanZoom.zoom(this.options.initialZoom)):this.mapPanZoom[\"in\"==l?\"zoomIn\":\"zoomOut\"]()},a.prototype.zoomContinent=function(l){l=this.continents[l];\"EA\"==l.iso?this.mapPanZoom.reset():l.pan&&(this.mapPanZoom.reset(),this.mapPanZoom.zoomAtPoint(l.zoom,l.pan))},a.prototype.addMouseWheelZoomNotice=function(){var l=document.createElement(\"div\");l.classList.add(\"svgMap-block-zoom-notice\");var t=document.createElement(\"div\");t.innerHTML=-1!=navigator.appVersion.indexOf(\"Mac\")?this.options.mouseWheelKeyMessageMac:this.options.mouseWheelKeyMessage,l.append(t),this.wrapper.append(l)},a.prototype.showMouseWheelZoomNotice=function(l){this.mouseWheelNoticeJustHidden||(this.autoHideMouseWheelNoticeTimeout&&clearTimeout(this.autoHideMouseWheelNoticeTimeout),this.autoHideMouseWheelNoticeTimeout=setTimeout(function(){this.hideMouseWheelZoomNotice()}.bind(this),l||2400),this.wrapper.classList.add(\"svgMap-block-zoom-notice-active\"))},a.prototype.hideMouseWheelZoomNotice=function(){this.wrapper.classList.remove(\"svgMap-block-zoom-notice-active\"),this.autoHideMouseWheelNoticeTimeout&&clearTimeout(this.autoHideMouseWheelNoticeTimeout)},a.prototype.blockMouseWheelZoomNotice=function(l){this.mouseWheelNoticeJustHidden=!0,this.mouseWheelNoticeJustHiddenTimeout&&clearTimeout(this.mouseWheelNoticeJustHiddenTimeout),this.mouseWheelNoticeJustHiddenTimeout=setTimeout(function(){this.mouseWheelNoticeJustHidden=!1}.bind(this),l||600)},a.prototype.addMouseWheelZoomWithKeyEvents=function(){if(this.wrapper.addEventListener(\"wheel\",function(l){document.body.classList.contains(\"svgMap-zoom-key-pressed\")?(this.hideMouseWheelZoomNotice(),this.blockMouseWheelZoomNotice()):this.showMouseWheelZoomNotice()}.bind(this),{passive:!0}),document.addEventListener(\"keydown\",function(l){\"Alt\"!=l.key&&\"Control\"!=l.key&&\"Meta\"!=l.key&&\"Shift\"!=l.key||(document.body.classList.add(\"svgMap-zoom-key-pressed\"),this.hideMouseWheelZoomNotice(),this.blockMouseWheelZoomNotice())}.bind(this)),this.wrapper.addEventListener(\"wheel\",function(l){(l.altKey||l.ctrlKey||l.metaKey||l.shiftKey)&&document.body.classList.add(\"svgMap-zoom-key-pressed\")}),document.body.classList.contains(\"svgMap-key-events-added\"))return!1;document.body.classList.add(\"svgMap-key-events-added\"),document.addEventListener(\"keyup\",function(l){\"Alt\"!=l.key&&\"Control\"!=l.key&&\"Meta\"!=l.key&&\"Shift\"!=l.key||document.body.classList.remove(\"svgMap-zoom-key-pressed\")})},a.prototype.mapPaths={AF:{d:\"M1369.9,333.8h-5.4l-3.8-0.5l-2.5,2.9l-2.1,0.7l-1.5,1.3l-2.6-2.1l-1-5.4l-1.6-0.3v-2l-3.2-1.5l-1.7,2.3l0.2,2.6 l-0.6,0.9l-3.2-0.1l-0.9,3l-2.1-1.3l-3.3,2.1l-1.8-0.8l-4.3-1.4h-2.9l-1.6-0.2l-2.9-1.7l-0.3,2.3l-4.1,1.2l0.1,5.2l-2.5,2l-4,0.9 l-0.4,3l-3.9,0.8l-5.9-2.4l-0.5,8l-0.5,4.7l2.5,0.9l-1.6,3.5l2.7,5.1l1.1,4l4.3,1.1l1.1,4l-3.9,5.8l9.6,3.2l5.3-0.9l3.3,0.8l0.9-1.4 l3.8,0.5l6.6-2.6l-0.8-5.4l2.3-3.6h4l0.2-1.7l4-0.9l2.1,0.6l1.7-1.8l-1.1-3.8l1.5-3.8l3-1.6l-3-4.2l5.1,0.2l0.9-2.3l-0.8-2.5l2-2.7 l-1.4-3.2l-1.9-2.8l2.4-2.8l5.3-1.3l5.8-0.8l2.4-1.2l2.8-0.7L1369.9,333.8L1369.9,333.8z\"},AL:{d:\"M1077.5,300.5l-2,3.1l0.5,1.9l0,0l1,1l-0.5,1.9l-0.1,4.3l0.7,3l3,2.1l0.2,1.4l1,0.4l2.1-3l0.1-2.1l1.6-0.9V312 l-2.3-1.6l-0.9-2.6l0.4-2.1l0,0l-0.5-2.3l-1.3-0.6l-1.3-1.6l-1.3,0.5L1077.5,300.5L1077.5,300.5z\"},DZ:{d:\"M1021,336.9l-3.6,0.4l-2.2-1.5h-5.6l-4.9,2.6l-2.7-1l-8.7,0.5l-8.9,1.2l-5,2l-3.4,2.6l-5.7,1.2l-5.1,3.5l2,4.1 l0.3,3.9l1.8,6.7l1.4,1.4l-1,2.5l-7,1l-2.5,2.4l-3.1,0.5l-0.3,4.7l-6.3,2.5l-2.1,3.2L944,383l-5.4,1l-8.9,4.7l-0.1,7.5v0.4l-0.1,1.2 l20.3,15.5l18.4,13.9l18.6,13.8l1.3,3l3.4,1.8l2.6,1.1l0.1,4l6.1-0.6l7.8-2.8l15.8-12.5l18.6-12.2l-2.5-4l-4.3-2.9l-2.6,1.2l-2-3.6 l-0.2-2.7l-3.4-4.7l2.1-2.6l-0.5-4l0.6-3.5l-0.5-2.9l0.9-5.2l-0.4-3l-1.9-5.6l-2.6-11.3l-3.4-2.6v-1.5l-4.5-3.8l-0.6-4.8l3.2-3.6 l1.1-5.3l-1-6.2L1021,336.9L1021,336.9z\"},AD:{d:\"M985.4,301.7l0.2-0.4l-0.2-0.2l-0.7-0.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l0.1,0.1v0.4l0.1,0.2h0.4L985.4,301.7 L985.4,301.7z\"},AO:{d:\"M1068.3,609.6l-16.6-0.1l-1.9,0.7l-1.7-0.1l-2.3,0.9l-0.5,1.2l2.8,4l1.1,4.3l1.6,6.1l-1.7,2.6l-0.3,1.3l1.3,3.8 l1.5,3.9l1.6,2.2l0.3,3.6l-0.7,4.8l-1.8,2.8l-3.3,4.2l-1.3,2.6l-1.9,5.7l-0.3,2.7l-2,5.9l-0.9,5.5l0.5,4l2.7-1.2l3.3-1l3.6,0.1 l3.2,2.9l0.9-0.4l22.5-0.3l3.7,3l13.4,0.9l10.3-2.5l-3.5-4l-3.6-5.2l0.8-20.3l11.6,0.1l-0.5-2.2l0.9-2.4l-0.9-3l0.7-3l-0.5-2 l-2.6-0.4l-3.5,1l-2.4-0.2l-1.4,0.6l0.5-7.6l-1.9-2.3l-0.3-4l0.9-3.8l-1.2-2.4v-4h-6.8l0.5-2.3h-2.9l-0.3,1.1l-3.4,0.3l-1.5,3.7 l-0.9,1.6l-3-0.9l-1.9,0.9l-3.7,0.5l-2.1-3.3l-1.3-2.1l-1.6-3.8L1068.3,609.6L1068.3,609.6z M1046.5,608.3l0.2-2.7l0.9-1.7l2-1.3 l-2-2.2l-1.8,1.1l-2.2,2.7l1.4,4.8L1046.5,608.3L1046.5,608.3z\"},AI:{d:\"M627.9,456.2l0.1-0.2l-0.2-0.1l-0.8,0.5v0.1L627.9,456.2z\"},AG:{d:\"M634.3,463.8l0.2-0.1v-0.1v-0.2l-0.1-0.1l-0.1-0.2l-0.4-0.2l-0.5,0.5v0.2l0.1,0.3l0.6,0.1L634.3,463.8L634.3,463.8z M634.5,460.3v-0.5l-0.1-0.2h-0.3l-0.1-0.1h-0.1l-0.1,0.1l0.1,0.6l0.5,0.3L634.5,460.3L634.5,460.3z\"},AR:{d:\"M669.8,920.7l0.9-3l-7.3-1.5l-7.7-3.6l-4.3-4.6l-3-2.8l5.9,13.5h5l2.9,0.2l3.3,2.1L669.8,920.7L669.8,920.7z M619.4,712.6l-7.4-1.5l-4,5.7l0.9,1.6l-1.1,6.6l-5.6,3.2l1.6,10.6l-0.9,2l2,2.5l-3.2,4l-2.6,5.9l-0.9,5.8l1.7,6.2l-2.1,6.5 l4.9,10.9l1.6,1.2l1.3,5.9l-1.6,6.2l1.4,5.4l-2.9,4.3l1.5,5.9l3.3,6.3l-2.5,2.4l0.3,5.7l0.7,6.4l3.3,7.6l-1.6,1.2l3.6,7.1l3.1,2.3 l-0.8,2.6l2.8,1.3l1.3,2.3l-1.8,1.1l1.8,3.7l1.1,8.2l-0.7,5.3l1.8,3.2l-0.1,3.9l-2.7,2.7l3.1,6.6l2.6,2.2l3.1-0.4l1.8,4.6l3.5,3.6 l12,0.8l4.8,0.9l2.2,0.4l-4.7-3.6l-4.1-6.3l0.9-2.9l3.5-2.5l0.5-7.2l4.7-3.5l-0.2-5.6l-5.2-1.3l-6.4-4.5l-0.1-4.7l2.9-3.1l4.7-0.1 l0.2-3.3l-1.2-6.1l2.9-3.9l4.1-1.9l-2.5-3.2l-2.2,2l-4-1.9l-2.5-6.2l1.5-1.6l5.6,2.3l5-0.9l2.5-2.2l-1.8-3.1l-0.1-4.8l-2-3.8 l5.8,0.6l10.2-1.3l6.9-3.4l3.3-8.3l-0.3-3.2l-3.9-2.8l-0.1-4.5l-7.8-5.5l-0.3-3.3l-0.4-4.2l0.9-1.4l-1.1-6.3l0.3-6.5l0.5-5.1 l5.9-8.6l5.3-6.2l3.3-2.6l4.2-3.5l-0.5-5.1l-3.1-3.7l-2.6,1.2l-0.3,5.7l-4.3,4.8l-4.2,1.1l-6.2-1l-5.7-1.8l4.2-9.6l-1.1-2.8 l-5.9-2.5l-7.2-4.7l-4.6-1L632,713.7l-1-1.3l-6.3-0.3l-1.6,5.1L619.4,712.6L619.4,712.6z\"},AM:{d:\"M1219,325.1l-0.9-4.4l-2.5-1.1l-2.5-1.7l1-2l-3.1-2.2l0.7-1.5l-2.2-1.1l-1.4-1.7l-6.9,1l1.3,2.2v3.1l4.2,1.5 l2.4,1.9l1-0.2l1.8,1.7h2.3l0.2,1l2.8,3.7L1219,325.1L1219,325.1z\"},AW:{d:\"M586.6,492.9l-0.1-0.1l-0.3-0.6l-0.3-0.3l-0.1,0.1l-0.1,0.3l0.3,0.3l0.3,0.4l0.3,0.1L586.6,492.9L586.6,492.9z\"},AU:{d:\"M1726.7,832l-3-0.5l-1.9,2.9l-0.6,5.4l-2.1,4l-0.5,5.3l3,0.2l0.8,0.3l6.6-4.3l0.6,1.7l4-4.9l3.2-2.2l4.5-7.3 l-2.8-0.5l-4.8,1.2l-3.4,0.9L1726.7,832L1726.7,832z M1776.8,659.7l0.5-2.3l0.1-3.6l-1.6-3.2l0.1-2.7l-1.3-0.8l0.1-3.9l-1.2-3.2 l-2.3,2.4l-0.4,1.8l-1.5,3.5l-1.8,3.4l0.6,2.1l-1.2,1.3l-1.5,4.8l0.1,3.7l-0.7,1.8l0.3,3.1l-2.6,5l-1.3,3.5l-1.7,2.9l-1.7,3.4 l-4.1,2.1l-4.9-2.1l-0.5-2l-2.5-1.6h-1.6l-3.3-3.8l-2.5-2.2l-3.9-2l-3.9-3.5l-0.1-1.8l2.5-3.1l2.1-3.2l-0.3-2.6l1.9-0.2l2.5-2.5 l2-3.4l-2.2-3.2l-1.5,1.2l-2-0.5l-3.5,1.8l-3.2-2l-1.7,0.7l-4.5-1.6l-2.7-2.7l-3.5-1.5l-3.1,0.9l3.9,2.1l-0.3,3.2l-4.8,1.2l-2.8-0.7 l-3.6,2.2l-2.9,3.7l0.6,1.5l-2.7,1.7l-3.4,5.1l0.6,3.5l-3.4-0.6h-3.5l-2.5-3.8l-3.7-2.9l-2.8,0.8l-2.6,0.9l-0.3,1.6l-2.4-0.7 l-0.3,1.8l-3,1.1l-1.7,2.5l-3.5,3.1l-1.4,4.8l-2.3-1.3l-2.2,3.1l1.5,3l-2.6,1.2l-1.4-5.5l-4.8,5.4l-0.8,3.5l-0.7,2.5l-3.8,3.3 l-2,3.4l-3.5,2.8l-6.1,1.9l-3.1-0.2l-1.5,0.6l-1.1,1.4l-3.5,0.7l-4.7,2.4l-1.4-0.8l-2.6,0.5l-4.6,2.3l-3.2,2.7l-4.8,2.1l-3.1,4.4 l0.4-4.8l-3.1,4.6l-0.1,3.7l-1.3,3.2l-1.5,1.5l-1.3,3.7l0.9,1.9l0.1,2l1.6,5l-0.7,3.3l-1-2.5l-2.3-1.8l0.4,5.9l-1.7-2.8l0.1,2.8 l1.8,5l-0.6,5l1.7,2.5l-0.4,1.9l0.9,4.1l-1.3,3.6l-0.3,3.6l0.7,6.5l-0.7,3.7l-2.2,4.4l-0.6,2.3l-1.5,1.5l-2.9,0.8l-1.5,3.7l2.4,1.2 l4,4.1h3.6l3.8,0.3l3.3-2.1l3.4-1.8l1.4,0.3l4.5-3.4l3.8-0.3l4.1-0.7l4.2,1.2l3.6-0.6l4.6-0.2l3-2.6l2.3-3.3l5.2-1.5l6.9-3.2l5,0.4 l6.9-2.1l7.8-2.3l9.8-0.6l4,3.1l3.7,0.2l5.3,3.8l-1.6,1.5l1.8,2.4l1.3,4.6l-1.6,3.4l2.9,2.6l4.3-5.1l4.3-2.1l6.7-5.5l-1.6,4.7 l-3.4,3.2l-2.5,3.7l-4.4,3.5l5.2-1.2l4.7-4.4l-0.9,4.8l-3.2,3.1l4.7,0.8l1.3,2.6l-0.4,3.3l-1.5,4.9l1.4,4l4,1.9l2.8,0.4l2.4,1 l3.5,1.8l7.2-4.7l3.5-1.2l-2.7,3.4l2.6,1.1l2.7,2.8l4.7-2.7l3.8-2.5l6.3-2.7l6-0.2l4.2-2.3l0.9-2l3-4.5l3.9-4.8l3.6-3.2l4.4-5.6 l3.3-3.1l4.4-5l5.4-3.1l5-5.8l3.1-4.5l1.4-3.6l3.8-5.7l2.1-2.9l2.5-5.7l-0.7-5.4l1.7-3.9l1.1-3.7v-5.1l-2.8-5.1l-1.9-2.5l-2.9-3.9 l0.7-6.7l-1.5,1l-1.6-2.8l-2.5,1.4l-0.6-6.9l-2.2-4l1-1.5l-3.1-2.8l-3.2-3l-5.3-3.3l-0.9-4.3l1.3-3.3l-0.4-5.5l-1.3-0.7l-0.2-3.2 l-0.2-5.5l1.1-2.8l-2.3-2.5l-1.4-2.7l-3.9,2.4L1776.8,659.7L1776.8,659.7z\"},AT:{d:\"M1060.2,264l-2.3-1.2l-2.3,0.3l-4-1.9l-1.7,0.5l-2.6,2.5l-3.8-2l-1.5,2.9l-1.7,0.8l1,4l-0.4,1.1l-1.7-1.3l-2.4-0.2 l-3.4,1.2l-4.4-0.3l-0.6,1.6l-2.6-1.7l-1.5,0.3l0.2,1.1l-0.7,1.6l2.3,1.1l2.6,0.2l3.1,0.9l0.5-1.2l4.8-1.1l1.3,2.2l7.2,1.6l4.2,0.4 l2.4-1.4l4.3-0.1l0.9-1.1l1.3-4l-1.1-1.3h2.8l0.2-2.6l-0.7-2.1L1060.2,264L1060.2,264z\"},AZ:{d:\"M1210.1,318.9l-1,0.2l1.2,2.4l3.2,2.9l3.7,0.9l-2.8-3.7l-0.2-1h-2.3L1210.1,318.9L1210.1,318.9z M1220.5,309.6 l-4.3-3.8l-1.5-0.2l-1.1,0.9l3.2,3.4l-0.6,0.7l-2.8-0.4l-4.2-1.8l-1.1,1l1.4,1.7l2.2,1.1l-0.7,1.5l3.1,2.2l-1,2l2.5,1.7l2.5,1.1 l0.9,4.4l5.3-4.7l1.9-0.5l1.9,1.9l-1.2,3.1l3.8,3.4l1.3-0.3l-0.8-3.2l1.7-1.5l0.4-2.2l-0.1-5l4.2-0.5l-2-1.7l-2.5-0.2l-3.5-4.5 l-3.4-3.2l0,0l-2.6,2.5l-0.5,1.5L1220.5,309.6L1220.5,309.6z\"},BS:{d:\"M574.4,437.3l0.2-0.6l-0.3-0.1l-0.5,0.7l-0.6,0.3h-0.3l-0.7-0.3h-0.5l-0.4,0.5l-0.6,0.1l0.1,0.1v0.2l-0.2,0.3v0.2 l0.1,0.3l1.5-0.1l1.3-0.2l0.7-0.9L574.4,437.3z M575.2,435.3l-0.4-0.3l-0.4,0.3l0.1,0.3L575.2,435.3L575.2,435.3z M575.2,429.5 l-0.4-0.2l-0.3,0.5l0.3,0.1l0.7-0.1l0.5,0.1l0.5,0.4l0.3-0.2l-0.1-0.1l-0.4-0.3l-0.6-0.1h-0.2L575.2,429.5L575.2,429.5z M568.6,430.8l0.7-0.6l0.7-0.3l0.9-1.1l-0.1-0.9l0.2-0.4l-0.6,0.1l-0.1,0.3l-0.1,0.3l0.3,0.4v0.2l-0.2,0.4l-0.3,0.1l-0.1,0.2 l-0.3,0.1l-0.4,0.5l-0.8,0.6l-0.2,0.3L568.6,430.8L568.6,430.8z M569.8,427.6l-0.6-0.2L569,427l-0.4-0.1l-0.1,0.2v0.2l0.1,0.4 l0.2-0.1l0.8,0.4l0.4-0.3L569.8,427.6z M565.7,426.5v-0.7l-0.4-0.5l-0.6-0.4l-0.1-1.2l-0.3-0.7l-0.2-0.6l-0.4-0.8v0.5l0.1,0.1 l0.1,0.6l0.4,0.9l0.1,0.4l-0.1,0.4l-0.4,0.1l-0.1,0.2l0.5,0.3l0.8,0.3l0.5,1.3L565.7,426.5L565.7,426.5z M561.6,423l-0.5-0.3 l-0.2-0.3l-0.7-0.7l-0.3-0.1l-0.2,0.4l0.4,0.1l0.9,0.7l0.4,0.2L561.6,423L561.6,423z M568.9,419l-0.1-0.3h-0.1l-0.3,0.1l-0.3,0.9 h0.3L568.9,419L568.9,419z M551.3,417.9l-0.2-0.3l-0.3,0.2h-0.5l-0.2,0.1h-0.4l-0.3,0.2l0.4,0.8l0.3,0.3l0.1,1l0.2,0.1l-0.1,0.7 l1.1,0.1l0.4-0.8V420v-0.1v-0.2v-0.2v-0.9l-0.3-0.5l-0.4,0.6l-0.4-0.3l0.6-0.4L551.3,417.9L551.3,417.9z M564.2,418.2l-1-1.4v-0.2 l-0.5-1.5l-0.3-0.1l-0.1,0.1l-0.1,0.2l0.4,0.4v0.4l0.3,0.2l0.4,1.1l0.4,0.4l-0.1,0.3l-0.4,0.3l-0.1,0.2h0.1l0.6-0.1h0.4L564.2,418.2 L564.2,418.2z M553.7,413l0.5-0.2l0,0l-0.3-0.2h-0.7l-0.4,0.1l-0.2,0.2l0.1,0.1l0.4,0.1L553.7,413L553.7,413z M551.3,415l-0.5-0.6 l-0.3-0.9l-0.2-0.4l0.1-0.5l-0.3-0.4l-0.6-0.4l-0.3,0.1l0.1,1.1l-0.2,0.6l-0.8,1.1l0.1,0.4l0,0l0.1,0.2l-0.5,0.4v-0.3l-0.6,0.1 l0.3,0.5l0.6,0.4l0.3,0.1l0.3-0.2v0.5l0.3,0.4l0.1,0.4l0.3-0.3l0.6-0.2l0.2-0.2l0.7-0.4v-0.2l0.1-0.6L551.3,415L551.3,415z M558,410 l-0.3-0.5l-0.1,0.1l-0.1,0.4l-0.3,0.4l0.5-0.1l0.4,0.1l0.6,0.5l0.7,0.2l0.3,0.6l0.6,0.6v0.6l-0.4,0.6l-0.1,0.7l-0.6,0.1l0.1,0.1 l0.3,0.3l0.1,0.4l0.2,0.2v-0.7l0.3-0.8l0.4-1.3l-0.1-0.3l-0.3-0.3l-0.7-0.9l-0.7-0.3L558,410L558,410z M549.2,402.1l-0.5-0.4 l-0.2,0.4v0.1l-0.1,0.3l-0.5,0.4l-0.5,0.1l-0.7-0.6l-0.2-0.1l0.8,1.1l0.3,0.1h0.4l0.9-0.3l1.6-0.5l1.7-0.2l0.1-0.2l-0.1-0.3 l-0.8,0.2l-1-0.1l-0.2,0.2h-0.4L549.2,402.1z M555.3,407.3l0.2-0.3l0.4-1.8l0.8-0.6l0.1-1.2l-0.5-0.5l-0.4-0.2l-0.1-0.2l0.1-0.2 l-0.2-0.1l-0.3-0.2l-0.4-0.6l-0.4-0.4l-0.7-0.1l-0.6-0.1l-0.4-0.1l-0.5,0.3h0.8l1.5,0.3l0.7,1.5l0.5,0.4l0.1,0.4l-0.2,0.4v0.4 l-0.3,0.5l-0.1,0.8l-0.3,0.4l-0.7,0.5l0.4,0.2l0.3,0.6L555.3,407.3L555.3,407.3z\"},BH:{d:\"M1253,408.3l0.7-3l-0.5-0.9l-1.6,1.2l0.6,0.9l-0.2,0.7L1253,408.3z\"},BD:{d:\"M1486.5,431.9l-4.5-10.1l-1.5,0.1l-0.2,4l-3.5-3.3l1.1-3.6l2.4-0.4l1.6-5.3l-3.4-1.1l-5,0.1l-5.4-0.9l-1.2-4.4 l-2.7-0.4l-4.8-2.7l-1.2,4.3l4.6,3.4l-3.1,2.4l-0.8,2.3l3.7,1.7l-0.4,3.8l2.6,4.8l1.6,5.2l2.2,0.6l1.7,0.7l0.6-1.2l2.5,1.3l1.3-3.5 l-0.9-2.6l5.1,0.2l2.8,3.7l1.5,3.1l0.8,3.2l2,3.3l-1.1-5.1l2.1,1L1486.5,431.9L1486.5,431.9z\"},BB:{d:\"M644.9,488.9l0.4-0.4l-0.3-0.3l-0.6-0.8l-0.3,0.1v1l0.1,0.3l0.5,0.3L644.9,488.9L644.9,488.9z\"},BY:{d:\"M1112.8,219.4l-5.2-1.5l-4.6,2.3l-2.6,1l0.9,2.6l-3.5,2l-0.5,3.4l-4.8,2.2h-4.6l0.6,2.7l1.7,2.3l0.3,2.4l-2.7,1.2 l1.9,2.9l0.5,2.7l2.2-0.3l2.4-1.6l3.7-0.2l5,0.5l5.6,1.5l3.8,0.1l2,0.9l1.6-1.1l1.5,1.5l4.3-0.3l2,0.6l-0.2-3.1l1.2-1.4l4.1-0.3l0,0 l-2-3.9l-1.5-2l0.8-0.6l3.9,0.2l1.6-1.3l-1.7-1.6l-3.4-1.1l0.1-1.1l-2.2-1.1l-3.7-3.9l0.6-1.6l-1-2.9l-4.8-1.4l-2.3,0.7 L1112.8,219.4L1112.8,219.4z\"},BE:{d:\"M1000.7,246.2l-4.4,1.3l-3.6-0.5l0,0l-3.8,1.2l0.7,2.2l2.2,0.1l2.4,2.4l3.4,2.9l2.5-0.4l4.4,2.8l0.4-3.5l1.3-0.2 l0.4-4.2l-2.8-1.4L1000.7,246.2L1000.7,246.2z\"},BZ:{d:\"M482.5,471.1l1.4-2.2l1-0.2l1.3-1.7l1-3.2l-0.3-0.6l0.9-2.3l-0.4-1l1.3-2.7l0.3-1.8h-1.1l0.1-0.9h-1l-2.5,3.9 l-0.9-0.8l-0.7,0.3l-0.1,1l-0.7,5l-1.2,7.2L482.5,471.1L482.5,471.1z\"},BJ:{d:\"M996.9,498l-4.3-3.7h-2l-1.9,1.9l-1.2,1.9l-2.7,0.6l-1.2,2.8l-1.9,0.7l-0.7,3.3l1.7,1.9l2,2.3l0.2,3.1l1.1,1.3 l-0.2,14.6l1.4,4.4l4.6-0.8l0.3-10.2L992,518l1-4l1.7-1.9l2.7-4l-0.6-1.7l1.1-2.5l-1.2-3.8L996.9,498L996.9,498z\"},BM:{d:\"M630.2,366.8l0.4-0.6h-0.1l-0.5,0.5l-0.6,0.2l0.1,0.1h0.1L630.2,366.8z\"},BT:{d:\"M1474.7,395.5l-2.7-1.8l-2.9-0.1l-4.2-1.5l-2.6,1.6l-2.6,4.8l0.3,1.2l5.5,2.5l3.2-1l4.7,0.4l4.4-0.2l-0.4-3.9 L1474.7,395.5L1474.7,395.5z\"},BO:{d:\"M655.7,700.5l1.6-1.3l-0.8-3.6l1.3-2.8l0.5-5l-1.6-4l-3.2-1.7l-0.8-2.6l0.6-3.6l-10.7-0.3l-2.7-7.4l1.6-0.1 l-0.3-2.8l-1.2-1.8l-0.5-3.7l-3.3-1.9l-3.5,0.1l-2.5-1.9l-3.8-1.2l-2.4-2.4l-6.3-1l-6.4-5.7l0.3-4.3l-0.9-2.5l0.4-4.7l-7.3,1.1 l-2.8,2.3l-4.8,2.6l-1.1,1.9l-2.9,0.2l-4.2-0.6l5.5,10.3l-1.1,2.1l0.1,4.5l0.3,5.4l-1.9,3.2l1.2,2.4l-1.1,2.1l2.8,5.3L591,684 l3.1,4.3l1.2,4.6l3.2,2.7l-1.1,6.2l3.7,7.1l3.1,8.8l3.8-0.9l4-5.7l7.4,1.5l3.7,4.6l1.6-5.1l6.3,0.3l1,1.3l1.5-7.6l-0.2-3.4l2.1-5.6 l9.5-1.9l5.1,0.1l5.4,3.3L655.7,700.5L655.7,700.5z\"},BA:{d:\"M1062.2,284.9l-2.3,0.1l-1,1.3l-1.9-1.4l-0.9,2.5l2.7,2.9l1.3,1.9l2.5,2.3l2,1.4l2.2,2.5l4.7,2.4l0.4-3.4l1.5-1.4 l0.9-0.6l1.2-0.3l0.5-2.9l-2.7-2.3l1-2.7h-1.8l0,0l-2.4-1.4l-3.5,0.1L1062.2,284.9L1062.2,284.9z\"},BW:{d:\"M1116.7,685l-1-0.5l-3.2,1.5h-1.6l-3.7,2.5l-2-2.6l-8.6,2.2l-4.1,0.2l-0.9,22.7l-5.4,0.2l-0.6,18.5l1.4,1l3,6.1 l-0.7,3.8l1.1,2.3l4-0.7l2.8-2.8l2.7-1.9l1.5-3.1l2.7-1.5l2.3,0.8l2.5,1.8l4.4,0.3l3.6-1.5l0.6-2l1.2-3l3-0.5l1.7-2.4l2-4.3l5.2-4.7 l8-4.7l-3.4-2.9l-4.2-0.9l-1.5-4.1l0.1-2.2l-2.3-0.7l-6-7l-1.6-3.7l-1.1-1.1L1116.7,685L1116.7,685z\"},BR:{d:\"M659,560.1l-1.4,0.2l-3.1-0.5l-1.8,1.7l-2.6,1.1l-1.7,0.2l-0.7,1.3l-2.7-0.3l-3.5-3l-0.3-2.9l-1.4-3.3l1-5.4 l1.6-2.2l-1.2-3l-1.9-0.9l0.8-2.8l-1.3-1.5l-2.9,0.3l0.7,1.8l-2.1,2.4l-6.4,2.4l-4,1l-1.7,1.5l-4.4-1.6l-4.2-0.8l-1,0.6l2.4,1.6 l-0.3,4.3l0.7,4l4.8,0.5l0.3,1.4l-4.1,1.8l-0.7,2.7l-2.3,1l-4.2,1.5l-1.1,1.9l-4.4,0.5l-3-3.4l-1.1,0.8l-1-3.8l-1.6-2l-1.9,2.2 l-10.9-0.1v3.9l3.3,0.7l-0.2,2.4l-1.1-0.6l-3.2,1v4.6l2.5,2.4l0.9,3.6l-0.1,2.8l-2.2,17.4l-5.1-0.3l-0.7,1l-4.6,1.2l-6.2,4.3l-0.4,3 l-1.3,2.2l0.7,3.4l-3.3,1.9l0.1,2.7L562,620l2.6,5.8l3.3,3.8l-1,2.8l3.7,0.3l2.3,3.4l4.9,0.2l4.4-3.8l0.2,9.7l2.6,0.7l3-1.1l4.2,0.6 l2.9-0.2l1.1-1.9l4.8-2.6l2.8-2.3l7.3-1.1l-0.4,4.7l0.9,2.5l-0.3,4.3l6.4,5.7l6.3,1l2.4,2.4l3.8,1.2l2.5,1.9l3.5-0.1l3.3,1.9 l0.5,3.7l1.2,1.8l0.3,2.8l-1.6,0.1l2.7,7.4l10.7,0.3l-0.6,3.6l0.8,2.6l3.2,1.7l1.6,4l-0.5,5l-1.3,2.8l0.8,3.6l-1.6,1.3l1.9,3.6 l0.4,8.6l6,1.2l2.1-1.2l3.9,1.7l1.2,1.9l1,5.8l0.9,2.5l2,0.3l2-1.1l2.1,1.2l0.3,3.5l-0.3,3.8l-0.7,3.6l2.6-1.2l3.1,3.7l0.5,5.1 l-4.2,3.5l-3.3,2.6l-5.3,6.2l-5.9,8.6l3.4-0.7l6.2,4.9l1.9-0.2l6.2,4.1l4.8,3.5l3.8,4.3l-1.9,3l2.1,3.7l2.9-3.7l1.5-6l3.2-3l3.9-5 l4.5-11.2l3.4-3.5l0.8-3.1l0.3-6.4l-1.3-3.5l0.3-4.8l4.1-6.3l6-5.1l6-1.8l3.6-2.9l8.5-2.4h5.9l1.1-3.8l4.2-2.8l0.6-6.5l5.1-8.3 l0.5-8.5l1.6-2.6l0.3-4.1l1.1-9.9l-1-11.9l1.4-4.7l1.4-0.1l3.9-5.5l3.3-7.2l7.7-8.8l2.7-4.2l2-10.5l-1-3.9l-2-8.1l-2.1-2l-4.8-0.2 l-4.3-1.9l-7.3-7.1l-8.4-5.3l-8.4,0.3l-10.9-3.4l-6.5,2l0.8-3.5l-2.7-3.8l-9.4-3.8l-7.1-2.3l-4.2,4.1l-0.3-6.3l-9.9-1l-1.7-2 l4.2-5.2l-0.1-4.4l-3-1l-3-11.2l-1.3-3.5l-1.9,0.3l-3.5,5.8l-1.8,4.7l-2.1,2.4l-2.7,0.5l-0.8-1.8l-1.2-0.3l-1.8,1.8l-2.4-1.3 l-3.2-1.4l-2.7,0.7l-2.3-0.6l-0.5,1.8l0.9,1.3l-0.5,1.3L659,560.1L659,560.1z\"},VG:{d:\"M619.2,455.1l0.3-0.2l-0.2-0.1h-0.4l-0.3,0.2l0.1,0.1H619.2L619.2,455.1z M620.3,454.7l0.4-0.4l-0.5,0.1l-0.2,0.2 l0.1,0.1h0.1L620.3,454.7L620.3,454.7z M621.1,452.9h-0.2h-0.5l0,0l0.1,0.1h0.3l0.3,0.1l0,0L621.1,452.9L621.1,452.9z\"},BN:{d:\"M1617.8,543.4l2.7,3.3l1.1-2.2l2.7,0.2l0.1-4.1l0.1-3.1l-4.6,3.5L1617.8,543.4L1617.8,543.4z\"},BG:{d:\"M1121.6,294.3l-3-0.7l-4-2.2l-5.8,1.4l-2.3,1.6l-7.5-0.3l-4-1l-1.9,0.5l-1.8-2.6l-1.1,1.4l0.7,2.3l2.8,2.6l-1.7,1.9 l-0.7,2l0.6,0.7l-0.7,0.9l2.8,2l0.8,4.1l3.8,0.2l3.9-1.7l3.9,2.1l4.6-0.6l-0.3-3l5-2l4.5,0.8l-2.1-3.5l1.3-4.4L1121.6,294.3 L1121.6,294.3z\"},BF:{d:\"M978.8,477.2h-3.6l-1.4-1.2l-3,0.9l-5.2,2.6l-1.1,2l-4.3,2.9l-0.8,1.6l-2.3,1.3l-2.7-0.9l-1.6,1.6l-0.8,4.4 l-4.5,5.2l0.2,2.2l-1.6,2.7l0.4,3.7l2.5,1.4l1,2.1l2.5,1.3l1.9-1.6l2.7-0.2l3.8,1.6l-0.8-4.8l0.2-3.6l9.7-0.3l2.4,0.5l1.8-1l2.6,0.5 l4.9,0.1l1.9-0.7l1.2-2.8l2.7-0.6l1.2-1.9l0.1-4.4l-6.4-1.4l-0.2-3.1l-3.1-4.1l-0.8-2.9L978.8,477.2L978.8,477.2z\"},BI:{d:\"M1148.2,590l-0.3-2.5l0,0l-3-0.4l-1.7,3.6l-3.5-0.5l1.4,2.9l0.1,1.1l2,6.1l-0.1,0.3l0.6-0.1l2.1-2.3l2.2-3.3 l1.4-1.4v-2L1148.2,590L1148.2,590z\"},KH:{d:\"M1574.8,481.8l-5.2-2.3l-2,4.3l-4.9-2.4l-5.3-1l-7.1,1.3l-3,5.2l2.1,7.7l3.4,6.6l2.6,3.3l4.7,0.9l4.7-2.5l5.8-0.5 l-2.8-3.8l8.9-4.9l-0.1-7.7L1574.8,481.8L1574.8,481.8z\"},CM:{d:\"M1060.1,502.9l0.2-4.3l-0.5-4.2l-2.2-4.1l-1.6,0.4l-0.2,2l2.3,2.6l-0.6,1.1l-0.3,2.1l-4.6,5l-1.5,4l-0.7,3.3 l-1.2,1.4l-1.1,4.5l-3,2.6l-0.8,3.2l-1.2,2.6l-0.5,2.6l-3.9,2.2l-3.2-2.6l-2.1,0.1l-3.3,3.7l-1.6,0.1l-2.7,6.1l-1.4,4.5v1.8l1.4,0.9 l1.1,2.8l2.6,1.1l2.2,4.2l-0.8,5l9.2,0.2l2.6-0.4l3.4,0.8l3.4-0.8l0.7,0.3l7.1,0.3l4.5,1.7l4.5,1.5l0.4-3.5l-0.6-1.8l-0.3-2.9 l-2.6-2.1l-2.1-3.2l-0.5-2.3l-2.6-3.3l0.4-1.9l-0.6-2.7l0.4-5l1.4-1.1l2.7-6.5l0.9-1.7l-1.8-4.4l-0.8-2.6l-2.5-1.1l-3.3-3.7l1.2-3 l2.5,0.6l1.6-0.4l3.1,0.1L1060.1,502.9L1060.1,502.9z\"},CA:{d:\"M659,276.7l-0.7-3l-2.5,1.9l0.5,2.1l5.6,2.6l1.9-0.4l3.3-2.5l-4.7,0.1L659,276.7L659,276.7z M673.4,260.8l0.2-1.1 l-4.1-2.6l-5.9-1.6l-1.9,0.6l3.5,2.9l5.7,1.9L673.4,260.8L673.4,260.8z M368.1,264.5l0.2-3.4l-3.2-2.6l-0.4-2.9l-0.1-2.1l-4.1-0.7 l-2.4-0.9l-4.1-1.4l-1.4,1.5l-0.6,3.3l4.3,1.1l-0.4,1.8l2.9,2.2v2.2l6.3,2.8L368.1,264.5L368.1,264.5z M704.2,251l3.9-3.8l1.4-1.7 l-2.1-0.3l-4.9,2.2l-4.2,3.5l-8.1,9.8l-5.3,3.7l1.6,1.7l-3.8,2.2l0.2,1.9l9.6,0.1l5.4-0.3l4.4,1.5l-4.4,2.9l2.9,0.2l7.3-5.4l1.2,0.8 l-2.5,5.1l3,1.2l2.3-0.2l3.5-5.5l-0.5-3.9l0.3-3.3l-3.7,1.1l2.8-4.6l-4.3-1.9l-2.7,1.5l-3.9-1.7l2.4-2.1l-2.9-1.3l-3.8,2L704.2,251 L704.2,251z M347.4,229.8l-1.9,2l-1.4,2.6l0.9,1.9l-0.6,2.8l0.7,2.8h1.9l-0.2-4.9l7.1-6.9l-4.9,0.5L347.4,229.8L347.4,229.8z M628.3,182.8l-0.4-1.2l-1.7-0.1l-2.8,1.7l-0.4,0.4l0.1,1.7l1.7,0.5L628.3,182.8L628.3,182.8z M618.7,179.6l0.8-1.1l-6-0.1l-4.9,2.7 v1.5l3,0.2L618.7,179.6L618.7,179.6z M615.6,163l-2.7-0.5l-5,5.2l-3.6,4.4l-5.7,2.8l6.3-0.6l-0.8,3.4l8.2-3l6.2-3l0.8,2.6l5.9,1.3 l4.9-1.8l-1.9-1.8l-3.4,0.4l1.3-2.7l-3.7-1.7l-3.4-1.9l-1.5-1.5l-2.8,0.9L615.6,163L615.6,163z M660.2,154.8l3.7-1.7l1-0.7l1.4-2.3 l-2.3-1.5l-4.2,0.7l-3.8,3.1l-0.7,2.6L660.2,154.8L660.2,154.8z M586.4,144.1l-0.8-2l-0.3-1l-1.6-1l-3-1.5l-4.9,2.3l-5,1.7l3.5,2.4 l3.8-0.6l4.1,1.6L586.4,144.1z M608.8,142l-6.6-1l5.7-2.6l-0.4-6l-1.9-2.3l-4.5-0.8l-8.1,3.8l-5.5,5.8l2.9,2.1l1.6,3.3l-6.3,5.5 l-3.2-0.2l-6.2,4.4l4.2-5.2l-4.8-1.8l-4.5,0.9l-2.4,3.4l-5.9-0.1l-7.2,0.8l-5.1-2.4l-5,0.4l-1.5-2.9l-2.1-1.3l-3.8,0.5l-5.2,0.3 l-4.4,1.8l2,2.3l-7,2.8l-1.4-3.3l-4.4,1l-11.8,0.6l-6.4-1.2l8.5-2.6l-2.8-2.8l-4.4,0.4l-4.7-1l-7.5-1.9l-3.8-2.3l-4.5-0.3l-3.3,1.6 l-5.9,0.9l3.9-4.1l-9.4,3.6l-1.4-4.7l-2.1-0.6l-3.8,2.5l-4.5,1.2l-0.2-2.2l-8.2,1.4l-8.8,2.3l-5.2-0.6l-7,1.6l-6.2,2.3l-3.7-0.5 l-3.3-2.6l-5.9-1.3l0,0l-24.3,20.2l-35.4,32.4l4.2,0.1l2.7,1.6l0.6,2.6l0.2,3.9l7.6-3.3l6.4-1.9l-0.5,3l0.7,2.4l1.7,2.7l-1.1,4.2 l-1.5,6.8l4.6,3.8l-3.1,3.7l-5.1,2.9l0,0l-2.5,3.1l2.1,4.4l-3.1,4.9l4.1,2.6l-3.6,3.7l-1.3,5.5l6.9,2.5l1.6,2.7l5.4,6.1h0.7h13.9 h14.6h4.8h15h14.5h14.7h14.8h16.7h16.8h10.1l1.3-2.4h1.6l-0.8,3.4l1,1l3.2,0.4l4.6,1l3.8,1.9l4.4-0.8l5.3,1.6l0,0l3.2-2.4l3.2-1 l1.8-1.5l1.5-0.8l4,1.2l3.3,0.2l0.8,0.8l0.1,3.5l5.2,1l-1.7,1.7l1.2,1.9l-1.9,2.3l1.8,0.8l-1.9,2.1l0,0l1.2,0.2l1.3-0.9l0.5,1.4 l3.4,0.7l3.8,0.1l3.8,0.6l4,1.2l0.8,2l1.4,4.7l-2.4,2l-3.8-0.8l-1-3.8l-0.9,3.9l-3.8,3.4l-0.8,2.9l-1.1,1.7l-4.1,2l0,0l-3.7,3.4 l-2,2.2l2.7,0.4l4.5-2l2.9-1.7l1.6-0.3l2.6,0.6l1.7-0.9l2.8-0.8l4.7-0.8l0,0l0,0l0.3-1.8l-0.3,0.1l-1.7,0.3l-1.8-0.6l2.3-2.1 l1.9-0.7l3.9-0.9l4.6-0.9l1.8,1.2l1.9-1.4l1.9-0.8l0.9,0.4l0.1,0.1l6.7-4.2l2.7-1.2h7.7h9.3l1-1.6l1.7-0.3l2.5-0.9l2.7-2.8l3.2-4.9 l5.5-4.7l1.1,1.7l3.7-1.1l1.5,1.8l-2.8,8.5l2.1,3.5l5.9-0.8l8.1-0.2l-10.4,5.1l-1.5,5.2l3.7,0.5l7.1-4.5l5.8-2.4l12.2-3.7l7.5-4.1 l-2.6-2.2l1-4.5l-7.1,7l-8.6,0.8l-5.5-3.1l-0.1-4.6l0.6-6.8l6.1-4.1l-3.3-3.1l-7.6,0.6l-12.1,5.2l-10.9,8.2l-4.6,1l7.8-5.7l10.1-8.3 l7.2-2.7l5.7-4.4l5.2-0.5l7.3,0.1l10,1.3l8.6-1l7.8-5.1l8.7-2.2l4.2-2.1l4.2-2.3l2-6.8l-1.1-2.3l-3.4-0.8v-5.1l-2.3-1.9l-6.9-1.6 l-2.8-3.4l-4.8-3.4l3.4-3.7l-2-7.1l-2.6-7.5l-1-5.2l-4.3,2.7l-7.4,6.5l-8.1,3.2l-1.6-3.4l-3.7-1l2.2-7.3l2.6-4.9l-7.7-0.5l-0.1-2.2 l-3.6-3.3l-3-2l-4.5,1.5l-4.2-0.5l-6.6-1.6l-3.9,1.3l-3.8,9l-1,5.3l-8.8,6.1l3.1,4.5l0.5,5l-1.7,4l-4.7,4.1L610,224l-9,2.8l1.7,3.2 l-2.2,9.6l-5.6,6.3l-4.6,1.9l-4.4-5.8l-0.1-6.8l1.7-6l3.6-5.2l-4.8-0.6l-7.5-0.4l-3.6-2.5l-4.8-1.6l-1.7-2.9l-3.3-2.2l-7-2.6 l-7.1,1.2l0.7-4.5l1.5-5.5l-6-1l4.9-6.8l4.9-4.6l9.4-6.5l8.6-4.6l5.6-0.7l2.9-3.7l5.1-2.4l6.4-0.4l7.7-3.8l2.9-2.4l7.4-4.7l3.2-2.8 l3.2,1.7l6.5-0.9L637,155l2.3-2.7l-0.8-2.9l5-2.9l1.7-2.7l-3.5-2.6l-5.4-0.8l-5.5-0.4l-4.6,5.9l-6.5,4.6l-7.2,4l-1.3-3.7l4.2-4 l-2.2-3.5l-8.7,4.2L608.8,142L608.8,142z M533.3,123.1l-2.8-1l-14.1,3.2l-5.1,2l-7.8,3.9l5.4,1.4l6.2-0.1l-11.5,2.1v1.9l5.6,0.1 l9-0.4l6.5,1.2l-6.2,1l-5.5-0.3l-7.1,0.9l-3.3,0.6l0.6,4.2l4.2-0.6l4.1,1.5l-0.3,2.5l7.8-0.5l11.2-0.8l9.4-1.8l5-0.4l5.7,1.5 l6.7,0.8l3.1-1.9l-0.7-2.1l7-0.4l2.6-2.4l-5-2.5l-4.2-2.6l2.4-3.6l2.7-5.1l-2.2-2l-3-0.9l-4.2,0.8l-2.8,5.3l-4.3,2.1l2.2-5.1 l-1.7-1.7l-7.3,2.7L539,124l-10.4,1.5L533.3,123.1L533.3,123.1z M572.4,121.6l-1.7-1.1l-5.4,0.2l-2.1,0.7l2.2,3.6 C565.4,125,572.4,121.6,572.4,121.6z M680.1,123.2l-4.4-2.8l-8.4-0.5l-2.1,0.3l-1.7,1.8l2,2.8l0.9,0.3l4.8-0.7l4.1,0.1l4.1,0.1 L680.1,123.2L680.1,123.2z M640.7,122.9l5.7-3.2l-11.2,1.3l-5.8,2.1l-7.1,4.6l-3.3,5.2l5.6,0.1l-6.1,2.3l1.8,1.9l5.9,0.8l7.3,1.5 l13.8,1.2l7.9-0.6l3.2-1.6l2,1.8l3.3,0.3l2,3.3l-3.5,1.4l7.1,1.8l4.6,2.6l0.5,1.9L674,154l-8.6,5.4l-3.2,2.7l0.2,2l-9.2,0.7l-8,0.1 l-5.4,4.2l2.4,1.9l13-0.9l0.9-1.6l4.7,2.7l4.7,2.9l-2.4,1.6l3.8,2.8l7.6,3.3l10.7,2.3l0.3-2l-2.8-3.5l-3.5-4.9l8.5,4.6l4.7,1.5 l3.6-4.1v-5.6l-1-1.5l-4.4-2.5l-2.7-3.3l2.3-3.2l5.8-0.7l3.8,5.4l4,2.4l10.7-6.5l3.3-3.9l-6.4-0.3l-3.2-5.1l-5.9-1.2l-7.7-3.5l9-2.5 l-0.8-5l-2.2-2.1l-8.3-2.1l-1.9-3.3l-8.2,1.2l1.1-2.3l-3.6-2.5l-6.8-2.6l-5.2,2.1l-9,1.5l3.3-3.4l-2.3-5.3l-11.6,2.1l-7.1,4.1 L640.7,122.9L640.7,122.9z M590.7,119.5l-7.1,2.4l0.9,3.4l-7.4-0.7l-1.7,1.7l5.8,3.9l0.9,2l3.4,0.5l8.4-2l5.1-4.7l-3.8-2.2l6-2.4 l0.5-1.5l-7.5,0.6L590.7,119.5L590.7,119.5z M613,124.9l5.6-1l10-4.5l-6.1-1.2l-7.8-0.2l-5.2,1.4l-4.2,2.1l-2.5,2.6l-1.8,4.5 l4.3,0.2L613,124.9z M498.3,132.1l2.6-2.3l9.1-3.6l13.8-3.6l6.4-1.3l-1.6-2.1l-1.9-1.5l-9.4-0.2l-4.1-1.1l-14,0.8l-0.3,3.1l-7.6,3.3 l-7.4,3.8l-4.3,2.2l5.9,2.7l-0.6,2.3L498.3,132.1L498.3,132.1z M622.4,113.8l0.3-1.6l-1.4-1.7l-6.9,1.3L610,114l3.2,1.3l5.1,0.4 L622.4,113.8L622.4,113.8z M613.7,105.2l-1.1,0.7l-4.8-0.3l-7.6,1.6l-3.8-0.1l-4.3,3.8l6.6-0.4l-3.4,2.9l3.2,0.8l6.8-0.5l5.8-3.7 l2.8-2.5L613.7,105.2z M574.6,107.7l1.8-2.3l-3.1-0.5l-5.7,1.7l-0.7,4.7l-6.1-0.4L558,108l-8.2-1.6l-5.4,1.4l-11.6,4.8l4.1,0.8 l17.8-0.5l-10.6,2.2l-1.5,1.6l5.9-0.1l12.2-2.2l13.8-0.8l5.1-2.3l2.3-2.4l-3.7-0.2l-4.3,0.8C573.9,109.5,574.6,107.7,574.6,107.7z M629.8,103.4l-7.1-0.3l-3.8,2l2.6,1.5l7,0.6l1.4,2.1l-2.2,2.4l-1.5,2.8l8.5,1.6l5.5,0.6l8-0.1l11.6-0.8l4.3,0.6l6.7-1l3.5-1.4l1-2 l-2.3-1.9l-5.8-0.3l-8,0.4l-7,1.1l-5.1-0.4l-4.8-0.3l-1.2-1.1l-3.1-1.1l2.8-1.9l-1.4-1.6l-7.3,0.1L629.8,103.4L629.8,103.4z M554.8,100.8l-6,0.7l-5.5-0.1l-12.1,3.1l-11.6,3.7l0,0l3.6,1l7-0.7l9.8-2.1l3.8-0.3l5.2-1.6L554.8,100.8z M635.3,101.4l1-0.5 l-1.5-0.9l-7.2-0.1l-0.6,1.3l6.4,0.3L635.3,101.4L635.3,101.4z M576.9,100.6l3.2-1.4l-4.1-0.8l-5.9,0.5l-5.1,1.5l3.3,1.5 C568.3,101.9,576.9,100.6,576.9,100.6z M584.7,96.4l-3.3-0.9l-1.6-0.2l-5.7,1.3l-1,0.7h6L584.7,96.4z M631.1,98.9l3-1.7l-2.3-1.6 l-1.7-0.3l-4.4-0.1l-2.1,1.8l-0.7,1.8l1.6,1.1L631.1,98.9L631.1,98.9z M617.4,97.7l0.1-2.2l-7.4-1.7l-6.1-0.6l-2.1,1.7l2.8,1.1 l-5.3,1.4l7.7,0.2l4,1.5l5.2,0.5L617.4,97.7z M671.1,91.6l0.6-2.8L667,88l-4.7-0.9l-1.6-2.2l-8.2,0.2l0.3,0.9l-3.9,0.3l-4.1,1.3 l-4.9,1.9l-0.3,1.9l2,1.5h6.5l-4.3,1.2l-2.1,1.6l1.6,1.9l6.7,0.6l6.8-0.4l10.5-3.4l6.4-1.3L671.1,91.6z M749.6,77.8l-7-0.2l-6.9-0.3 l-10.2,0.6l-1.4-0.4l-10.3,0.2l-6.4,0.4l-5.1,0.6l-5,2l-2.3-1l-3.9-0.2l-6.7,1.4l-7.4,0.6l-4.1,0.1l-6,0.8l-1.1,1.3l2.5,1.2l0.8,1.6 l4.4,1.5l12.4-0.3l7.2,0.5l-7.2,1.5l-2.2-0.4l-9.3-0.2l-1.1,2.2l3,1.7l-2.8,1.6l-7.5,1.1l-4.9,1.7l4.8,0.9l1.7,3l-7.5-2l-2.5,0.3 l-2,3.4l-8,1.1l-2,2.3l6.7,0.3l4.9,0.6l11.7-0.8l8.4,1.4l12.6-3l1-1.1l-6.4,0.2l0.5-1.1l6.5-1.4l3.6-1.9l6.8-1.3l5-1.6l-0.8-2.2 l3.3-0.8l-4.3-0.6l11.1-0.4l3.2-0.9l7.9-0.8l9.3-3.5l6.8-1.1l10.3-2.5h-7.4l3.9-0.9l9-0.8l9.7-1.6l1.1-1.1l-5.2-1l-6.7-0.4 L749.6,77.8L749.6,77.8z\"},CV:{d:\"M841.4,477.6l0.1-0.4l-0.2-0.6l-0.3-0.1l-0.6,0.4l-0.1,0.3l0.1,0.3l0.3,0.3l0.3,0.1L841.4,477.6L841.4,477.6z M847.7,475.9l0.4-0.2V475l-0.1-0.3h-0.4l-0.2,0.4v0.1v0.4L847.7,475.9L847.7,475.9L847.7,475.9z M846.3,476.7l-0.5-0.9l-0.3-0.1 l-0.6-0.7v-0.3l-0.3-0.1v0.2v0.4l-0.2,0.5v0.5l0.4,0.8l0.4,0.2l0.7,0.1L846.3,476.7L846.3,476.7z M849.4,468.9v0.5l-0.3,0.7l0.5,0.3 l0.3,0.1l0.6-0.4l0.2-0.5l-0.1-0.3l-0.3-0.3l-0.3-0.1l-0.1,0.1L849.4,468.9L849.4,468.9z M843,466.4l-1-0.1l-0.6-0.2h-0.1v0.3 l0.4,0.8l0.2-0.5l0.2-0.1l0.8,0.2l0.4-0.1l-0.1-0.1L843,466.4L843,466.4z M849.7,466.2l-0.1-0.5V465h-0.2l-0.3,0.2l0.1,0.7l0.1,0.1 l0.2,0.5L849.7,466.2L849.7,466.2z M838.6,465.2V465l-0.3-0.5l-0.3,0.1l-0.4,0.2l-0.1,0.3l0.4,0.2h0.2L838.6,465.2L838.6,465.2z M837.1,464.3l0.8-0.6l0.2-0.3l-0.2-0.5l-0.5-0.1l-1.2,0.6l-0.1,0.2l0.1,0.3l0.1,0.5l0.2,0.1L837.1,464.3L837.1,464.3z\"},KY:{d:\"M527,449.1l-0.1-0.3l-0.1,0.1v0.6h0.5h0.2l0.3-0.2h0.6l-0.1-0.2l-0.8-0.1l-0.1,0.1l-0.2,0.1L527,449.1L527,449.1z M535,446.8L535,446.8l-0.1-0.1h-0.1l-0.3,0.1h-0.1h-0.1l-0.1,0.1l-0.1,0.1h0.2l0.4-0.2H535L535,446.8L535,446.8z M535.8,446.7 l0.5-0.2l0,0l-0.1-0.1h-0.1l-0.1,0.1h-0.1l-0.5,0.3h0.2L535.8,446.7L535.8,446.7z\"},CF:{d:\"M1110.5,517.3l-0.5-0.3l-2-1.8l-0.3-2l0.8-2.6V508l-3.3-4l-0.7-2.7l-3.5,1.1l-2.8,2.5l-4,7l-5.2,2.9l-5.4-0.4 l-1.6,0.6l0.6,2.3l-2.9,2.2l-2.3,2.5l-7.1,2.4l-1.4-1.4l-0.9-0.2l-1,1.7l-4.7,0.4l-2.7,6.5l-1.4,1.1l-0.4,5l0.6,2.7l-0.4,1.9 l2.6,3.3l0.5,2.3l2.1,3.2l2.6,2.1l0.3,2.9l0.6,1.8l2.9-5.9l3.3-3.4l3.8,1.1l3.6,0.4l0.5-4.5l2.2-3.2l3-2l4.6,2.1l3.6,2.4l4.1,0.6 l4.2,1.2l1.6-3.8l0.8-0.5l2.6,0.6l6.2-3.1l2.2,1.3l1.8-0.2l0.9-1.5l2-0.6l4.3,0.7l3.6,0.1l1.8-0.6l-0.9-2.1l-4.2-2.5l-1.5-3.8 l-2.4-2.7l-3.8-3.4l-0.1-2l-3.1-2.6L1110.5,517.3L1110.5,517.3z\"},TD:{d:\"M1108.4,447.6l-22.4-12.2l-22.3-12.2l-5.4,3.5l1.6,9.9l2,1.6l0.2,2.1l2.3,2.2l-1.1,2.7l-1.8,12.9l-0.2,8.3l-6.9,6 l-2.3,8.4l2.4,2.3v4.1l3.6,0.2l-0.5,2.9l2.2,4.1l0.5,4.2l-0.2,4.3l3.1,5.8l-3.1-0.1l-1.6,0.4l-2.5-0.6l-1.2,3l3.3,3.7l2.5,1.1 l0.8,2.6l1.8,4.4l-0.9,1.7l4.7-0.4l1-1.7l0.9,0.2l1.4,1.4l7.1-2.4l2.3-2.5l2.9-2.2l-0.6-2.3l1.6-0.6l5.4,0.4l5.2-2.9l4-7l2.8-2.5 l3.5-1.1v-1.6l-2.1-1.8l-0.1-3.7l-1.2-2.5l-2,0.4l0.5-2.4l1.4-2.6l-0.7-2.7l1.8-1.9l-1.2-1.5l1.4-3.9l2.4-4.7l4.8,0.4L1108.4,447.6 L1108.4,447.6z\"},CL:{d:\"M648.4,905.2l-3.7-0.7l-3.3,2.5l0.2,4.1l-1.2,2.8l-7.2-2.2l-8.6-4l-4.5-1.3l9.7,6.8l6.3,3.2l7.5,3.4l5.3,0.9 l4.3,1.8l3,0.5l2.3,0.1l3.2-1.8l0.5-2.4l-2.9-0.2h-5L648.4,905.2L648.4,905.2z M601.1,708.9l-3.7-7.1l1.1-6.2l-3.2-2.7l-1.2-4.6 L591,684l-1.2,3.3l-2.7,1.6l2.1,9l1.5,10.4l-0.1,14.2v13.2l0.9,12.3l-1.9,7.8l2.1,7.8l-0.5,5.3l3.2,9.5l-0.1,9.5l-1.2,10.2 l-0.6,10.5l-2.1,0.2l2.4,7.3l3.3,6.3l-1.1,4.3l1.9,11.6l1.5,8.8l3.5,0.9l-1.1-7.7l4,1.6l1.8,12.7l-6.4-2.1l2,10.2l-2.7,5.5l8.2,1.8 l-3.4,4.8l0.2,6l5,10.6l4.2,4.1l0.2,3.6l3.3,3.8l7.5,3.5l0,0l7.4,4.2l6.2,2l2-0.1l-1.8-5.7l3.4-2.2l1.7-1.5h4.2l-4.8-0.9l-12-0.8 l-3.5-3.6l-1.8-4.6l-3.1,0.4l-2.6-2.2l-3.1-6.6l2.7-2.7l0.1-3.9l-1.8-3.2l0.7-5.3l-1.1-8.2l-1.8-3.7l1.8-1.1l-1.3-2.3l-2.8-1.3 l0.8-2.6l-3.1-2.3l-3.6-7.1l1.6-1.2l-3.3-7.6l-0.7-6.4l-0.3-5.7l2.5-2.4l-3.3-6.3l-1.5-5.9l2.9-4.3l-1.4-5.4l1.6-6.2l-1.3-5.9 l-1.6-1.2l-4.9-10.9l2.1-6.5l-1.7-6.2l0.9-5.8l2.6-5.9l3.2-4l-2-2.5l0.9-2l-1.6-10.6l5.6-3.2l1.1-6.6l-0.9-1.6l-3.8,0.9L601.1,708.9 L601.1,708.9z\"},CN:{d:\"M1587.2,453.3l0.6-3.6l2-2.8l-1.6-2.5l-3.2-0.1l-5.8,1.8l-2.2,2.8l1,5.5l4.9,2L1587.2,453.3L1587.2,453.3z M1600.4,256.8l-6.1-6.1l-4.4-3.7l-3.8-2.7l-7.7-6.1l-5.9-2.3l-8.5-1.8l-6.2,0.2l-5.1,1.1l-1.7,3l3.7,1.5l2.5,3.3l-1.2,2l0.1,6.5 l1.9,2.7l-4.4,3.9l-7.3-2.3l0.6,4.6l0.3,6.2l2.7,2.6l2.4-0.8l5.4,1l2.5-2.3l5.1,2l7.2,4.3l0.7,2.2l-4.3-0.7l-6.8,0.8l-2.4,1.8 l-1.4,4.1l-6.3,2.4l-3.1,3.3l-5.9-1.3l-3.2-0.5l-0.4,4l2.9,2.3l1.9,2.1l-2.5,2l-1.9,3.3l-4.9,2.2l-7.5,0.2l-7.2,2.2l-4.4,3.3l-3.2-2 l-6.2,0.1l-9.3-3.8l-5.5-0.9l-6.4,0.8l-11.2-1.3l-5.5,0.1l-4.7-3.6l-4.9-5.7l-3.4-0.7l-7.9-3.8l-7.2-0.9l-6.4-1l-3-2.7l-1.3-7.3 l-5.8-5l-8.1-2.3l-5.7-3.3l-3.3-4.4l-1.7,0.5l-1.8,4.2l-3.8,0.6l2.5,6.2l-1.6,2.8l-10.7-2l1,11.1l-2,1.4l-9,2.4l8.7,10.7l-2.9,1.6 l1.7,3.5l-0.2,1.4l-6.8,3.4l-1,2.4l-6.4,0.8l-0.6,4l-5.7-0.9l-3.2,1.2l-4,3l1.1,1.5l-1,1.5l3,5.9l1.6-0.6l3.5,1.4l0.6,2.5l1.8,3.7 l1.4,1.9l4.7,3l2.9,5l9.4,2.6l7.6,7.5l0.8,5.2l3,3.3l0.6,3.3l-4.1-0.9l3.2,7l6.2,4l8.5,4.4l1.9-1.5l4.7,2l6.4,4.1l3.2,0.9l2.5,3.1 l4.5,1.2l5,2.8l6.4,1.5l6.5,0.6l3-1.4l1.5,5.1l2.6-4.8l2.6-1.6l4.2,1.5l2.9,0.1l2.7,1.8l4.2-0.8l3.9-4.8l5.3-4l4.9,1.5l3.2-2.6 l3.5,3.9l-1.2,2.7l6.1,0.9l3-0.4l2.7,3.7l2.7,1.5l1.3,4.9l0.8,5.3l-4.1,5.3l0.7,7.5l5.6-1l2.3,5.8l3.7,1.3l-0.8,5.2l4.5,2.4l2.5,1.2 l3.8-1.8l0.6,2.6l0.7,1.5l2.9,0.1l-1.9-7.2l2.7-1l2.7-1.5h4.3l5.3-0.7l4.1-3.4l3,2.4l5.2,1.1l-0.2,3.7l3,2.6l5.9,1.6l2.4-1l7.7,2 l-0.9,2.5l2.2,4.6l3-0.4l0.8-6.7l5.6-0.9l7.2-3.2l2.5-3.2l2.3,2.1l2.8-2.9l6.1-0.7l6.6-5.3l6.3-5.9l3.3-7.6l2.3-8.4l2.1-6.9l2.8-0.5 l-0.1-5.1l-0.8-5.1l-3.8-2l-2.5-3.4l2.8-1.7l-1.6-4.7l-5.4-4.9l-5.4-5.8l-4.6-6.3l-7.1-3.5l0.9-4.6l3.8-3.2l1-3.5l6.7-1.8l-2.4-3.4 l-3.4-0.2l-5.8-2.5l-3.9,4.6l-4.9-1.9l-1.5-2.9l-4.7-1l-4.7-4.4l1.2-3l5-0.3l1.2-4.1l3.6-4.4l3.4-2.2l4.4,3.3l-1.9,4.2l2.3,2.5 l-1.4,3l4.8-1.8l2.4-2.9l6.3-1.9l2.1-4l3.8-3.4l1-4.4l3.6,2l4.6,0.2l-2.7-3.3l6.3-2.6l-0.1-3.5l5.5,3.6l0,0l-1.9-3.1l2.5-0.1 l-3.8-7.3l-4.7-5.3l2.9-2.2l6.8,1.1l-0.6-6l-2.8-6.8l0.4-2.3l-1.3-5.6l-6.9,1.8l-2.6,2.5h-7.5l-6-5.8l-8.9-4.5L1600.4,256.8 L1600.4,256.8z\"},CO:{d:\"M578.3,497.2l1.2-2.1l-1.3-1.7l-2-0.4l-2.9,3.1l-2.3,1.4l-4.6,3.2l-4.3-0.5l-0.5,1.3l-3.6,0.1l-3.3,3l-1.4,5.4 l-0.1,2.1l-2.4,0.7l-4.4,4.4l-2.9-0.2l-0.7,0.9l1.1,3.8l-1.1,1.9l-1.8-0.5l-0.9,3.1l2.2,3.4l0.6,5.4l-1.2,1.6l1.1,5.9l-1.2,3.7 l2,1.5l-2.2,3.3l-2.5,4l-2.8,0.4l-1.4,2.3l0.2,3.2l-2.1,0.5l0.8,2l5.6,3.6l1-0.1l1.4,2.7l4.7,0.9l1.6-1l2.8,2.1l2.4,1.5l1.5-0.6 l3.7,3l1.8,3l2.7,1.7l3.4,6.7l4.2,0.8l3-1.7l2.1,1.1l3.3-0.6l4.4,3l-3.5,6.5l1.7,0.1l2.9,3.4l2.2-17.4l0.1-2.8l-0.9-3.6l-2.5-2.4 v-4.6l3.2-1l1.1,0.6l0.2-2.4l-3.3-0.7v-3.9l10.9,0.1l1.9-2.2l1.6,2l1,3.8l1.1-0.8l-1.7-6.4l-1.4-2.2l-2-1.4l2.9-3.1l-0.2-1.5 l-1.5-1.9l-1-4.2l0.5-4.6l1.3-2.1l1.2-3.4l-2-1.1l-3.2,0.7l-4-0.3l-2.3,0.7l-3.8-5.5l-3.2-0.8l-7.2,0.6l-1.3-2.2l-1.3-0.6l-0.2-1.3 l0.8-2.4l-0.4-2.5l-1.1-1.4l-0.6-2.9l-2.9-0.5l1.8-3.7l0.9-4.5l1.8-2.4l2.2-1.8l1.6-3.2L578.3,497.2L578.3,497.2z\"},KM:{d:\"M1221.1,650.5l-0.4-0.4h-0.4v0.2l0.1,0.4l1.1,0.2L1221.1,650.5L1221.1,650.5z M1225,649L1225,649l-0.3,0.1l-0.1,0.2 l-0.1,0.3h-0.3h-0.2h-0.4l0.8,0.5l0.5,0.5l0.2,0.2l0.1-0.2l0.1-0.7L1225,649L1225,649z M1219.4,647.9l0.2-0.3l-0.2-0.7l-0.4-0.8 l0.1-1.4l-0.2-0.2h-0.3l-0.1,0.1l-0.1,0.3l-0.3,2l0.4,0.6l0.3,0.1L1219.4,647.9L1219.4,647.9L1219.4,647.9z\"},CG:{d:\"M1080.3,549.9l-3.6-0.4l-3.8-1.1l-3.3,3.4l-2.9,5.9l-0.4,3.5l-4.5-1.5l-4.5-1.7l-7.1-0.3l-0.4,2.8l1.5,3.3l4.2-0.5 l1.4,1.2l-2.4,7.4l2.7,3.8l0.6,4.9l-0.8,4.3l-1.7,3l-4.9-0.3l-3-3l-0.5,2.8l-3.8,0.8l-1.9,1.6l2.1,4.2l-4.3,3.5l4.6,6.7l2.2-2.7 l1.8-1.1l2,2.2l1.5,0.6l1.9-2.4l3.1,0.1l0.4,1.8l2,1.1l3.4-4l3.3-3.1l1.4-2l-0.2-5.3l2.5-6.2l2.6-3.2l3.7-3.1l0.6-2l0.2-2.4l0.9-2.2 l-0.3-3.6l0.7-5.6l1.1-4l1.6-3.4L1080.3,549.9L1080.3,549.9z\"},CR:{d:\"M509.1,502.6l-1.4,1.3l-1.7-0.4l-0.8-1.3l-1.7-0.5l-1.4,0.8l-3.5-1.7l-0.9,0.8l-1.4,1.2l1.5,0.9l-0.9,2l-0.1,2 l0.7,1.3l1.7,0.6l1.2,1.8l1.2-1.6l-0.3-1.8l1.4,1.1l0.3,1.9l1.9,0.8l2.1,1.3l1.5,1.5l0.1,1.4l-0.7,1.1l1.1,1.3l2.9,1.4l0.4-1.2 l0.5-1.3l-0.1-1.2l0.8-0.7l-1.1-1l0.1-2.5l2.2-0.6l-2.4-2.7l-2-2.6L509.1,502.6L509.1,502.6z\"},HR:{d:\"M1065,280.4l-4-2.6l-1.6-0.8l-3.9,1.7l-0.3,2.5l-1.7,0.6l0.2,1.7l-2-0.1l-1.8-1l-0.8,1l-3.5-0.2l-0.2,0.1v2.2l1.7,2 l1.3-2.6l3.3,1l0.3,2l2.5,2.6l-1,0.5l4.6,4.5l4.8,1.8l3.1,2.2l5,2.3l0,0l0.5-1l-4.7-2.4l-2.2-2.5l-2-1.4l-2.5-2.3l-1.3-1.9l-2.7-2.9 l0.9-2.5l1.9,1.4l1-1.3l2.3-0.1l4.4,1l3.5-0.1l2.4,1.4l0,0l1.7-2.3l-1.7-1.8l-1.5-2.4l0,0l-1.8,0.9L1065,280.4L1065,280.4z\"},CU:{d:\"M539,427.3l-4.9-2.1l-4.3-0.1l-4.7-0.5l-1.4,0.7l-4.2,0.6l-3,1.3l-2.7,1.4l-1.5,2.3l-3.1,2l2.2,0.6l2.9-0.7l0.9-1.6 l2.3-0.1l4.4-3.3l5.4,0.3l-2.3,1.6l1.8,1.3l7,1l1.5,1.3l4.9,1.7l3.2-0.2l0.8,3.6l1.7,1.8l3.5,0.4l2.1,1.7l-4.1,3.5l7.9-0.6l3.8,0.5 l3.7-0.3l3.8-0.8l0.8-1.5l-3.9-2.6l-4-0.3l0.6-1.7l-3.1-1.3h-1.9l-3-2.8l-4.2-4l-1.8-1.5l-5.2,0.8L539,427.3L539,427.3z\"},CW:{d:\"M595.9,494.9v-0.6l-0.9-0.4v0.3l0.1,0.2l0.3,0.1l0.1,0.2l-0.1,0.6l0.2,0.3L595.9,494.9L595.9,494.9z\"},CY:{d:\"M1149.9,348.4l-0.3-0.1l-0.5,0.2l-0.4,0.4l-0.4,0.3l-0.5-0.3l0.2,0.9l0.6,1.1l0.2,0.3l0.3,0.2l1.1,0.3h0.3h0.6 l0.2,0.1l0.2,0.4h0.4v-0.1v-0.3l0.2-0.2l0.3-0.2h0.3l0.6-0.1l0.6-0.2l0.5-0.4l0.9-1h0.3h0.3h0.6l0.6-0.1l-0.2-0.4l-0.1-0.1l-0.4-0.5 l-0.2-0.4l0.1-0.6l2.5-1.9l0.5-0.5l-0.8,0.2l-0.6,0.4l-0.4,0.2l-0.7,0.4l-2.3,0.8l-0.8,0.1h-0.8l-1-0.1l-0.9-0.2v0.7l-0.2,0.6 l-0.6,0.2L1149.9,348.4L1149.9,348.4z\"},CZ:{d:\"M1049.4,248.5l-2.1,0.6l-1.4-0.7l-1.1,1.2l-3.4,1.2l-1.7,1.5l-3.4,1.3l1,1.9l0.7,2.6l2.6,1.5l2.9,2.6l3.8,2l2.6-2.5 l1.7-0.5l4,1.9l2.3-0.3l2.3,1.2l0.6-1.4l2.2,0.1l1.6-0.6l0.1-0.6l0.9-0.3l0.2-1.4l1.1-0.3l0.6-1.1h1.5l-2.6-3.1l-3.6-0.3l-0.7-2 l-3.4-0.6l-0.6,1.5l-2.7-1.2l0.1-1.7l-3.7-0.6L1049.4,248.5L1049.4,248.5z\"},CD:{d:\"M1124.9,539.4l-4.3-0.7l-2,0.6l-0.9,1.5l-1.8,0.2l-2.2-1.3l-6.2,3.1l-2.6-0.6l-0.8,0.5l-1.6,3.8l-4.2-1.2l-4.1-0.6 l-3.6-2.4l-4.6-2.1l-3,2l-2.2,3.2l-0.5,4.5l-0.3,3.8l-1.6,3.4l-1.1,4l-0.7,5.6l0.3,3.6l-0.9,2.2l-0.2,2.4l-0.6,2l-3.7,3.1l-2.6,3.2 l-2.5,6.2l0.2,5.3l-1.4,2l-3.3,3.1l-3.4,4l-2-1.1l-0.4-1.8l-3.1-0.1l-1.9,2.4l-1.5-0.6l-2,1.3l-0.9,1.7l-0.2,2.7l-1.5,0.7l0.8,2 l2.3-0.9l1.7,0.1l1.9-0.7l16.6,0.1l1.3,4.7l1.6,3.8l1.3,2.1l2.1,3.3l3.7-0.5l1.9-0.9l3,0.9l0.9-1.6l1.5-3.7l3.4-0.3l0.3-1.1h2.9 l-0.5,2.3h6.8v4l1.2,2.4l-0.9,3.8l0.3,4l1.9,2.3l-0.5,7.6l1.4-0.6l2.4,0.2l3.5-1l2.6,0.4l1.9,0.1l0.3,2l2.6-0.1l3.5,0.6l1.8,2.8 l4.5,0.9l3.4-2l1.2,3.4l4.3,0.8l2,2.8l2.1,3.5h4.3l-0.3-6.9l-1.5,1.2l-3.9-2.5l-1.4-1.1l0.8-6.4l1.2-7.5l-1.2-2.8l1.6-4.1l1.6-0.7 l7.5-1.1l1,0.3l0.2-1.1l-1.5-1.7l-0.7-3.5l-3.4-3.5l-1.8-4.5l1-2.7l-1.5-3.6l1.1-10.2l0.1,0.1l-0.1-1.1l-1.4-2.9l0.6-3.5l0.8-0.4 l0.2-3.8l1.6-1.8l0.1-4.8l1.3-2.4l0.3-5.1l1.2-3l2.1-3.3l2.2-1.7l1.8-2.3l-2.3-0.8l0.3-7.5l0,0l-5-4.2l-1.4-2.7l-3.1,1.3l-2.6-0.4 l-1.5,1.1l-2.5-0.8l-3.5-5.2l-1.8,0.6L1124.9,539.4L1124.9,539.4z\"},DK:{d:\"M1035.9,221.2l-1.7-3l-6.7,2l0.9,2.5l5.1,3.4L1035.9,221.2L1035.9,221.2z M1027.3,216.1l-2.6-0.9l-0.7-1.6l1.3-2 l-0.1-3l-3.6,1.6l-1.5,1.7l-4,0.4l-1.2,1.7l-0.7,1.6l0.4,6.1l2.1,3.4l3.6,0.8l3-0.9l-1.5-3l3.1-4.3l1.4,0.7L1027.3,216.1 L1027.3,216.1z\"},DJ:{d:\"M1217.8,499.2l-2.5-1.7l3.1-1.5l0.1-2.7l-1.4-1.9l-1.6,1.5l-2.4-0.5l-1.9,2.8l-1.8,3l0.5,1.7l0.2,2l3.1,0.1l1.3-0.5 l1.3,1.1L1217.8,499.2L1217.8,499.2z\"},DM:{d:\"M635.8,475.1l0.3-0.7l-0.1-1l-0.2-0.4l-0.8-0.3v0.2l-0.1,0.5l0.3,0.8l0.1,1.1L635.8,475.1z\"},DO:{d:\"M579.6,457.4v1.8l1.4,1l2.6-4.4l2-0.9l0.6,1.6l2.2-0.4l1.1-1.2l1.8,0.3l2.6-0.2l2.5,1.3l2.3-2.6l-2.5-2.3l-2.4-0.2 l0.3-1.9l-3,0.1l-0.8-2.2l-1.4,0.1l-3.1-1.6l-4.4-0.1l-0.8,1.1l0.2,3.5l-0.7,2.4l-1.5,1.1l1.2,1.9L579.6,457.4L579.6,457.4z\"},EC:{d:\"M553.1,573.1l-2.4-1.5l-2.8-2.1l-1.6,1l-4.7-0.9l-1.4-2.7l-1,0.1l-5.6-3.6l-3.9,2.5l-3.1,1.4l0.4,2.6l-2.2,4.1 l-1,3.9l-1.9,1l1,5.8l-1.1,1.8l3.4,2.7l2.1-2.9l1.3,2.8l-2.9,4.7l0.7,2.7l-1.5,1.5l0.2,2.3l2.3-0.5l2.3,0.7l2.5,3.2l3.1-2.6l0.9-4.3 l3.3-5.5l6.7-2.5l6-6.7l1.7-4.1L553.1,573.1z\"},EG:{d:\"M1129.7,374.8l-5.5-1.9l-5.3-1.7l-7.1,0.2l-1.8,3l1.1,2.7l-1.2,3.9l2,5.1l1.3,22.7l1,23.4h22.1h21.4h21.8l-1-1.3 l-6.8-5.7l-0.4-4.2l1-1.1l-5.3-7l-2-3.6l-2.3-3.5l-4.8-9.9l-3.9-6.4l-2.8-6.7l0.5-0.6l4.6,9.1l2.7,2.9l2,2l1.2-1.1l1.2-3.3l0.7-4.8 l1.3-2.5l-0.7-1.7l-3.9-9.2l0,0l-2.5,1.6l-4.2-0.4l-4.4-1.5l-1.1,2.1l-1.7-3.2l-3.9-0.8l-4.7,0.6l-2.1,1.8l-3.9,2L1129.7,374.8 L1129.7,374.8z\"},SV:{d:\"M487.2,487l0.6-2.5l-0.7-0.7l-1.1-0.5l-2.5,0.8l-0.1-0.9l-1.6-1l-1.1-1.3l-1.5-0.5l-1.4,0.4l0.2,0.7l-1.1,0.7 l-2.1,1.6l-0.2,1l1.4,1.3l3.1,0.4l2.2,1.3l1.9,0.6l3.3,0.1L487.2,487L487.2,487z\"},GQ:{d:\"M 1040.1 557.8 l -9.2 -0.2 l -1.9 7.2 l 1 0.9 l 1.9 -0.3 h 8.2 V 557.8 L 1040.1 557.8 z M 1023 551 L 1023.6 550.2 L 1023.6 549.8 L 1024.6 548.25 L 1024.45 547.5 L 1023.04 547.4 L 1022.5 548.2 L 1022.55 548.55 L 1022.25 549.36 L 1021.55 549.5 L 1021.25 550.15 L 1021.5 550.7 L 1023 551 M 1003.8 580.2 L 1003.9 580.44 L 1003.82 580.62 L 1003.65 580.55 L 1003.63 580.232 L 1003.8 580.2\"},ER:{d:\"M1198.1,474l-3.2-3.1l-1.8-5.9l-3.7-7.3l-2.6,3.6l-4,1l-1.6,2l-0.4,4.2l-1.9,9.4l0.7,2.5l6.5,1.3l1.5-4.7l3.5,2.9 l3.2-1.5l1.4,1.3l3.9,0.1l4.9,2.5l1.6,2.2l2.5,2.1l2.5,3.7l2,2.1l2.4,0.5l1.6-1.5l-2.8-1.9l-1.9-2.2l-3.2-3.7l-3.2-3.6L1198.1,474z\"},EE:{d:\"M1093.2,197.5l-5.5,0.9l-5.4,1.6l0.9,3.4l3.3,2.1l1.5-0.8l0.1,3.5l3.7-1l2.1,0.7l4.4,2.2h3.8l1.6-1.9l-2.5-5.5 l2.6-3.4l-0.9-1l0,0l-4.6,0.2L1093.2,197.5z\"},ET:{d:\"M1187.6,477l-1.5,4.7l-6.5-1.3l-0.7,5.5l-2.1,6.2l-3.2,3.2l-2.3,4.8l-0.5,2.6l-2.6,1.8l-1.4,6.7v0.7l0.2,5l-0.8,2 l-3,0.1l-1.8,3.6l3.4,0.5l2.9,3.1l1,2.5l2.6,1.5l3.5,6.9l2.9,1.1v3.6l2,2.1h3.9l7.2,5.4h1.8l1.3-0.1l1.2,0.7l3.8,0.5l1.6-2.7 l5.1-2.6l2.3,2.1h3.8l1.5-2l3.6-0.1l4.9-4.5l7.4-0.3l15.4-19.1l-4.8,0.1l-18.5-7.6l-2.2-2.2l-2.1-3.1l-2.2-3.5l1.1-2.3l-1.3-1.1 l-1.3,0.5l-3.1-0.1l-0.2-2l-0.5-1.7l1.8-3l1.9-2.8l-2-2.1l-2.5-3.7l-2.5-2.1l-1.6-2.2l-4.9-2.5l-3.9-0.1l-1.4-1.3l-3.2,1.5 L1187.6,477L1187.6,477z\"},FK:{d:\"M690.3,902.7l-0.1-0.3l-0.4-0.2l-0.2-0.1l0.1,0.2l0.1,0.3l0.1,0.2l0.2,0.1L690.3,902.7L690.3,902.7z M695.8,901.4 L695.8,901.4l-0.3-0.1l-0.1,0.2l0.2,0.3l0.4,0.1L695.8,901.4L695.8,901.4z M682.9,900l-0.1,0.2l-0.4,0.1l0.2,0.3l0.6,0.4h0.4 l0.1-0.3l-0.1-0.6h-0.3L682.9,900L682.9,900z M685.7,898l-0.9-0.3l-0.4-0.3h-0.3l0.4,0.4l0.1,0.2l0.1,0.2l0.6,0.3l0.6,0.3l0.4,0.3 l-0.1,0.1l-0.8,0.3h-0.3l-0.2,0.1l0.4,0.2l0.6-0.1l0.2-0.1h0.2l0.3,0.1v0.2l-0.1,0.2l-0.2,0.2l-0.4,0.3l-0.6,0.4h-0.8l-0.7,0.7 l0.9,0.5l0.7,0.3h0.9v-0.1l0.2-0.1h0.3l0.1-0.1l0.2-0.4v-0.6h0.2l0.3,0.1l0.7-0.1l0.3-0.1l0.6-0.9l0.4-0.8l0.2-0.4l0.3-0.2l0.1-0.2 l0.1-0.3l0.3-0.2v-0.3l-0.4-0.2l-0.3-0.2l-0.3,0.3l-0.2-0.1l-0.9,0.3h-0.4l-0.3-0.2l-0.4-0.1l-0.4,0.1l-0.5,0.5L685.7,898L685.7,898 z M686.4,897.6l0.1-0.3l-0.1-0.2l-0.5-0.2h-0.5l0.2,0.5l0.2,0.2H686.4z M692.3,896.9h-0.4l0.4,0.5l-0.8,0.8l0.2,0.6l0.3,0.4l0.1,0.2 l-0.1,0.1l-0.4,0.1l-0.3,0.1l-0.2,0.3l-0.9,0.9l0.2,0.2l-0.3,0.7l0.2,0.3l0.8,0.7l0.8,0.4v-0.7l0.4-0.1l0.4,0.2l0.4-0.2l-0.9-1h0.3 l2.5,0.5l-0.1-0.4l-0.1-0.2l-0.3-0.4l1.5-0.4l0.5-0.3l0.2-0.3l0.6-0.1l0.8-0.3l-0.1-0.1l0.1-0.3l-0.4-0.2l-0.5-0.1l0.1-0.3l0.5-0.1 l-0.8-0.7l-0.3-0.1l-1,0.1l-0.3,0.1v0.2l0.1,0.3l0.3,0.3l0.1,0.2l-0.2-0.1l-1.1-0.4l-0.2-0.1l-0.2-0.4l0.2-0.1l0.3,0.1l0.1-0.3 l-0.4-0.3l-0.4-0.1l-0.9,0.1L692.3,896.9L692.3,896.9z\"},FO:{d:\"M947,186.9v-0.3l-0.1-0.3v-0.2h-0.1l-0.5-0.1l-0.1-0.2h-0.1v0.2l0.1,0.4l0.5,0.4L947,186.9L947,186.9L947,186.9zM947.5,184.8v-0.1l-0.2-0.2l-0.5-0.2l-0.2-0.1l-0.2,0.1v0.2l0.1,0.1l0.4,0.1l0.4,0.3h0.1L947.5,184.8L947.5,184.8z M945.1,182.9l-0.2-0.1l-0.5,0.1h-0.3l0.1,0.3l0.6,0.2h0.3h0.3l0.2-0.1l-0.1-0.2L945.1,182.9L945.1,182.9z M947.6,182.4l-0.8-0.2l-0.6-0.3l-1,0.1l0.7,1.1l0.8,0.7l0.4,0.2v-0.1v-0.2l-0.4-0.5l-0.1-0.1V183l0.1-0.1h0.2l0.3,0.2h0.2L947.6,182.4L947.6,182.4z M948.6,182.2l-0.3-0.2l-0.4-0.4v0.5v0.3v0.1h0.1l0.3,0.1L948.6,182.2L948.6,182.2z\"},FJ:{d:\"M1976.7,674.4l-3.7,2l-1.9,0.3l-3.1,1.3l0.2,2.4l3.9-1.3l3.9-1.6L1976.7,674.4L1976.7,674.4z M1965.7,682.5l-1.6,1 l-2.3-0.8l-2.7,2.2l-0.2,2.8l2.9,0.8l3.6-0.9l1.8-3.3L1965.7,682.5L1965.7,682.5z\"},FI:{d:\"M1093.4,144.4l0.8-3.8l-5.7-2.1l-5.8,1.8l-1.1,3.9l-3.4,2.4l-4.7-1.3l-5.3,0.3l-5.1-2.9l-2.1,1.4l5.9,2.7l7.2,3.7 l1.7,8.4l1.9,2.2l6.4,2.6l0.9,2.3l-2.6,1.2l-8.7,6.1l-3.3,3.6l-1.5,3.3l2.9,5.2l-0.1,5.7l4.7,1.9l3.1,3.1l7.1-1.2l7.5-2.1l8-0.5l0,0 l7.9-7.4l3.3-3.3l0.9-2.9l-7.3-3.9l0.9-3.7l-4.9-4.1l1.7-4.8l-6.4-6.3l2.8-4.1l-7.2-3.7L1093.4,144.4L1093.4,144.4z\"},FR:{d:\"M1012.2,290.9l2.7,0.8l-0.5,2.7l-0.1,0.1l-0.3-0.2l-0.5,0.6l0,0.3l-3.6,2.6l-10-1.6l-7.4,2l-0.5,3.7l-6,0.8 l-1.3-0.7l0.7-0.3l0.2-0.4l-0.2-0.2l-0.7-0.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l0.1,0.1v0.2l-3.7-1.8l-1.9,1.3l-9.4-2.8l-2-2.4l2.7-3.7 l1-12.3l-5.1-6.5l-3.6-3.1l-7.5-2.4l-0.4-4.6l6.4-1.3l8.2,1.6l-1.4-7l4.6,2.6l11.3-4.8l1.4-5.1l4.3-1.2l0.7,2.2l2.2,0.1l2.4,2.4 l3.4,2.9l2.5-0.4l4.4,2.8l0,0l1.1,0.5l1.4-0.1l2.4,1.6l7.1,1.2l-2.3,4.2l-0.5,4.5l-1.3,1l-2.3-0.6l0.2,1.6l-3.5,3.5v2.8l2.4-0.9 l1.8,2.7l0,0l-0.2,1.7l1.6,2.4l-1.7,1.8L1012.2,290.9z M1025.6,304.3l-1-6l-0.6,1.6l-2.7,1.1l-0.7,4.3l3,3.7L1025.6,304.3z\"},GF:{d:\"M681.4,556.2l1.8-4.7l3.5-5.8l-0.9-2.6l-5.8-5.4l-4.1-1.5l-1.9-0.7l-3.1,5.5l0.4,4.4l2.1,3.7l-1,2.7l-0.6,2.9 l-1.4,2.8l2.4,1.3l1.8-1.8l1.2,0.3l0.8,1.8l2.7-0.5L681.4,556.2z\"},PF:{d:\"M213.2,704.9l-0.1-0.3l-0.2-0.3l-0.1,0.1l0.1,0.1l0.2,0.3v0.2L213.2,704.9z M222.5,690.2l-0.2-0.2l-0.4-0.2 l-0.2-0.1l-0.2-0.1l-0.1,0.1l0.1,0.1h0.1l0.3,0.2l0.3,0.1L222.5,690.2L222.5,690.2L222.5,690.2L222.5,690.2z M198,689.1l-0.6-0.3 l0.1,0.2l0.4,0.2l0.2,0.1L198,689.1L198,689.1z M218.5,688.9l-0.4-0.5h-0.3L218.5,688.9L218.5,688.9z M196.9,687.9l-0.4-0.4 l-0.2-0.3l-0.3-0.1l0.1,0.1l0.4,0.4l0.3,0.4l0.2,0.1L196.9,687.9z M196.6,685.8l-0.1-0.1l0,0v-0.3l0.2-0.3l0.6-0.4v-0.1l0,0 l-0.2,0.1l-0.4,0.2l-0.2,0.2l-0.1,0.2l-0.1,0.3l0.1,0.2l0.1,0.1h0.2L196.6,685.8L196.6,685.8z M149.2,684.7l-0.2-0.6l-0.3-0.5 l-0.8-0.1l-0.5,0.2l-0.1,0.2l0.1,0.4l0.5,0.7l0.5,0.1l0.8-0.1l0.4,0.6l0.2,0.1l0.4,0.1l0.1-0.3l-0.2-0.5L149.2,684.7L149.2,684.7z M146.3,683.8l0.1-0.4l-0.2-0.1h-0.5v0.2l0.1,0.2l0.1,0.1l0.3,0.2L146.3,683.8L146.3,683.8z M136.6,679.5h0.2l-0.4-0.6l-0.3-0.2v0.1 v0.7l0.3,0.1L136.6,679.5z M180.5,677.9h-0.2H180h-0.1l0.5,0.1l0.4,0.2L180.5,677.9L180.5,677.9z M179.8,678l-0.3-0.1l-0.3-0.2h-0.3 l0.7,0.3H179.8L179.8,678z M136,678.1l0.1-0.2l-0.1-0.1l-0.4-0.2l0.1,0.3v0.2H136L136,678.1L136,678.1z M168.8,676.1l-0.3-0.4 l-0.2-0.3l-0.2-0.4l-0.4-0.5l0.1,0.3l0.1,0.2l0.2,0.2l0.2,0.4l0.1,0.2l0.3,0.4h0.1L168.8,676.1L168.8,676.1z M185,674.6l0.1-0.5 h-0.2L185,674.6L185,674.6L185,674.6z M170.6,673l-0.6-0.6h-0.1l0.1,0.2l0.5,0.5l0.1,0.2V673L170.6,673z M201.4,639.1l0.1-0.2v-0.2 l-0.1-0.1l-0.3-0.1l0.1,0.7L201.4,639.1L201.4,639.1z M198.7,635.4l-0.1-0.2h-0.2l-0.1,0.1v0.5L198.7,635.4L198.7,635.4z M198.8,633.8l-0.8,0.5l0.2,0.4l0.4,0.1l0.2-0.2l0.8-0.1l0.3-0.4l-0.3,0.1L198.8,633.8L198.8,633.8z M192.7,632.1l0.2-0.5l-0.2-0.1 l-0.4,0.2v0.2l0.3,0.4L192.7,632.1L192.7,632.1z M195.3,629l0.3-0.1v-0.1l-0.2-0.2l-0.3-0.1l-0.1,0.1l-0.1,0.2l0.1,0.3L195.3,629 L195.3,629z M192.4,628.9l0.1-0.3v-0.2l-0.1-0.2l-0.9-0.2l-0.1,0.1v0.4l0.2,0.5h0.3L192.4,628.9z\"},GA:{d:\"M1050.2,557.7l-0.7-0.3l-3.4,0.8l-3.4-0.8l-2.6,0.4v7.6h-8.2l-1.9,0.3l-1.1,4.8l-1.3,4.6l-1.3,2l-0.2,2.1l3.4,6.6 l3.7,5.3l5.8,6.4l4.3-3.5l-2.1-4.2l1.9-1.6l3.8-0.8l0.5-2.8l3,3l4.9,0.3l1.7-3l0.8-4.3l-0.6-4.9l-2.7-3.8l2.4-7.4l-1.4-1.2l-4.2,0.5 l-1.5-3.3L1050.2,557.7L1050.2,557.7z\"},GM:{d:\"M882.8,488.5l5,0.1l1.4-0.9h1l2.1-1.5l2.4,1.4l2.4,0.1l2.4-1.5l-1.1-1.8l-1.8,1.1l-1.8-0.1l-2.1-1.5l-1.8,0.1 l-1.3,1.5l-6.1,0.2L882.8,488.5L882.8,488.5z\"},GE:{d:\"M1200,300.2l-7.5-2.9l-7.7-1l-4.5-1.1l-0.5,0.7l2.2,1.9l3,0.7l3.4,2.3l2.1,4.2l-0.3,2.7l5.4-0.3l5.6,3l6.9-1l1.1-1 l4.2,1.8l2.8,0.4l0.6-0.7l-3.2-3.4l1.1-0.9l-3.5-1.4l-2.1-2.5l-5.1-1.3l-2.9,1L1200,300.2L1200,300.2z\"},DE:{d:\"M1043.6,232.3l-2.4-1.9l-5.5-2.4l-2.5,1.7l-4.7,1.1l-0.1-2.1l-4.9-1.4l-0.2-2.3l-3,0.9l-3.6-0.8l0.4,3.4l1.2,2.2 l-3,3l-1-1.3l-3.9,0.3l-0.9,1.3l1,2l-1,5.6l-1.1,2.3h-2.9l1.1,6.4l-0.4,4.2l1,1.4l-0.2,2.7l2.4,1.6l7.1,1.2l-2.3,4.2l-0.5,4.5h4.2 l1-1.4l5.4,1.9l1.5-0.3l2.6,1.7l0.6-1.6l4.4,0.3l3.4-1.2l2.4,0.2l1.7,1.3l0.4-1.1l-1-4l1.7-0.8l1.5-2.9l-2.9-2.6l-2.6-1.5l-0.7-2.6 l-1-1.9l3.4-1.3l1.7-1.5l3.4-1.2l1.1-1.2l1.4,0.7l2.1-0.6l-2.3-3.9l0.1-2.1l-1.4-3.3l-2-2.2l1.2-1.6L1043.6,232.3L1043.6,232.3z\"},GH:{d:\"M976.8,502.1l-2.6-0.5l-1.8,1l-2.4-0.5l-9.7,0.3l-0.2,3.6l0.8,4.8l1.4,9.1l-2.3,5.3l-1.5,7.2l2.4,5.5l-0.2,2.5 l5,1.8l5-1.9l3.2-2.1l8.7-3.8l-1.2-2.2l-1.5-4l-0.4-3.2l1.2-5.7l-1.4-2.3l-0.6-5.1l0.1-4.6l-2.4-3.3L976.8,502.1L976.8,502.1z\"},GR:{d:\"M1101.9,344.9l-0.8,2.8l6.6,1.2v1.1l7.6-0.6l0.5-1.9l-2.8,0.8v-1.1l-3.9-0.5l-4.1,0.4L1101.9,344.9L1101.9,344.9z M1113.4,307.5l-2.7-1.6l0.3,3l-4.6,0.6l-3.9-2.1l-3.9,1.7l-3.8-0.2l-1,0.2l-0.7,1.1l-2.8-0.1l-1.9,1.3l-3.3,0.6v1.6l-1.6,0.9 l-0.1,2.1l-2.1,3l0.5,1.9l2.9,3.6l2.3,3l1.3,4.3l2.3,5.1l4.6,2.9l3.4-0.1l-2.4-5.7l3.3-0.7l-1.9-3.3l5,1.7l-0.4-3.7l-2.7-1.8l-3.2-3 l1.8-1.4l-2.8-3l-1.6-3.8l0.9-1.3l3,3.2h2.9l2.5-1l-3.9-3.6l6.1-1.6l2.7,0.6l3.2,0.2l1.1-0.7L1113.4,307.5L1113.4,307.5z\"},GL:{d:\"M887.4,76.3l-26-0.4l-11.8,0.3l-5,1.3l-11.5-0.1l-12.7,2.1l-1.6,1.7l6.7,2.1l-6.2-1.3l-4.5-0.3l-7-1.4l-10.6,2.1 l-2.7-1.2h-10.4l-10.9,0.6l-8.9,1l-0.2,1.8l-5.3,0.5L744.2,88l-4.6,1.7l8.1,1.5l-2.8,1.6L730,95l-15.5,2.2l-2.2,1.7l6.4,2l14.5,1.2 l-7.5,0.2l-10.9,1.5l3.8,3.1l3,1.5l9.4-0.3l10.1-0.2l7.6,0.3l8,2.9l-1.4,2.1l3.6,1.9l1.4,5.3l1,3.6l1.4,1.9l-7,4.8l2.6,1.3l4.4-0.8 l2.6,1.8l5.3,3.4l-7.5-1.4h-3.8l-3,2.8l-1.5,3.6l4.2,1.8l4-0.8l2.6-0.8l5.5-1.9l-2.8,4.2l-2.6,2.3l-7.1,2l-7,6.3l2,2l-3.4,4l3.7,5.2 l-1.5,5l0.7,3.7l4.8,7.1l0.8,5.6l3.1,3.2h8.9l5,4.7l6.5-0.3l4.1-5.7l3.5-4.8l-0.3-4.4l8.6-4.6l3.3-3.7l1.4-3.9l4.7-3.5l6.5-1.3 l6.1-1.4l3-0.2l10.2-3.9l7.4-5.7l4.8-2.1l4.6-0.1l12.5-1.8l12.1-4.3l11.9-4.6l-5.5-0.3l-10.6-0.2l5.3-2.8l-0.5-3.6l4.2,3l2.7,2.1 l7.3-1l-0.6-4.3l-4.5-3.1l-5-1.3l2.4-1.4l7.2,2.1l0.5-2.3l-4.1-3.4h5.4l5.6-0.8l1.7-1.8l-4-2.1l8.6-0.3l-4-4.3l4.1-0.5l0.1-4.2 l-6.2-2.5l6.4-1.6l5.8-0.1l-3.6-3.2l1.1-5.1l3.6-2.9l4.9-3.2l-8-0.2l11.3-0.7l2.2-1l14.6-2.9l-1.6-1.7l-10-0.8l-16.9,1.5l-9.2,1.5 l4.5-2.3l-2.3-1.4l-7,1.2l-9.7-1.4l-12.1,0.5l-1.4-0.7l18.3-0.4l12.9-0.2l6.6-1.4L887.4,76.3L887.4,76.3z\"},GD:{d:\"M632.1,495.7l0.5-0.2l0.2-1.1l-0.3-0.1l-0.3,0.3l-0.3,0.5v0.4l-0.2,0.3L632.1,495.7L632.1,495.7z\"},GP:{d:\"M636.4,471.1l0.2-0.2v-0.3l-0.2-0.3l-0.2,0.1l-0.2,0.3v0.3l0.1,0.1H636.4L636.4,471.1z M634.5,470.3l0.2-0.2v-1.2 l0.1-0.3l-0.2-0.1l-0.2-0.2l-0.6-0.2l-0.1,0.1l-0.2,0.3l0.1,1.5l0.2,0.5l0.2,0.1L634.5,470.3L634.5,470.3z M636.1,468.9l0.8-0.2 l-0.9-0.6l-0.2-0.4v-0.3l-0.4-0.3l-0.2,0.2l-0.1,0.3l0.1,0.5l-0.3,0.4l0.1,0.4l0.4,0.1L636.1,468.9L636.1,468.9z\"},GT:{d:\"M482.8,458.9l-5.1-0.1h-5.2l-0.4,3.6h-2.6l1.8,2.1l1.9,1.5l0.5,1.4l0.8,0.4l-0.4,2.1H467l-3.3,5.2l0.7,1.2l-0.8,1.5 l-0.4,1.9l2.7,2.6l2.5,1.3l3.4,0.1l2.8,1.1l0.2-1l2.1-1.6l1.1-0.7l-0.2-0.7l1.4-0.4l1.3-1.6l-0.3-1.3l0.5-1.2l2.8-1.8l2.8-2.4 l-1.5-0.8l-0.6,0.9l-1.7-1.1h-1.6l1.2-7.2L482.8,458.9L482.8,458.9z\"},GN:{d:\"M912.4,493l-0.8,0.4l-3-0.5l-0.4,0.7l-1.3,0.1l-4-1.5l-2.7-0.1l-0.1,2.1l-0.6,0.7l0.4,2.1l-0.8,0.9h-1.3l-1.4,1 l-1.7-0.1l-2.6,3.1l1.6,1.1l0.8,1.4l0.7,2.8l1.3,1.2l1.5,0.9l2.1,2.5l2.4,3.7l3-2.8l0.7-1.7l1-1.4l1.5-0.2l1.3-1.2h4.5l1.5,2.3 l1.2,2.7L917,515l0.9,1.7v2.3l1.5-0.3l1.2-0.2l1.5-0.7l2.3,3.9l-0.4,2.6l1.1,1.3l1.6,0.1l1.1-2.6l1.6,0.2h0.9l0.3-2.8l-0.4-1.2 l0.6-0.9l2-0.8l-1.3-5.1l-1.3-2.6l0.5-2.2l1.1-0.5l-1.7-1.8l0.3-1.9l-0.7-0.7l-1.2,0.6l0.2-2.1l1.2-1.6l-2.3-2.7l-0.6-1.7l-1.3-1.4 l-1.1-0.2l-1.3,0.9l-1.8,0.8l-1.6,1.4l-2.4-0.5l-1.5-1.6l-0.9-0.2l-1.5,0.8h-0.9L912.4,493L912.4,493z\"},GW:{d:\"M900.2,492.1l-10.3-0.3l-1.5,0.7l-1.8-0.2l-3,1.1l0.3,1.3l1.7,1.4v0.9l1.2,1.8l2.4,0.5l2.9,2.6l2.6-3.1l1.7,0.1 l1.4-1h1.3l0.8-0.9l-0.4-2.1l0.6-0.7L900.2,492.1L900.2,492.1z\"},GY:{d:\"M656.1,534.2l-2.1-2.3l-2.9-3.1l-2.1-0.1l-0.1-3.3l-3.3-4.1l-3.6-2.4l-4.6,3.8l-0.6,2.3l1.9,2.3l-1.5,1.2l-3.4,1.1 v2.9l-1.6,1.8l3.7,4.8l2.9-0.3l1.3,1.5l-0.8,2.8l1.9,0.9l1.2,3l-1.6,2.2l-1,5.4l1.4,3.3l0.3,2.9l3.5,3l2.7,0.3l0.7-1.3l1.7-0.2 l2.6-1.1l1.8-1.7l3.1,0.5l1.4-0.2l-3.3-5.6L655,551l-1.8-0.1l-2.4-4.6l1.1-3.3l-0.3-1.5l3.5-1.6L656.1,534.2L656.1,534.2z\"},HT:{d:\"M580.6,446.7l-4.6-1l-3.4-0.2l-1.4,1.7l3.4,1l-0.3,2.4l2.2,2.8l-2.1,1.4l-4.2-0.5l-5-0.9l-0.7,2.1l2.8,1.9l2.7-1.1 l3.3,0.4l2.7-0.4l3.6,1.1l0.2-1.8l-1.2-1.9l1.5-1.1l0.7-2.4L580.6,446.7z\"},HN:{d:\"M514.1,476.8l-1.3-1.8l-1.9-1l-1.5-1.4l-1.6-1.2l-0.8-0.1l-2.5-0.9l-1.1,0.5l-1.5,0.2l-1.3-0.4l-1.7-0.4l-0.8,0.7 l-1.8,0.7l-2.6,0.2l-2.5-0.6l-0.9,0.4l-0.5-0.6l-1.6,0.1l-1.3,1.1l-0.6-0.2l-2.8,2.4l-2.8,1.8l-0.5,1.2l0.3,1.3l-1.3,1.6l1.5,0.5 l1.1,1.3l1.6,1l0.1,0.9l2.5-0.8l1.1,0.5l0.7,0.7l-0.6,2.5l1.7,0.6l0.7,2l1.8-0.3l0.8-1.5h0.8l0.2-3.1l1.3-0.2h1.2l1.4-1.7l1.5,1.3 l0.6-0.8l1.1-0.7l2.1-1.8l0.3-1.3l0.5,0.1l0.8-1.5l0.6-0.2l0.9,0.9l1.1,0.3l1.3-0.8h1.4l2-0.8l0.9-0.9L514.1,476.8L514.1,476.8z\"},HK:{d:\"M1604.9,430.9v-0.2v-0.2l-0.4-0.2h-0.3l0.1,0.2l0.4,0.5L1604.9,430.9L1604.9,430.9z M1603.6,430.9l-0.1-0.5l0.2-0.3 l-0.9,0.3l-0.1,0.3v0.1l0.2,0.1H1603.6L1603.6,430.9z M1605.2,429.7l-0.1-0.3l-0.2-0.1l-0.1-0.3l-0.1-0.2l0,0l-0.3-0.1l-0.2-0.1 h-0.4l-0.1,0.1h-0.2l-0.2,0.2l0,0v0.2l-0.5,0.4v0.2l0.3,0.2l0.5-0.1l0.6,0.2l0.8,0.3v-0.2v-0.3L1605.2,429.7L1605.2,429.7z\"},HU:{d:\"M1079.1,263.8l-1.6,0.4l-1,1.5l-2.2,0.7l-0.6-0.4l-2.3,1l-1.9,0.2l-0.3,1.2l-4.1,0.8l-1.9-0.7l-2.6-1.6l-0.2,2.6 h-2.8l1.1,1.3l-1.3,4l0.8,0.1l1.2,2.1l1.6,0.8l4,2.6l4.2,1.2l1.8-0.9l0,0l3.7-1.6l3.2,0.2l3.8-1.1l2.6-4.3l1.9-4.2l2.9-1.3l-0.6-1.6 l-2.9-1.7l-1,0.6L1079.1,263.8L1079.1,263.8z\"},IS:{d:\"M915.7,158.6l-6.9-0.4l-7.3,2.9l-5.1-1.5l-6.9,3l-5.9-3.8l-6.5,0.8l-3.6,3.7l8.7,1.3l-0.1,1.6l-7.8,1.1l8.8,2.7 l-4.6,2.5l11.7,1.8l5.6,0.8l3.9-1l12.9-3.9l6.1-4.2l-4.4-3.8L915.7,158.6L915.7,158.6z\"},IN:{d:\"M1414.1,380.1l-8.5-4.4l-6.2-4l-3.2-7l4.1,0.9l-0.6-3.3l-3-3.3l-0.8-5.2l-7.6-7.5l-3.7,5.4l-5.7,1l-8.5-1.6 l-1.9,2.8l3.2,5.6l2.9,4.3l5,3.1l-3.7,3.7l1,4.5l-3.9,6.3l-2.1,6.5l-4.5,6.7l-6.4-0.5l-4.9,6.6l4,2.9l1.3,4.9l3.5,3.2l1.8,5.5h-12 l-3.2,4.2l7.1,5.4l1.9,2.5l-2.4,2.3l8,7.7l4,0.8l7.6-3.8l1.7,5.9l0.8,7.8l2.5,8.1l3.6,12.3l5.8,8.8l1.3,3.9l2,8l3.4,6.1l2.2,3 l2.5,6.4l3.1,8.9l5.5,6l2.2-1.8l1.7-4.4l5-1.8l-1.8-2.1l2.2-4.8l2.9-0.3l-0.7-10.8l1.9-6.1l-0.7-5.3l-1.9-8.2l1.2-4.9l2.5-0.3 l4.8-2.3l2.6-1.6l-0.3-2.9l5-4.2l3.7-4l5.3-7.5l7.4-4.2l2.4-3.8l-0.9-4.8l6.6-1.3l3.7,0.1l0.5-2.4l-1.6-5.2l-2.6-4.8l0.4-3.8 l-3.7-1.7l0.8-2.3l3.1-2.4l-4.6-3.4l1.2-4.3l4.8,2.7l2.7,0.4l1.2,4.4l5.4,0.9l5-0.1l3.4,1.1l-1.6,5.3l-2.4,0.4l-1.1,3.6l3.5,3.3 l0.2-4l1.5-0.1l4.5,10.1l2.4-1.5l-0.9-2.7l0.9-2.1l-0.9-6.6l4.6,1.4l1.5-5.2l-0.3-3.1l2.1-5.4l-0.9-3.6l6.1-4.4l4.1,1.1l-1.3-3.9 l1.6-1.2l-0.9-2.4l-6.1-0.9l1.2-2.7l-3.5-3.9l-3.2,2.6l-4.9-1.5l-5.3,4l-3.9,4.8l-4.2,0.8l2.7,2l0.4,3.9l-4.4,0.2l-4.7-0.4l-3.2,1 l-5.5-2.5l-0.3-1.2l-1.5-5.1l-3,1.4l0.1,2.7l1.5,4.1l-0.1,2.5l-4.6,0.1l-6.8-1.5l-4.3-0.6l-3.8-3.2l-7.6-0.9l-7.7-3.5l-5.8-3.1 l-5.7-2.5l0.9-5.9L1414.1,380.1L1414.1,380.1z\"},ID:{d:\"M1651.9,637.3l0.5-1.7l-1.8-1.9l-2.8-2l-5.3,1.3l7,4.4L1651.9,637.3L1651.9,637.3z M1672.8,636.7l4-4.8l0.1-1.9 l-0.5-1.3l-5.7,2.6l-2.8,3.9l-0.7,2.1l0.6,0.8L1672.8,636.7L1672.8,636.7z M1637.2,623.7l-1.6,2.2l-3.1,0.1l-2.2,3.6l3,0.1l3.9-0.9 l6.6-1.2l-1.2-2.8l-3.5,0.6L1637.2,623.7L1637.2,623.7z M1665.3,623.7l-5.2,2.3l-3.8,0.5l-3.4-1.9l-4.5,1.3l-0.2,2.3l7.4,0.8 l8.6-1.8L1665.3,623.7L1665.3,623.7z M1585.8,615.3l-0.7-2.3l-2.3-0.5l-4.4-2.4l-6.8-0.4l-4.1,6.1l5.1,0.4l0.8,2.8l10,2.6l2.4-0.8 l4.1,0.6l6.3,2.4l5.2,1.2l5.8,0.5l5.1-0.2l5.9,2.5l6.6-2.4l-6.6-3.8l-8.3-1.1l-1.8-4.1l-10.3-3.1l-1.3,2.6L1585.8,615.3 L1585.8,615.3z M1732.4,611.7l0.2-3l-1.2-1.9l-1.3,2.2l-1.2,2.2l0.3,4.8L1732.4,611.7z M1691.4,594.2l-1.4-2.1l-5.7,0.3l1,2.7 l3.9,1.2L1691.4,594.2L1691.4,594.2z M1709.5,591.8l-6.1-1.8l-6.9,0.3l-1.5,3.5l3.9,0.2l3.2-0.4l4.6,0.5l4.7,2.6L1709.5,591.8 L1709.5,591.8z M1730.5,579.5l-0.8-2.4l-9-2.6l-2.9,2.1l-7.6,1.5l2.3,3.2l5,1.2l2.1,3.7l8.3,0.1l0.4,1.6l-4-0.1l-6.2,2.3l4.2,3.1 l-0.1,2.8l1.2,2.3l2.1-0.5l1.8-3.1l8.2,5.9l4.6,0.5l10.6,5.4l2.3,5.3l1,6.9l-3.7,1.8l-2.8,5.2l7.1-0.2l1.6-1.8l5.5,1.3l4.6,5.2 l1.5-20.8l1-20.7l-6-1.2l-4.1-2.3l-4.7-2.2h-5l-6.6,3.8l-4.9,6.8l-5.7-3.8L1730.5,579.5z M1680.5,563.1l-1-1.4l-5.5,4.6l-6.5,0.3 l-7.1-0.9l-4.4-1.9l-4.7,4.8l-1.2,2.6l-2.9,9.6l-0.9,5l-2.4,4.2l1.6,4.3l2.3,0.1l0.6,6.1l-1.9,5.9l2.3,1.9l3.6-1l0.3-9.1l-0.2-7.4 l3.8-1.9l-0.7,6.2l3.9,3.7l-0.8,2.5l1.3,1.7l5.6-2.4l-3,5.2l2.1,2.2l3.1-1.9l0.3-4.1l-4.7-7.4l1.1-2.2l-5.1-8.1l5-2.5l2.6-3.7 l2.4,0.9l0.5-2.9l-10.5,2.1l-3.1,2.9l-5-5.6l0.9-4.8l4.9-1l9.3-0.3l5.4,1.3l4.3-1.3L1680.5,563.1L1680.5,563.1z M1699.9,565 l-0.6-2.6l-3.3-0.6l-0.5-3.5l-1.8,2.3l-1,5.1l1.7,8.2l2.2,4l1.6-0.8l-2.3-3.3l0.9-3.9l2.9,0.6L1699.9,565L1699.9,565z M1639,560.5 l0.9-2.9l-4.3-6l3-5.8l-5-1h-6.4l-1.7,7.2l-2,2.2l-2.7,8.9l-4.5,1.3l-5.4-1.8l-2.7,0.6l-3.2,3.2l-3.6-0.4l-3.6,1.2l-3.9-3.5l-1-4.3 l-3.3,4.2l-0.6,5.9l0.8,5.6l2.6,5.4l2.8,1.8l0.7,8.5l4.6,0.8l3.6-0.4l2,3.1l6.7-2.3l2.8,2l4,0.4l2,3.9l6.5-2.9l0.8,2.3l2.5-9.7 l0.3-6.4l5.5-4.3l-0.2-5.8l1.8-4.3l6.7-0.8L1639,560.5L1639,560.5z M1570.3,609.4l0.7-9.8l1.7-8l-2.6-4l-4.1-0.5l-1.9-3.6l-0.9-4.4 l-2-0.2l-3.2-2.2l2.3-5.2l-4.3-2.9l-3.3-5.3l-4.8-4.4l-5.7-0.1l-5.5-6.8l-3.2-2.7l-4.5-4.3l-5.2-6.2l-8.8-1.2l-3.6-0.3l0.6,3.2 l6.1,7l4.4,3.6l3.1,5.5l5.1,4l2.2,4.9l1.7,5.5l4.9,5.3l4.1,8.9l2.7,4.8l4.1,5.2l2.2,3.8l7,5.2l4.5,5.3L1570.3,609.4L1570.3,609.4z\"},IR:{d:\"M1213.5,324.4l-3.2-2.9l-1.2-2.4l-3.3,1.8l2.9,7.3l-0.7,2l3.7,5.2l0,0l4.7,7.8l3.7,1.9l1,3.8l-2.3,2.2l-0.5,5 l4.6,6.1l7,3.4l3.5,4.9l-0.2,4.6h1.7l0.5,3.3l3.4,3.4l1.7-2.5l3.7,2.1l2.8-1l5.1,8.4l4.3,6.1l5.5,1.8l6.1,4.9l6.9,2.1l5.1-3.1l4-1.1 l2.8,1.1l3.2,7.8l6.3,0.8l6.1,1.5l10.5,1.9l1.2-7.4l7.4-3.3l-0.9-2.9l-2.7-1l-1-5.7l-5.6-2.7l-2.8-3.9l-3.2-3.3l3.9-5.8l-1.1-4 l-4.3-1.1l-1.1-4l-2.7-5.1l1.6-3.5l-2.5-0.9l0.5-4.7l0.5-8l-1.6-5.5l-3.9-0.2l-7.3-5.7l-4.3-0.7l-6.5-3.3l-3.8-0.6l-2.1,1.2 l-3.5-0.2l-3,3.7l-4.4,1.2l-0.2,1.6l-7.9,1.7l-7.6-1.1l-4.3-3.3l-5.2-1.3l-2.5-4.8l-1.3,0.3l-3.8-3.4l1.2-3.1l-1.9-1.9l-1.9,0.5 l-5.3,4.7l-1.8,0.2L1213.5,324.4L1213.5,324.4z\"},IQ:{d:\"M1207.3,334.9l-6.2-0.9l-2.1,1l-2.1,4.1l-2.7,1.6l1.2,4.7l-0.9,7.8l-11,6.7l3.1,7.7l6.7,1.7l8.5,4.5l16.7,12.7 l10.2,0.5l3.2-6.1l3.7,0.5l3.2,0.4l-3.4-3.4l-0.5-3.3h-1.7l0.2-4.6l-3.5-4.9l-7-3.4l-4.6-6.1l0.5-5l2.3-2.2l-1-3.8l-3.7-1.9 l-4.7-7.8l0,0l-2.3,1.1L1207.3,334.9L1207.3,334.9z\"},IE:{d:\"M947.3,231.7l-3.5-1.3l-2.9,0.1l1.1-3.2l-0.8-3.2l-3.7,2.8l-6.7,4.7l2.1,6.1l-4.2,6.4l6.7,0.9l8.7-3.6l3.9-5.4 L947.3,231.7L947.3,231.7z\"},IL:{d:\"M1167.8,360.5l-1.4,0.1l-0.4,1.1h-1.8l-0.1,0.1l-0.6,1.6l-0.6,4.8l-1.1,2.9l0.4,0.4l-1.4,2.1l0,0l3.9,9.2l0.7,1.7 l1.7-10.2l-0.4-2.4l-2.4,0.8l0.1-1.7l1.2-0.8l-1.4-0.7l0.7-4.3l2,0.9l0.7-2h-0.1l0.6-1L1167.8,360.5L1167.8,360.5z\"},IT:{d:\"M1057.8,328.6l-1.6,5.1l0.9,2l-0.9,3.3l-4.2-2.4l-2.7-0.7l-7.5-3.3l0.6-3.4l6.2,0.6l5.2-0.7L1057.8,328.6z M1072.3,316.2l-0.8,2.3l-3.1-3l-4.5-1l-1.9,4.1l3.9,2.3l-0.4,3.3l-2.1,0.4l-2.5,5.6l-2.1,0.5l-0.1-2l0.8-3.5l1.1-1.3l-2.3-3.7 l-1.8-3.2l-2.2-0.8l-1.7-2.7l-3.4-1.2l-2.3-2.5l-3.9-0.4l-4.2-2.8l-4.9-4l-3.6-3.6l-1.9-6l-2.6-0.7l-4.2-2.1l-2.3,0.9l-2.8,2.8 l-2.1,0.5l0.5-2.7l-2.7-0.8l-1.5-4.8l1.7-1.8l-1.6-2.4l0.2-1.7l2.2,1.3l2.4-0.3l2.7-2.1l0.9,1l2.4-0.2l0.9-2.5l3.8,0.8l2.1-1.1 l0.3-2.5l3.1,0.9l0.5-1.2l4.8-1.1l1.3,2.2l7.2,1.6l-0.3,3l1.4,2.7l-4.1-0.9l-3.9,2.2l0.4,3l-0.5,1.8l1.9,3.1l4.9,3.1l2.9,5.1l6,5 l4-0.1l1.4,1.4l-1.4,1.2l4.8,2.3l3.9,1.9l4.7,3.2L1072.3,316.2z M1040.2,305.3l-0.1-0.6l-0.6,0.1l-0.2,0.5H1040.2z M1040.3,292.4 l-0.9,0.3l0.2,0.9l0.7-0.1L1040.3,292.4z M1021.6,311.6l-2.8-0.3l1.3,3.6l0.4,7.6l2.1,1.7l2-2.1l2.4,0.4l0.4-8.4l-3.3-4.4 L1021.6,311.6z\"},CI:{d:\"M946.5,506.2l-2.3,0.9l-1.3,0.8l-0.9-2.7l-1.6,0.7l-1-0.1l-1,1.9l-4.3-0.1l-1.6-1l-0.7,0.6l-1.1,0.5l-0.5,2.2 l1.3,2.6l1.3,5.1l-2,0.8l-0.6,0.9l0.4,1.2l-0.3,2.8h-0.9l-0.3,1.8l0.6,3.1l-1.2,2.8l1.6,1.8l1.8,0.4l2.3,2.7l0.2,2.5l-0.5,0.8 l-0.5,5.2l1.1,0.2l5.6-2.4l3.9-1.8l6.6-1.1l3.6-0.1l3.9,1.3l2.6-0.1l0.2-2.5l-2.4-5.5l1.5-7.2l2.3-5.3l-1.4-9.1l-3.8-1.6l-2.7,0.2 l-1.9,1.6l-2.5-1.3l-1-2.1L946.5,506.2L946.5,506.2z\"},JM:{d:\"M550.7,458.5l3.9-0.1l-0.8-1.8l-2.7-1.5l-3.7-0.6l-1.2-0.2l-2.4,0.4l-0.8,1.5l2.9,2.3l3,1L550.7,458.5L550.7,458.5z \"},JP:{d:\"M1692.5,354.9l-4.5-1.3l-1.1,2.7l-3.3-0.8l-1.3,3.8l1.2,3l4.2,1.8l-0.1-3.7l2.1-1.5l3.1,2.1l1.3-3.9L1692.5,354.9 L1692.5,354.9z M1716.9,335.6l-3.6-6.7l1.3-6.4l-2.8-5.2l-8.1-8.7l-4.8,1.2l0.2,3.9l5.1,7.1l1,7.9l-1.7,2.5l-4.5,6.5l-5-3.1v11.5 l-6.3-1.3l-9.6,1.9l-1.9,4.4l-3.9,3.3l-1.1,4l-4.3,2l4,4.3l4.1,1.9l0.9,5.7l3.5,2.5l2.5-2.7l-0.8-10.8l-7.3-4.7l6.1-0.1l5-3l8.6-1.4 l2.4,4.8l4.6,2.4l4.4-7.3l9.1-0.4l5.4-3l0.6-4.6l-2.5-3.2L1716.9,335.6L1716.9,335.6z M1705.1,291.4l-5.3-2.1l-10.4-6.4l1.9,4.8 l4.3,8.5l-5.2,0.4l0.6,4.7l4.6,6.1h5.7l-1.6-6.8l10.8,4.2l0.4-6.1l6.4-1.7l-6-6.9l-1.7,2.6L1705.1,291.4L1705.1,291.4z\"},JO:{d:\"M1186.6,367.6l-3.1-7.7l-9.6,6.7l-6.3-2.5l-0.7,2l0.4,3.9l-0.6,1.9l0.4,2.4l-1.7,10.2l0.3,0.9l6.1,1l2.1-2l1.1-2.3 l4-0.8l0.7-2.2l1.7-1l-6.1-6.4l10.4-3.1L1186.6,367.6L1186.6,367.6z\"},KZ:{d:\"M1308.8,223.8l-9-1.3l-3.1,2.5l-10.8,2.2l-1.7,1.5l-16.8,2.1l-1.4,2.1l5,4.1l-3.9,1.6l1.5,1.7l-3.6,2.9l9.4,4.2 l-0.2,3l-6.9-0.3l-0.8,1.8l-7.3-3.2l-7.6,0.2l-4.3,2.5l-6.6-2.4l-11.9-4.3l-7.5,0.2l-8.1,6.6l0.7,4.6l-6-3.6l-2.1,6.8l1.7,1.2 l-1.7,4.7l5.3,4.3l3.6-0.2l4.2,4.1l0.2,3.2l2.8,1l4.4-1.3l5-2.7l4.7,1.5l4.9-0.3l1.9,3.9l0.6,6l-4.6-0.9l-4,1l0.9,4.5l-5-0.6l0.6,2 l3.2,1.6l3.7,5.5l6.4,2.1l1.5,2.1l-0.7,2.6l0.7,1.5l1.8-2l5.5-1.3l3.8,1.7l4.9,4.9l2.5-0.3l-6.2-22.8l11.9-3.6l1.1,0.5l9.1,4.5 l4.8,2.3l6.5,5.5l5.7-0.9l8.6-0.5l7.5,4.5l1.5,6.2l2.5,0.1l2.6,5l6.6,0.2l2.3,3h1.9l0.9-4.5l5.4-4.3l2.5-1.2l0.3-2.7l3.1-0.8 l9.1,2.1l-0.5-3.6l2.5-1.3l8.1,2.6l1.6-0.7l8.6,0.2l7.8,0.6l3.3,2.2l3.5,0.9l-1.7-3.5l2.9-1.6l-8.7-10.7l9-2.4l2-1.4l-1-11.1l10.7,2 l1.6-2.8l-2.5-6.2l3.8-0.6l1.8-4.2l-4.3-3.8l-6,0.9l-3.3-2.6l-3.9-1.2l-4.1-3.6l-3.2-1.1l-6.2,1.6l-8.3-3.6l-1.1,3.3l-18.1-15.5 l-8.3-4.7l0.8-1.9l-9.1,5.7l-4.4,0.4l-1.2-3.3l-7-2.1l-4.3,1.5L1308.8,223.8L1308.8,223.8z\"},KE:{d:\"M1211.7,547.2h-3.8l-2.3-2.1l-5.1,2.6l-1.6,2.7l-3.8-0.5l-1.2-0.7l-1.3,0.1h-1.8l-7.2-5.4h-3.9l-2-2.1v-3.6 l-2.9-1.1l-3.8,4.2l-3.4,3.8l2.7,4.4l0.7,3.2l2.6,7.3l-2.1,4.7l-2.7,4.2l-1.6,2.6v0.3l1.4,2.4l-0.4,4.7l20.2,13l0.4,3.7l8,6.3 l2.2-2.1l1.2-4.2l1.8-2.6l0.9-4.5l2.1-0.4l1.4-2.7l4-2.5l-3.3-5.3l-0.2-23.2L1211.7,547.2L1211.7,547.2z\"},KW:{d:\"M1235.6,381.4l-3.7-0.5l-3.2,6.1l4.9,0.6l1.7,3.1l3.8-0.2l-2.4-4.8l0.3-1.5L1235.6,381.4L1235.6,381.4z\"},KG:{d:\"M1387.2,302.6l-3.5-0.9l-3.3-2.2l-7.8-0.6l-8.6-0.2l-1.6,0.7l-8.1-2.6l-2.5,1.3l0.5,3.6l-9.1-2.1l-3.1,0.8l-0.3,2.7 l1.8,0.6l-3.1,4.1l4.6,2.3l3.2-1.6l7.1,3.3l-5.2,4.5l-4.1-0.6l-1.4,2l-5.9-1.1l0.6,3.7l5.4-0.5l7.1,2l9.5-0.9l1-1.5l-1.1-1.5l4-3 l3.2-1.2l5.7,0.9l0.6-4l6.4-0.8l1-2.4l6.8-3.4L1387.2,302.6L1387.2,302.6z\"},LA:{d:\"M1574.8,481.8l0.2-6.4l-2-4.5l-4.8-4.4l-4.3-5.6l-5.7-7.5l-7.3-3.8l1.3-2.3l3.3-1.7l-3-5.5l-6.8-0.1l-3.4-5.7 l-4-5.1l-2.7,1l1.9,7.2l-2.9-0.1l-0.7-1.5l-4.1,4.1l-0.8,2.4l2.6,1.9l0.9,3.8l3.8,0.3l-0.4,6.7l1,5.7l5.3-3.8l1.8,1.2l3.2-0.2 l0.8-2.2l4.3,0.4l4.9,5.2l1.3,6.3l5.2,5.5l0.5,5.4l-1.5,2.9l4.9,2.4l2-4.3L1574.8,481.8L1574.8,481.8z\"},LV:{d:\"M1102.1,210.1h-3.8l-4.4-2.2l-2.1-0.7l-3.7,1l-0.2,4.6l-3.6,0.1l-4.4-4.5l-4,2.1l-1.7,3.7l0.5,4.5l5-1.9l7.9,0.4 l4.4-0.6l0.9,1.3l2.5,0.4l5,2.9l2.6-1l4.6-2.3l-2.1-3.6l-1-2.8L1102.1,210.1L1102.1,210.1z\"},LB:{d:\"M1167.8,360.5l0.9-3.5l2.6-2.4l-1.2-2.5l-2.4-0.3l-0.1,0.2l-2.1,4.5l-1.3,5.2h1.8l0.4-1.1L1167.8,360.5 L1167.8,360.5z\"},LS:{d:\"M1128.1,766.5l1.1-2l3.1-1l1.1-2.1l1.9-3.1l-1.7-1.9l-2.3-2l-2.6,1.3l-3.1,2.5l-3.2,4l3.7,4.9L1128.1,766.5 L1128.1,766.5z\"},LR:{d:\"M929.4,523.3l-1.6-0.2l-1.1,2.6l-1.6-0.1l-1.1-1.3l0.4-2.6l-2.3-3.9l-1.5,0.7l-1.2,0.2l-2.6,3l-2.6,3.4l-0.3,1.9 l-1.3,2l3.7,4.1l4.8,3.5l5.1,4.8l5.7,3.1l1.5-0.1l0.5-5.2l0.5-0.8l-0.2-2.5l-2.3-2.7l-1.8-0.4l-1.6-1.8l1.2-2.8l-0.6-3.1 L929.4,523.3L929.4,523.3z\"},LY:{d:\"M1111.8,371.4l-1.5-2.1l-5.4-0.8l-1.8-1.1h-2l-2-2.8l-7.3-1.3l-3.6,0.8l-3.7,3l-1.5,3.1l1.5,4.8l-2.4,3l-2.5,1.6 l-5.9-3.1l-7.7-2.7l-4.9-1.2l-2.8-5.7l-7.2-2.8l-4.5-1.1l-2.2,0.6l-6.4-2.2l-0.1,4.9l-2.6,1.8l-1.5,2l-3.7,2.5l0.7,2.6l-0.4,2.7 l-2.6,1.4l1.9,5.6l0.4,3l-0.9,5.2l0.5,2.9l-0.6,3.5l0.5,4l-2.1,2.6l3.4,4.7l0.2,2.7l2,3.6l2.6-1.2l4.3,2.9l2.5,4l8.8,2.8l3.1,3.5 l3.9-2.4l5.4-3.5l22.3,12.2l22.4,12.2v-2.7h6.3l-0.5-12.7l-1-23.4l-1.3-22.7l-2-5.1l1.2-3.9l-1.1-2.7L1111.8,371.4L1111.8,371.4z\"},LI:{d:\"M1024.4,273.6v-0.2l0.1-0.2l-0.1-0.1l-0.1-0.2l-0.1-0.1v-0.2l-0.1-0.1v-0.2l-0.1-0.1l-0.2,0.6v0.5l0.1,0.2h0.1 L1024.4,273.6L1024.4,273.6z\"},LT:{d:\"M1100.4,221.2l-5-2.9l-2.5-0.4l-0.9-1.3l-4.4,0.6l-7.9-0.4l-5,1.9l1.7,5l5,1.1l2.2,0.9l-0.2,1.7l0.6,1.5l2.5,0.6 l1.4,1.9h4.6l4.8-2.2l0.5-3.4l3.5-2L1100.4,221.2L1100.4,221.2z\"},LU:{d:\"M1007,258.6l0.2-2.7l-1-1.4l-1.3,0.2l-0.4,3.5l1.1,0.5L1007,258.6z\"},MK:{d:\"M1094,304.8l-2.8-2l-2.4,0.1l-1.7,0.4l-1.1,0.2l-2.9,1l-0.1,1.2h-0.7l0,0l-0.4,2.1l0.9,2.6l2.3,1.6l3.3-0.6l1.9-1.3 l2.8,0.1l0.7-1.1l1-0.2L1094,304.8L1094,304.8z\"},MG:{d:\"M1255.7,658.4l-1.1-4.2l-1.4-2.7l-1.8-2.7l-2,2.8l-0.3,3.8l-3.3,4.5l-2.3-0.8l0.6,2.7l-1.8,3.2l-4.8,3.9l-3.4,3.7 h-2.4l-2.2,1.2l-3.1,1.3l-2.8,0.2l-1,4.1l-2.2,3.5l0.1,5.9l0.8,4l1.1,3l-0.8,4.1l-2.9,4.8l-0.2,2.1l-2.6,1.1l-1.3,4.6l0.2,4.6l1.6,5 l-0.1,5.7l1.2,3.3l4.2,2.3l3,1.7l5-2.7l4.6-1.5l3.1-7.4l2.8-8.9l4.3-12l3.3-8.8l2.7-7.4l0.8-5.4l1.6-1.5l0.7-2.7l-0.8-4.7l1.2-1.9 l1.6,3.8l1.1-1.9l0.8-3.1l-1.3-2.9L1255.7,658.4L1255.7,658.4z\"},MW:{d:\"M1169.2,661.5l0.1-2.3l-1.2-1.9l0.1-2.8l-1.5-4.7l1.7-3.5l-0.1-7.7l-1.9-4.1l0.2-0.7l0,0l-1.1-1.7l-5.4-1.2l2.6,2.8 l1.2,5.4l-1,1.8l-1.2,5.1l0.9,5.3l-1.8,2.2l-1.9,5.9l2.9,1.7l3,3l1.6-0.6l2.1,1.6l0.3,2.6l-1.3,2.9l0.2,4.5l3.4,4l1.9-4.5l2.5-1.3 l-0.1-8.2l-2.2-4.6l-1.9-2h-0.3v0.8l1.1,0.3l1,3.4l-0.2,0.8l-1.9-2.5l-1,1.6L1169.2,661.5L1169.2,661.5z\"},MY:{d:\"M1558.1,554.4l-0.5-3.8l-0.6-2.1l0.5-2.9l-0.5-4.3l-2.6-4.3l-3.5-3.8l-1.3-0.6l-1.7,2.6l-3.7,0.8l-0.6-3.3l-4.7-2.8 l-0.9,1.1l1.4,2.7l-0.4,4.7l2.1,3.4l1,5.3l3.4,4.3l0.8,3.2l6.7,5l5.4,4.8l4-0.5l0.1-2.1l-2.3-5.6L1558.1,554.4z M1560.9,563.3 l0.2,0.2l-0.1,0.2l-0.9,0.4l-0.9-0.4l0.3-0.6l0.6-0.1l0.5,0.2L1560.9,563.3z M1645.2,540.2l-3.8,0.4l1.2,3.1l-4,2.1l-5-1h-6.4 l-1.7,7.2l-2,2.2l-2.7,8.9l-4.5,1.3l-5.4-1.8l-2.7,0.6l-3.2,3.2l-3.6-0.4l-3.6,1.2l-3.9-3.5l-1-4.3l4.1,2.2l4.4-1.2l0.9-5.4l2.4-1.2 l6.7-1.4l3.8-5l2.6-4l2.7,3.3l1.1-2.2l2.7,0.2l0.1-4.1l0.1-3.1l4.1-4.4l2.5-5h2.3l3.1,3.2l0.4,2.8l3.8,1.7l4.8,2L1645.2,540.2z\"},MV:{d:\"M1389.1,551.6L1389.1,551.6l0.1-0.3l-0.1-0.1h-0.1l-0.1,0.2v0.1v0.1H1389.1z M1389.4,545.7l0.1-0.2v-0.1v-0.1v-0.1 v-0.1l-0.1,0.1l-0.1,0.2v0.1l-0.1,0.1v0.1H1389.4L1389.4,545.7z\"},ML:{d:\"M1000.3,450.3l-6.1,0.6l-0.1-4l-2.6-1.1l-3.4-1.8l-1.3-3l-18.6-13.8l-18.4-13.9l-8.4,0.1l2.4,27.4l2.4,27.5l1,0.8 l-1.3,4.4l-22.3,0.1l-0.9,1.4l-2.1-0.4l-3.2,1.3l-3.8-1.8l-1.8,0.2l-1,3.7l-1.9,1.2l0.2,3.9l1.1,3.7l2.1,1.8l0.4,2.4l-0.3,2l0.3,2.3 h0.9l1.5-0.8l0.9,0.2l1.5,1.6l2.4,0.5l1.6-1.4l1.8-0.8l1.3-0.9l1.1,0.2l1.3,1.4l0.6,1.7l2.3,2.7l-1.2,1.6l-0.2,2.1l1.2-0.6l0.7,0.7 l-0.3,1.9l1.7,1.8l0.7-0.6l1.6,1l4.3,0.1l1-1.9l1,0.1l1.6-0.7l0.9,2.7l1.3-0.8l2.3-0.9l-0.4-3.7l1.6-2.7l-0.2-2.2l4.5-5.2l0.8-4.4 l1.6-1.6l2.7,0.9l2.3-1.3l0.8-1.6l4.3-2.9l1.1-2l5.2-2.6l3-0.9l1.4,1.2h3.6l3.6-0.3l2-2.2l7.6-0.6l4.9-1l0.5-3.9l3-4.3L1000.3,450.3 L1000.3,450.3z\"},MT:{d:\"M1053.6,344l-0.2-0.2l-0.5-0.5l-0.5-0.1l0.1,0.6l0.4,0.4h0.5L1053.6,344L1053.6,344z M1052.2,342.8L1052.2,342.8 v-0.2l-0.3-0.1l-0.4,0.1l0.1,0.1l0.3,0.2L1052.2,342.8z\"},MQ:{d:\"M638,479.9l-0.2-0.7l-0.1-0.2l-0.2-0.3l0.1-0.3v-0.1h-0.2l-0.3-0.5l-0.6-0.3h-0.3l-0.2,0.2v0.3l0.3,0.9l0.2,0.2 l0.5,0.2l-0.4,0.4v0.1l0.1,0.3h0.9l0.2,0.3l0.1-0.1L638,479.9L638,479.9z\"},MR:{d:\"M949.8,413.3l-20.3-15.5l-0.2,9.7l-17.9-0.3l-0.2,16.3L906,424l-1.4,3.3l0.9,9.2l-21.6-0.1l-1.2,2.2l2.8,2.7l1.4,3 l-0.7,3.2l0.6,3.2l0.5,6.3l-0.8,5.9l-1.7,3.2l0.4,3.4l2-2l2.7,0.5l2.8-1.4h3.1l2.6,1.8l3.7,1.7l3.2,4.7l3.6,4.4l1.9-1.2l1-3.7 l1.8-0.2l3.8,1.8l3.2-1.3l2.1,0.4l0.9-1.4l22.3-0.1l1.3-4.4l-1-0.8l-2.4-27.5l-2.4-27.4L949.8,413.3L949.8,413.3z\"},MU:{d:\"M1294.7,702.5l0.3-0.3l0.2-0.4l0.3-0.3l0.1-0.7l-0.2-0.8l-0.4-0.7l-0.5,0.1l-0.3,0.4l-0.2,0.5l-0.5,0.3l-0.1,0.3 l-0.2,0.7l-0.1,0.4l-0.2,0.1v0.2l0.3,0.3l0.8,0.1L1294.7,702.5L1294.7,702.5z\"},YT:{d:\"M1228.7,654.7v-0.3l0.2-0.5v-0.1l0.1-0.5l-0.3-0.3h-0.2l-0.2-0.3l-0.3,0.3l0.3,0.5l-0.1,0.3l-0.1,0.4l0.1,0.4 l0.2,0.2L1228.7,654.7L1228.7,654.7z\"},MX:{d:\"M444.4,407.8l-3.6-1.4l-3.9-2l-0.8-3l-0.2-4.5l-2.4-3.6l-1-3.7l-1.6-4.4l-3.1-2.5l-4.4,0.1l-4.8,5l-4-1.9l-2.2-1.9 l-0.4-3.5l-0.8-3.3l-2.4-2.8l-2.1-2l-1.3-2.2h-9.3l-0.8,2.6H391h-10.7l-10.7-4.4l-7.1-3.1l1-1.3l-7,0.7l-6.3,0.5l0.2,5.7l0.7,5.1 l0.7,4.1l0.8,4l2.6,1.8l2.9,4.5l-1,2.9l-2.7,2.3l-2.1-0.3l-0.6,0.5l2.3,3.7l2.9,1.5l1,1.7l0.9-0.9l3.1,2.9l2.1,2l0.1,3.4l-1.2,4.7 l2.5,1.6l3.3,3.1l2.9,3.6l0.7,3.9h1l2.7-2.3l0.4-1.2l-1.5-2.8l-1.6-2.9l-2.6-0.2l0.4-3.4l-0.9-3l-1-2.8l-0.5-5.9l-2.6-3.2l-0.6-2.3 l-1.2-1.6v-4.1l-1,0.1l-0.1-2.2l-0.7-0.5l-0.4-1.4l-2.7-4.4l-1.1-2.6l1-4.8l0.1-3l1.8-2.6l2.4,1.7l1.9-0.2l3.1,2.5l-0.9,2.4l0.4,4.9 l1.5,4.7l-0.4,2l1.7,3.1l2.3,3.4l2.7,0.5l0.3,4.4l2.4,3.1l2.5,1.5l-1.8,4l0.7,1.5l4.1,2.6l1.9,4l4.5,4.9l3.8,6.4l1.3,3.2v2.5 l1.4,2.9l-0.3,2.2l-1.6,1.6l0.3,1.8l-1.9,0.7l0.8,3.1l2.2,4l5.3,3.6l1.9,2.9l5.4,2l3,0.4l1.2,1.7l4.2,3l5.9,3l4,0.9l4.8,2.9l4,1.2 l3.7,1.7l2.9-0.7l4.8-2.4l3.1-0.4l4.4,1.6l2.6,2.1l5.5,6.9l0.4-1.9l0.8-1.5l-0.7-1.2l3.3-5.2h7.1l0.4-2.1l-0.8-0.4l-0.5-1.4 l-1.9-1.5l-1.8-2.1h2.6l0.4-3.6h5.2l5.1,0.1l0.1-1l0.7-0.3l0.9,0.8l2.5-3.9h1l1.2-0.1l1.2,1.6l2-5l1.2-2.7l-0.9-1.1l1.8-3.9l3.5-3.8 l0.6-3.1l-1.2-1.3l-3.4,0.5l-4.8-0.2l-6,1.5l-4,1.7l-1.2,1.8l-1.2,5.4l-1.8,3.7l-3.9,2.6l-3.6,1.1l-4.3,1.1l-4.3,0.6l-5.1,1.8 l-1.9-2.6l-5.6-1.7l-1.8-3.2l-0.7-3.6l-3-4.7l-0.4-5l-1.2-3.1l-0.5-3.4l1.1-3.1l1.8-8.6l1.8-4.5l3.1-5.6L444.4,407.8L444.4,407.8z\"},MD:{d:\"M1118.5,283.3l1.2-0.7l0.5-2.1l1.1-2l-0.5-1.1l1-0.5l0.6,0.9l3,0.2l1.2-0.5l-1-0.6l0.2-1l-2-1.5l-1.1-2.6l-1.9-1.1 v-2.1l-2.5-1.6l-2-0.3l-3.9-1.9l-3.2,0.6l-1.1,0.9l1.6,0.6l1.8,1.9l1.9,2.6l3.4,3.7l0.6,2.7l-0.2,2.7L1118.5,283.3z\"},MC:{d:\"M1013.5,295.2l0-0.3l0.5-0.6l0.3,0.2L1013.5,295.2z\"},MN:{d:\"M1473.7,252.1l-3.7-4.6l-6.6-1.5l-4.8-0.8l-6.9-2.5l-1.3,6.4l4,3.6l-2.4,4.3l-7.9-1.6l-5-0.2l-4.7-2.9l-5.1-0.1 l-5.3-1.9l-5.9,2.9l-6.6,5.4l-4.7,1l3.3,4.4l5.7,3.3l8.1,2.3l5.8,5l1.3,7.3l3,2.7l6.4,1l7.2,0.9l7.9,3.8l3.4,0.7l4.9,5.7l4.7,3.6 l5.5-0.1l11.2,1.3l6.4-0.8l5.5,0.9l9.3,3.8l6.2-0.1l3.2,2l4.4-3.3l7.2-2.2l7.5-0.2l4.9-2.2l1.9-3.3l2.5-2l-1.9-2.1l-2.9-2.3l0.4-4 l3.2,0.5l5.9,1.3l3.1-3.3l6.3-2.4l1.4-4.1l2.4-1.8l6.8-0.8l4.3,0.7l-0.7-2.2l-7.2-4.3l-5.1-2l-2.5,2.3l-5.4-1l-2.4,0.8l-2.7-2.6 l-0.3-6.2l-0.6-4.6l-5.5,0.5l-3.9-2.1l-3.3-0.7l-4.5,4.4l-5.8,1l-3.6,1.6l-6.7-1h-4.5l-4.9-3.1l-6.5-3l-5.4-0.8l-5.7,0.8l-3.9,1.1 L1473.7,252.1L1473.7,252.1z\"},ME:{d:\"M1080,299.8l0.4-0.6l-2-1.2l-1.8-0.7l-0.8-0.8l-1.5-1.1l-0.9,0.6l-1.5,1.4l-0.4,3.4l-0.5,1l0,0l2.3,1.2l1.6,2.1 l1.1,0.4l0,0l-0.5-1.9l2-3.1l0.4,1.2l1.3-0.5L1080,299.8z\"},MS:{d:\"M631.8,465.7l-0.1-0.5h-0.1l-0.2,0.4v0.3l0.3,0.1L631.8,465.7z\"},MA:{d:\"M965.2,348.4l-2.3-0.1l-5.5-1.4l-5,0.4l-3.1-2.7h-3.9l-1.8,3.9l-3.7,6.7l-4,2.6l-5.4,2.9L927,365l-0.9,3.4l-2.1,5.4 l1.1,7.9l-4.7,5.3l-2.7,1.7l-4.4,4.4l-5.1,0.7l-2.8,2.4l-0.1,0.1l-3.6,6.5l-3.7,2.3l-2.1,4l-0.2,3.3l-1.6,3.8l-1.9,1l-3.1,4l-2,4.5 l0.3,2.2l-1.9,3.3l-2.2,1.7l-0.3,3h0.1l12.4-0.5l0.7-2.3l2.3-2.9l2-8.8l7.8-6.8l2.8-8.1l1.7-0.4l1.9-5l4.6-0.7l1.9,0.9h2.5l1.8-1.5 l3.4-0.2l-0.1-3.4l0,0h0.8l0.1-7.5l8.9-4.7l5.4-1l4.4-1.7l2.1-3.2l6.3-2.5l0.3-4.7l3.1-0.5l2.5-2.4l7-1l1-2.5l-1.4-1.4l-1.8-6.7 l-0.3-3.9L965.2,348.4L965.2,348.4z\"},MZ:{d:\"M1203,640.7l-0.8-2.9l0,0l0,0l-4.6,3.7l-6.2,2.5l-3.3-0.1l-2.1,1.9l-3.9,0.1l-1.4,0.8l-6.7-1.8l-2.1,0.3l-1.6,6 l0.7,7.3h0.3l1.9,2l2.2,4.6l0.1,8.2l-2.5,1.3l-1.9,4.5l-3.4-4l-0.2-4.5l1.3-2.9l-0.3-2.6l-2.1-1.6l-1.6,0.6l-3-3l-17.1,5.2l0.3,4.5 l0.3,2.4l4.6-0.1l2.6,1.3l1.1,1.6l2.6,0.5l2.8,2l-0.3,8.1l-1.3,4.4l-0.5,4.7l0.8,1.9l-0.8,3.7l-0.9,0.6l-1.6,4.6l-6.2,7.2l2.2,9 l1.1,4.5l-1.4,7.1l0.4,2.3l0.6,2.9l0.3,2.8h4.1l0.7-3.3l-1.4-0.5l-0.3-2.6l2.6-2.4l6.8-3.4l4.6-2.2l2.5-2.3l0.9-2.6l-1.2-1.1l1.1-3 l0.5-6.2l-1,0.3v-1.9l-0.8-3.7l-2.4-4.8l0.7-4.6l2.3-1.4l4.1-4.6l2.2-1.1l6.7-6.8l6.4-3.1l5.2-2.5l3.7-3.9l2.4-4.4l1.9-4.6l-0.9-3.1 l0.2-9.9l-0.4-5.6L1203,640.7L1203,640.7z\"},MM:{d:\"M1533.9,435.8l-0.6-2.6l-3.8,1.8l-2.5-1.2l-4.5-2.4l0.8-5.2l-3.7-1.3l-2.3-5.8l-5.6,1l-0.7-7.5l4.1-5.3l-0.8-5.3 l-1.3-4.9l-2.7-1.5l-2.7-3.7l-3,0.4l0.9,2.4l-1.6,1.2l1.3,3.9l-4.1-1.1l-6.1,4.4l0.9,3.6l-2.1,5.4l0.3,3.1l-1.5,5.2l-4.6-1.4 l0.9,6.6l-0.9,2.1l0.9,2.7l-2.4,1.5l0.5,4.6l-2.1-1l1.1,5.1l4.6,5.2l3.4,0.9l-0.4,2.2l5.4,7.4l1.9,5.9l-0.9,7.9l3.6,1.5l3.2,0.6 l5.8-4.6l3.2-3.1l3.1,5.2l2,8.1l2.6,7.6l2.6,3.3l0.2,6.9l2.2,3.8l-1.3,4.8l0.9,4.8l2.2-6.6l2.6-5.9l-2.8-5.8l-0.2-3l-1-3.5l-4.2-5.1 l-1.7-3.2l1.7-1.1l1.4-5.6l-2.9-4.2l-4.1-4.6l-3.5-5.6l2.2-1.1l1.5-6.9l3.9-0.3l2.8-2.8l3-1.4l0.8-2.4L1533.9,435.8L1533.9,435.8z\"},NA:{d:\"M1105.4,683.7l-10.3,2.5l-13.4-0.9l-3.7-3l-22.5,0.3l-0.9,0.4l-3.2-2.9l-3.6-0.1l-3.3,1l-2.7,1.2l0.2,4.9l4.4,6.2 l1.1,4l2.8,7.7l2.7,5.2l2.1,2.6l0.6,3.5v7.6l1.6,9.8l1.2,4.6l1,6.2l1.9,4.7l3.9,4.8l2.7-3.2l2.1,1.8l0.8,2.7l2.4,0.5l3.3,1.2 l2.9-0.5l5-3.2l1.1-23.6l0.6-18.5l5.4-0.2l0.9-22.7l4.1-0.2l8.6-2.2l2,2.6l3.7-2.5h1.6l3.2-1.5V684l-2.1-1.4l-3.6-0.4L1105.4,683.7 L1105.4,683.7z\"},NR:{d:\"M1915,575.5v-0.2h-0.1h-0.1l-0.1,0.2l0.1,0.1l0.1,0.1L1915,575.5L1915,575.5z\"},NP:{d:\"M1455.2,394.8l-6.5-0.6l-6.4-1.5l-5-2.8l-4.5-1.2l-2.5-3.1l-3.2-0.9l-6.4-4.1l-4.7-2l-1.9,1.5l-2.8,2.9l-0.9,5.9 l5.7,2.5l5.8,3.1l7.7,3.5l7.6,0.9l3.8,3.2l4.3,0.6l6.8,1.5l4.6-0.1l0.1-2.5l-1.5-4.1L1455.2,394.8L1455.2,394.8z\"},NL:{d:\"M1005.5,243.9h2.9l1.1-2.3l1-5.6l-1-2l-3.9-0.2l-6.5,2.6l-3.9,8.9l-2.5,1.7l0,0l3.6,0.5l4.4-1.3l3.1,2.7l2.8,1.4 L1005.5,243.9L1005.5,243.9z\"},NC:{d:\"M1897.3,716.1v-0.3l-0.4-0.2l-0.2,0.5v0.1l0.2,0.1h0.2L1897.3,716.1L1897.3,716.1z M1901.9,708.5L1901.9,708.5 l-0.1-0.4l0.1-0.2l-0.4,0.2l-0.6,0.2l0.1,0.8l-0.1,0.4l0.3,0.1l0.1,0.3h0.2l0.7-0.2l0.3-1.1h-0.4L1901.9,708.5L1901.9,708.5z M1898.9,706.8l0.3-0.5l0.1-0.2l-0.2-0.7l-0.3-0.3l0.3-1l-0.1-0.2l-0.4-0.2l-0.9,0.3l-0.1,0.2l0.5,0.1l0.2,0.2l-0.5,0.7l-0.5,0.1 l0.1,0.5l0.2,0.4l0.7,0.2l0.3,0.4H1898.9z M1895,703.9l0.3-0.3l0.3-0.4l-0.1-0.1v-0.3l0.2-0.4l0.3-0.1l-0.2-0.2l-0.2-0.1v0.3 l-0.3,0.7l-0.1,0.3l-0.5,0.6H1895L1895,703.9z M1882.7,701l-0.6-0.7l-0.1,0.2l-0.1,0.4v0.3l0.3,0.2l0.1,0.2l-0.1,0.5v0.4l0.6,0.9 l0.1,0.7l0.3,0.6l0.5,0.5l0.4,0.5l0.8,1.4l0.2,0.5l0.4,0.3l1,1.2l0.4,0.4l0.4,0.2l0.9,0.7l0.6,0.3l0.3,0.5l0.6,0.3l0.8,0.4l0.1,0.2 v0.3l0.1,0.3l0.5,0.4l0.6,0.3l0.1,0.2l0.1,0.2l0.3-0.1l0.3,0.1l0.9,0.7l0.4-0.1h0.3l0.5-0.2l0.3-0.4l-0.1-1.1l-0.5-0.5l-0.7-0.4 l-0.4-0.5l-0.4-0.5l-0.8-1l-1.1-1l-0.5-0.2l-0.3-0.4l-0.3-0.1l-0.2-0.3l-0.5-0.3l-0.3-0.6l-0.6-0.6l-0.1-0.3l0.1-0.3l-0.1-0.3 l-0.4-0.3l-0.2-0.5l-0.2-0.3l-0.4-0.2l-0.7-0.4l-1.6-1.9l-0.7-0.6l-0.7,0.2L1882.7,701L1882.7,701z M1860.7,695l0.2-0.4l0.1-0.8 l-0.2,0.4l-0.2,1L1860.7,695z\"},NZ:{d:\"M1868.6,832.8l0.9-2.6l-5.8,2.9l-3.4,3.4l-3.2,1.6l-5.9,4.6l-5.6,3.2l-7,3.2l-5.5,2.4l-4.3,1.1l-11.3,6.1l-6.4,4.6 l-1.1,2.3l5.1,0.4l1.5,2.1l4.5,0.1l4-1.8l6.3-2.8l8.1-6.2l4.7-4.1l6.2-2.3l4-0.1l0.6-2.9l4.6-2.5l7-4.5l4.2-2.9l2.1-2.6l0.5-2.6 l-5.6,2.5L1868.6,832.8L1868.6,832.8z M1897.4,802.3l1.9-5.7l-3.1-1.7l-0.8-3.6l-2.3,0.5l-0.4,4.6l0.8,5.7l0.9,2.7l-0.9,1.1 l-0.6,4.4l-2.4,4.1l-4.2,5l-5.3,2.2l-1.7,2.4l3.7,2.5l-0.8,3.5l-6.9,5.1l1.4,0.9l-0.4,1.6l5.9-2.5l5.9-4.2l4.5-3.4l1.6-1.2l1.5-2.7 l2.8-2l3.8,0.2l4.2-3.8l5.1-5.7l-2.1-0.8l-4.6,2.5l-3.2-0.5l-2.9-2.1l2.3-4.9l-1.2-1.8l-2.9,4.4L1897.4,802.3L1897.4,802.3z\"},NI:{d:\"M514.1,476.8l-1.9-0.2l-0.9,0.9l-2,0.8h-1.4l-1.3,0.8l-1.1-0.3l-0.9-0.9l-0.6,0.2l-0.8,1.5l-0.5-0.1l-0.3,1.3 l-2.1,1.8l-1.1,0.7l-0.6,0.8l-1.5-1.3l-1.4,1.7h-1.2l-1.3,0.2l-0.2,3.1h-0.8l-0.8,1.5l-1.8,0.3l-0.4,0.4l-0.9-1l-0.7,1l2.6,2.9 l2.2,2l1,2.1l2.5,2.6l1.8,2l0.9-0.8l3.5,1.7l1.4-0.8l1.7,0.5l0.8,1.3l1.7,0.4l1.4-1.3l-0.8-1.1l-0.1-1.7l1.2-1.6l-0.2-1.7l0.7-2.7 l0.9-0.7l0.1-2.8l-0.2-1.7l0.4-2.8l0.9-2.5l1.4-2.2l-0.3-2.3l0.4-1.4L514.1,476.8L514.1,476.8z\"},NE:{d:\"M1051.3,425.6l-8.8-2.8l-18.6,12.2l-15.8,12.5l-7.8,2.8l0.1,14.6l-3,4.3l-0.5,3.9l-4.9,1l-7.6,0.6l-2,2.2l-3.6,0.3 l-0.5,3.1l0.8,2.9l3.1,4.1l0.2,3.1l6.4,1.4l-0.1,4.4l1.9-1.9h2l4.3,3.7l0.3-5.7l1.6-2.6l0.8-3.6l1.4-1.4l6-0.8l5.6,2.4l2.1,2.4 l2.9,0.1l2.6-1.5l6.8,3.3l2.8-0.2l3.3-2.7l3.3,0.2l1.6-0.9l3,0.4l4.3,1.8l4.3-3.5l1.3,0.2l3.9,7l1-0.2l0.2-2l1.6-0.4l0.5-2.9 l-3.6-0.2v-4.1l-2.4-2.3l2.3-8.4l6.9-6l0.2-8.3l1.8-12.9l1.1-2.7l-2.3-2.2l-0.2-2.1l-2-1.6l-1.6-9.9l-3.9,2.4L1051.3,425.6 L1051.3,425.6z\"},NG:{d:\"M1055.8,492.7l-1,0.2l-3.9-7l-1.3-0.2l-4.3,3.5l-4.3-1.8l-3-0.4l-1.6,0.9l-3.3-0.2l-3.3,2.7l-2.8,0.2l-6.8-3.3 l-2.6,1.5l-2.9-0.1l-2.1-2.4l-5.6-2.4l-6,0.8l-1.4,1.4l-0.8,3.6l-1.6,2.6l-0.3,5.7l-0.2,2.1l1.2,3.8l-1.1,2.5l0.6,1.7l-2.7,4 L993,514l-1,4l0.1,4.1l-0.3,10.2h4.9h4.3l3.9,4.2l1.9,4.6l3,3.9l4.5,0.2l2.2-1.4l2.1,0.3l5.8-2.3l1.4-4.5l2.7-6.1l1.6-0.1l3.3-3.7 l2.1-0.1l3.2,2.6l3.9-2.2l0.5-2.6l1.2-2.6l0.8-3.2l3-2.6l1.1-4.5l1.2-1.4l0.7-3.3l1.5-4l4.6-5l0.3-2.1l0.6-1.1L1055.8,492.7 L1055.8,492.7z\"},KP:{d:\"M1644.7,302.3L1644.7,302.3l-5.5-3.6l0.1,3.5l-6.3,2.6l2.7,3.3l-4.6-0.2l-3.6-2l-1,4.4l-3.8,3.4l-2.1,4l3.3,1.7 l3.4,0.7l0.8,1l0.4,3.5l1.1,1.2l-0.9,0.7l-0.1,2.9l1.9,1l1.6,0.6l0.8,1.2l1.3-0.5v-1.3l3.1,1.3l0.1-0.6l2.4,0.2l0.7-2.9l3.5-0.3 l2.1-0.4l-0.1-1.6l-4.3-2.8l-2.6-1l0.2-0.7l-1.2-2.8l1.3-1.7l2.9-1l1-1.9l0.3-1.1l1.9-1.4l-2.8-4.5l0.3-2.1l0.9-2l2.2,0.3l0,0l0,0 l0,0L1644.7,302.3L1644.7,302.3z\"},NO:{d:\"M1088.8,133.1l-6.9,1.1l-7.3-0.3l-5.1,4.4l-6.7-0.3l-8.5,2.3l-10.1,6.8l-6.4,4l-8.8,10.7l-7.1,7.8l-8.1,5.8 l-11.2,4.8l-3.9,3.6l1.9,13.4l1.9,6.3l6.4,3l6-1.4l8.5-6.8l3.3,3.6l1.7-3.3l3.4-4l0.9-6.9l-3.1-2.9l-1-7.6l2.3-5.3l4.3,0.1l1.3-2.2 l-1.8-1.9l5.7-7.9l3.4-6.1l2.2-3.9l4,0.1l0.6-3.1l7.9,0.9v-3.5l2.5-0.3l2.1-1.4l5.1,2.9l5.3-0.3l4.7,1.3l3.4-2.4l1.1-3.9l5.8-1.8 l5.7,2.1l-0.8,3.8l3.2-0.5l6.4-2.2l0,0l-5.4-3.3l4.8-1.4L1088.8,133.1L1088.8,133.1z M1066.2,99.8l-5.6-1l-1.9-1.7l-7.2,0.9l2.6,1.5 l-2.2,1.2l6.7,1.1L1066.2,99.8z M1040.8,91.5l-4.8-1.6l-5.1,0.2l-1,1.5h-5l-2.2-1.5l-9.3,1.6l3.2,3.5l7.6,3.8l5.7,1.4l-3,1.7 l8.4,2.9l4.4-0.2l0.9-3.9l3-0.9l1.2-3.4l8.5-1.8C1053.3,94.8,1040.8,91.5,1040.8,91.5z M1065,88.4l-9.1-1l-3.2,1.2l-5.3-1l-10.4,1.2 l4.3,2h5.1l0.9,1.3l10.6,0.7l10.1-0.5l4.3-2.4C1072.3,89.9,1065,88.4,1065,88.4z\"},OM:{d:\"M1301,437.8l2.1-2l0.8-1.8l1.6-3.8l-0.1-1.4l-2.1-0.8l-1.6-2.1l-2.9-3.7l-3.3-1.1l-4.1-0.9l-3.3-2.3l-2.9-4.3h-2.8 l-0.1,4.2l1.1,0.8l-2.4,1.3l0.3,2.6l-1.4,2.6l0.1,2.6l2.9,4.5l-2.6,12.7l-16.1,6.4l5.2,10.5l2.1,4.4l2.5-0.3l3.6-2.2l3.1,0.6 l2.5-1.8l-0.2-2.5l2.1-1.6h3.4l1.2-1.3l0.2-3.1l3.3-2.4h2.6l0.4-0.8l-1-4.2l0.6-3.2l1-1.5l2.5,0.3L1301,437.8L1301,437.8z M1284.4,407.4l0.2-2.6l-0.7-0.6l-1.3,2.2l1.3,2.2L1284.4,407.4z\"},PK:{d:\"M1388.3,346.3l-9.4-2.6l-2.9-5l-4.7-3l-2.8,0.7l-2.4,1.2l-5.8,0.8l-5.3,1.3l-2.4,2.8l1.9,2.8l1.4,3.2l-2,2.7 l0.8,2.5l-0.9,2.3l-5.1-0.2l3,4.2l-3,1.6l-1.5,3.8l1.1,3.8l-1.7,1.8l-2.1-0.6l-4,0.9l-0.2,1.7h-4l-2.3,3.6l0.8,5.4l-6.6,2.6 l-3.8-0.5l-0.9,1.4l-3.3-0.8l-5.3,0.9l-9.6-3.2l3.2,3.3l2.8,3.9l5.6,2.7l1,5.7l2.7,1l0.9,2.9l-7.4,3.3l-1.2,7.4l7.6-0.9l8.9-0.1 l9.9-1.2l4.9,4.8l2.1,4.6l4.2,1.6l3.2-4.2h12l-1.8-5.5l-3.5-3.2l-1.3-4.9l-4-2.9l4.9-6.6l6.4,0.5l4.5-6.7l2.1-6.5l3.9-6.3l-1-4.5 l3.7-3.7l-5-3.1l-2.9-4.3l-3.2-5.6l1.9-2.8l8.5,1.6l5.7-1L1388.3,346.3L1388.3,346.3z\"},PS:{d:\"M1166.9,366.1l-2-0.9l-0.7,4.3l1.4,0.7l-1.2,0.8l-0.1,1.7l2.4-0.8l0.6-1.9L1166.9,366.1L1166.9,366.1z\"},PA:{d:\"M543.5,517l-2-1.8l-1.7-1.9l-2.5-1.1l-3.1-0.2l0.3-0.6l-3.1-0.4l-2,1.9l-3.5,1.3l-2.5,1.6l-2.7,0.5l-1.5-1.6 l-0.5,0.5l-2.3-0.3l0.2-1.3l-1.9-2.3l-2.2,0.6l-0.1,2.5l1.1,1l-0.8,0.7l0.1,1.2l-0.5,1.3l-0.4,1.2l0.6,1l0.3-1.4h2.4l1.4,0.7 l2.3,0.5l1,2.5l1.8,0.4l0.8-1.1l0.8,3.8l2.6-0.3l0.9-0.9l1.5-0.9l-2.5-3.4l0.6-1.3l1.3-0.3l2.3-1.6l1.2-2.2l2.5-0.4l2.7,1.8l1,2.1 l1.4,0.4l-1.5,1.7l1,3.5l1.8,1.8l0.9-3.1l1.8,0.5l1.1-1.9l-1.1-3.8L543.5,517z\"},PG:{d:\"M1850.7,615.6l0.9-1.8l-2.4-2.2l-2.5-4l-1.6-1.5l-0.5-1.9l-0.8,0.7l0.9,4.8l2.2,4l2.2,2.5L1850.7,615.6 L1850.7,615.6z M1829.5,607l2.1-3.9l0.4-3.5l-1.1-1l-3.4,0.1l0.4,3.7l-3.3,2.3l-1.7,2.2l-3.2,0.5l-0.4-3.4l-0.8,0.1l-1,3.1l-3.1,0.5 l-5-0.9l-0.6,1.9l3.1,1.8l4.5,1.9h2.9l3-1.5l3.2-1.6l1-1.8L1829.5,607L1829.5,607z M1801.7,619.2l-0.9-4.3l5.2-0.7l-1.1-3.3l-9.1-4 l-0.6-3.7l-2.9-3.2l-3.7-3.3l-10.2-3.6l-9.6-4.4l-1,20.7l-1.5,20.8l5.7,0.2l3.1,1.1l4.6-2.2l-0.3-4.7l3.6-2.1l4.9-1.8l7,2.8l2.4,5.6 l2.9,3.5l3.9,4l5.5,1l4.8,0.7l1.1,1.6l3.8-0.4l0.8-1.8l-5.6-2.7l1.8-1.2l-4.2-1.1l0.5-2.8l-3.2,0.2l-3-6.8L1801.7,619.2 L1801.7,619.2z M1836.4,600.8l-0.5-3.3l-2-2.1l-2.1-2.6l-2.3-1.5l-1.9-1.4l-2.9-1.8l-1.6,1.5l3.9,1.9l3.1,2.7l2.4,2.1l1.2,2.4 l0.8,3.8L1836.4,600.8L1836.4,600.8z\"},PY:{d:\"M655.7,700.5l-0.3-1.9l-5.4-3.3l-5.1-0.1l-9.5,1.9l-2.1,5.6l0.2,3.4l-1.5,7.6l11.2,10.4l4.6,1l7.2,4.7l5.9,2.5 l1.1,2.8l-4.2,9.6l5.7,1.8l6.2,1l4.2-1.1l4.3-4.8l0.3-5.7l0.7-3.6l0.3-3.8l-0.3-3.5l-2.1-1.2l-2,1.1l-2-0.3l-0.9-2.5l-1-5.8 l-1.2-1.9l-3.9-1.7l-2.1,1.2l-6-1.2l-0.4-8.6L655.7,700.5L655.7,700.5z\"},PE:{d:\"M584.3,599.5l-2.9-3.4l-1.7-0.1l3.5-6.5l-4.4-3l-3.3,0.6l-2.1-1.1l-3,1.7l-4.2-0.8l-3.4-6.7l-2.7-1.7l-1.8-3l-3.7-3 l-1.5,0.6l0.8,4.9l-1.7,4.1l-6,6.7l-6.7,2.5l-3.3,5.5l-0.9,4.3l-3.1,2.6l-2.5-3.2l-2.3-0.7l-2.3,0.5l-0.2-2.3l1.5-1.5l-0.7-2.7 l-4.4,4l-1.6,4.5l3,6.1l-1.7,2.8l4.1,2.6l4.5,4.1l2,4.7l2.4,2.9l6,12.7l6.2,11.7l5.4,8.4l-0.8,1.8l2.8,5.3l4.6,3.9l10.7,6.9 l11.6,6.4l0.7,2.6l5.9,3.7l2.7-1.6l1.2-3.3l2.8-6.9l-2.8-5.3l1.1-2.1l-1.2-2.4l1.9-3.2l-0.3-5.4l-0.1-4.5l1.1-2.1l-5.5-10.3l-3,1.1 l-2.6-0.7l-0.2-9.7l-4.4,3.8l-4.9-0.2l-2.3-3.4l-3.7-0.3l1-2.8l-3.3-3.8L562,620l1.5-1.1l-0.1-2.7l3.3-1.9l-0.7-3.4l1.3-2.2l0.4-3 l6.2-4.3l4.6-1.2l0.7-1L584.3,599.5L584.3,599.5z\"},PH:{d:\"M1684.6,518.6l-0.6-2.3l-0.8-3.2l-4.8-3l0.8,4.9l-3.9,0.2l-0.7,2.8l-4.2,1.7l-2.2-2.8l-2.8,2.4l-3.4,1.7l-1.9,5.4 l1.1,1.9l3.9-3.6l2.7,0.3l1.5-2.7l3.8,3l-1.5,3.1l1.9,4.6l6.8,3.7l1.4-3l-2.1-4.7l2.4-3.2l2.5,6.4l1.5-5.8l-0.6-3.5L1684.6,518.6 L1684.6,518.6z M1670.1,506.8v-6.1l-3.6,6.1l0.5-4.2l-3,0.3l-0.3,4l-1.2,1.8l-1,1.7l3.8,4.4l1.6-1.9l1.4-4L1670.1,506.8 L1670.1,506.8z M1640,512.9l2.6-4.4l3.4-3.5l-1.5-5.2l-2.4,6.3l-2.9,4.4l-3.8,4l-2.4,4.4L1640,512.9L1640,512.9z M1657.4,496.5 l1.2,3l-0.1,3.3l0.5,2.9l3.3-1.9l2.4-2.7l-0.2-2.6h-3.6L1657.4,496.5L1657.4,496.5z M1677.4,494.8l-1.8-2.4l-5.4-0.1l4,4.8l0.3,2.4 l-3.3-0.5l1.2,3.9l1.7,0.3l0.7,4.5l2.5-1.4l-1.7-4l-0.4-2.1l4.5,1.7L1677.4,494.8L1677.4,494.8z M1654.5,489l-2.2-2.3l-4.8-0.2 l3.4,4.8l2.8,3.2L1654.5,489L1654.5,489z M1648.1,454.4h-3.3l-0.9,5.8l1.1,9.9l-2.6-2l1.2,6l1.2,2.8l3.3,3.7l0.4-2.3l1.8,1.4 l-1.5,1.7l0.1,2.6l2.9,1.4l5-0.9l4,3.8l1.1-2.4l2.5,3.4l4.8,3.1l0.2-2.9l-2-1.6l0.1-3.4l-7.5-3.6l-2.3,0.8l-3.1-0.7l-2-5.1l0.1-5.1 l3-2.1l0.6-5.3l-2.7-4.6l0.4-2.6l-0.7-1.6l-1.5,1.6L1648.1,454.4L1648.1,454.4z\"},PN:{d:\"M274.2,727.4v-0.2l-0.1-0.2l-0.2-0.1l-0.1,0.1l0.1,0.2l0.2,0.2H274.2L274.2,727.4z\"},PL:{d:\"M1069.4,228.3l-4.6-0.1l-0.5-1.4l-4.8-1.1l-5.7,2.1l-7.1,2.8l-3.1,1.7l1.4,3.1l-1.2,1.6l2,2.2l1.4,3.3l-0.1,2.1 l2.3,3.9l2.4,1.9l3.7,0.6l-0.1,1.7l2.7,1.2l0.6-1.5l3.4,0.6l0.7,2l3.6,0.3l2.6,3.1l0.3,0.4l1.9-0.9l2.7,2.2l2.8-1.3l2.4,0.6l3.4-0.8 l4.9,2.3l1.1,0.4l-1.6-2.8l3.8-5.1l2.3-0.7l0.3-1.8l-3.1-5.3l-0.5-2.7l-1.9-2.9l2.7-1.2l-0.3-2.4l-1.7-2.3l-0.6-2.7l-1.4-1.9 l-2.5-0.6l-8.7,0.1L1069.4,228.3L1069.4,228.3z\"},PT:{d:\"M937.6,335.9l-0.4-2.1l2-2.5l0.8-1.7l-1.8-1.9l1.6-4.3l-2-3.8l2.2-0.5l0.3-3l0.9-0.9l0.2-4.9l2.4-1.7l-1.3-3.1 l-3-0.2l-0.9,0.8h-3l-1.2-3.1l-2.1,0.9l-1.9,1.6l0.1,2.1l0.9,2.2l0.1,2.7l-1.3,3.8l-0.4,2.5l-2.2,2.3l-0.6,4.2l1.2,2.4l2.3,0.6 l0.4,4l-1,5.1l2.8-0.7l2.7,0.9L937.6,335.9L937.6,335.9z\"},PR:{d:\"M600.8,457.3v-0.1l0,0h0.1v-0.1l0.1-0.1l0,0v-0.1h-0.1l0,0h-0.3h-0.1v0.1v0.1l0.2,0.1l0,0L600.8,457.3L600.8,457.3 L600.8,457.3z M614.4,457l0.7-0.2v-0.1l-0.4-0.1h-0.6l-0.5,0.2l0.1,0.2h0.2H614.4z M610.7,454.8l-0.1-0.2h-0.2l-3.5-0.1l-1.3-0.2 l-0.3,0.1l-0.3,0.1l-0.1,0.4l-0.2,0.2l-0.3,0.2l0.1,0.3l0.1,0.2l0.2,0.4l-0.1,0.5l-0.2,1l0.3,0.2l0.7-0.1l0.3,0.1l0.3,0.1l0.4-0.1 l0.4-0.2l0.9,0.1l0.5-0.1l0.6,0.3l0.4-0.1l0.2,0.1h0.3h0.6l0.9-0.2l0.8-0.5l0.3-0.5l0.4-0.3l0.6-0.4v-0.9l-0.7-0.1l-0.6-0.3 l-1.1-0.1h-0.1l0.1,0.2h-0.1L610.7,454.8L610.7,454.8z\"},QA:{d:\"M1258,415.5l0.8-3.8l-0.5-3.7l-1.9-2l-1.4,0.7l-1.1,3.3l0.8,4.7l1.8,1.2L1258,415.5L1258,415.5z\"},RE:{d:\"M1284,707.9l0.2-0.4l0.1-0.8l-0.4-0.8l-0.4-0.7l-0.4-0.2l-0.8-0.1l-0.7,0.3l-0.4,0.6l-0.2,0.3l0.4,1.1l0.2,0.3 l1.1,0.6h0.5L1284,707.9L1284,707.9z\"},RO:{d:\"M1108.1,266.3h-2.1l-1,1.5l-3.6,0.6l-1.6,0.9l-2.4-1.5h-3.2l-3.2-0.7l-1.9,1.3l-2.9,1.3l-1.9,4.2l-2.6,4.3l-3.8,1.1 l2.9,2.5l0.8,1.9l3.2,1.5l0.7,2.5l3.1,1.8l1.4-1.3l1.4,0.7l-1.1,1.1l1,1l1.8,2.6l1.9-0.5l4,1l7.5,0.3l2.3-1.6l5.8-1.4l4,2.2l3,0.7 l0.4-7.4l1.6,0.5l2.3-1.3l-0.4-1.6l-2.4-1.1l-2.2,1l-2.4-1.1l-1.3-2.8l0.2-2.7l-0.6-2.7l-3.4-3.7l-1.9-2.6l-1.8-1.9L1108.1,266.3 L1108.1,266.3z\"},RU:{d:\"M1332.3,95.1l-4.5-4l-13.6-4.1l-9.4-2.1l-6.2,0.9l-5.3,2.9l5.8,0.8l6.6,3.2l8,1.7l11.5,1.3 C1325.2,95.7,1332.3,95.1,1332.3,95.1z M1153.6,87.8l0.9-0.6l-5.7-0.9L1146,87l-1.3,1l-1.5-1.2l-5.2,0.1l-6.2,0.8l7.7,0.1l-1.1,1.3 l4.4,1l3.6-0.7l0.1-0.7l2.9-0.3C1149.4,88.4,1153.6,87.8,1153.6,87.8z M1354.1,97.7l-1.5-1.8l-12.5-2.6l-3-0.3l-2.2,0.5l1.2,6 C1336.1,99.5,1354.1,97.7,1354.1,97.7z M1369.3,104l-9.2-0.7l3.4-1.2l-8.2-1.5l-6.1,1.9l-1,2l1.5,2.1l-6.9-0.1l-5.3,2.6l-4.3-1.1 l-9.3,0.5l0.3,1.3l-9.2,0.7l-4.9,2.4l-4.2,0.2l-1.2,3.3l5.5,2.6l-7.7,0.7l-9.5-0.3l-5.8,1.1l4.8,5.4l6.9,4.3l-9.6-3l-7.9,0.3l-5.1,2 l4.5,3.8l-4.9-1l-2.1-5l-4.2-2.8l-1.8,0.1l3.6,3.7l-4.6,3.5l8.1,4.2l0.4,5.4l2.9,2.9l4.7,0.5l0.4,3.5l4.4,3.1l-1.9,2.6l0.5,2.7 l-3.7,1.4l-0.5,2l-5.3-0.8l3.5-7.8l-0.5-3.6l-6.7-3.3l-3.8-7.3l-3.7-3.7l-3.6-1.6l0.8-4.2l-2.9-2.9l-11.3-1.4l-2.1,1l0.5,4.7 l-4.3,4.7l1.2,1.7l4.7,4.1l0.1,2.6l5.3,0.5l0.8,1.1l5.8,2.9l-1,2.8l-18.5-6.1l-6.6-1.7l-12.8-1.6l-1.2,1.7l5.9,3.1l-2.7,3.6 l-6.4-3.2l-5,2.2l-7.6,0.1l-2.1,1.9l-5.3-0.6l2.5-3.3l-3.2-0.2l-12.3,4.6l-7.6,2.6l0.4,3.5l-6,1.2l-4-1.9l-1.2-3l5-0.7l-3.6-3 l-12.2-1.8l4.3,3.4l-0.8,3.2l4.7,3.3l-1.1,3.8l-4.6-1.9l-4-0.3l-8,5.4l4.2,4.1l-3.2,1.4l-11.4-3.5l-2.1,2.1l3.3,2.4l0.2,2.7 l-3.8-1.4l-6-1.7l-1.9-5.8l-1-2.6l-8-4l2.9-0.7l20.1,4.2l6.4-1.5l3.7-2.9l-1.6-3.6l-4-2.6l-17.6-6.1l-11.6-1.3l-7.6-3.2l-3.6,1.8 l0,0l-6.4,2.2l-3.2,0.5l0.4,3.7l7.2,3.7l-2.8,4.1l6.4,6.3l-1.7,4.8l4.9,4.1l-0.9,3.7l7.3,3.9l-0.9,2.9l-3.3,3.3l-7.9,7.4l0,0 l5.3,2.8l-4.5,3.2l0,0l0.9,1l-2.6,3.4l2.5,5.5l-1.6,1.9l2.4,1.4l1,2.8l2.1,3.6l5.2,1.5l1,1.4l2.3-0.7l4.8,1.4l1,2.9l-0.6,1.6 l3.7,3.9l2.2,1.1l-0.1,1.1l3.4,1.1l1.7,1.6l-1.6,1.3l-3.9-0.2l-0.8,0.6l1.5,2l2,3.9l0,0l1.8,0.2l1-1.4l1.5,0.3l4.8-0.5l3.8,3.4 l-0.9,1.3l0.7,1.9l4,0.2l2.2,2.7l0.2,1.2l6.6,2.2l3.5-1l3.6,2.9l2.9-0.1l7.6,2l0.4,1.9l-1.3,3.2l1.8,3.4l-0.3,2.1l-4.7,0.5l-2.2,1.7 l0.4,2.8l4.2-1l0.4,1.3l-6.8,2.6l3.2,2.4l-3.2,5.2l-3.4,1l5,3.6l6.2,2.4l7.4,5.1l0.5-0.7l4.5,1.1l7.7,1l7.5,2.9l1.1,1.2l2.9-1 l5.1,1.3l2.1,2.5l3.5,1.4l1.5,0.2l4.3,3.8l2.4,0.4l0.5-1.5l2.6-2.5l0,0l-7.3-7.3l-0.4-4.1l-5.9-5.9l3.5-6.3l4.6-1.1l1.4-3.7l-2.8-1 l-0.2-3.2l-4.2-4.1l-3.6,0.2l-5.3-4.3l1.7-4.7l-1.7-1.2l2.1-6.8l6,3.6l-0.7-4.6l8.1-6.6l7.5-0.2l11.9,4.3l6.6,2.4l4.3-2.5l7.6-0.2 l7.3,3.2l0.8-1.8l6.9,0.3l0.2-3l-9.4-4.2l3.6-2.9l-1.5-1.7l3.9-1.6l-5-4.1l1.4-2.1l16.8-2.1l1.7-1.5l10.8-2.2l3.1-2.5l9,1.3l4.3,6.3 l4.3-1.5l7,2.1l1.2,3.3l4.4-0.4l9.1-5.7l-0.8,1.9l8.3,4.7l18.1,15.5l1.1-3.3l8.3,3.6l6.2-1.6l3.2,1.1l4.1,3.6l3.9,1.2l3.3,2.6l6-0.9 l4.3,3.8l1.7-0.5l4.7-1l6.6-5.4l5.9-2.9l5.3,1.9l5.1,0.1l4.7,2.9l5,0.2l7.9,1.6l2.4-4.3l-4-3.6l1.3-6.4l6.9,2.5l4.8,0.8l6.6,1.5 l3.7,4.6l8.4,2.6l3.9-1.1l5.7-0.8l5.4,0.8l6.5,3l4.9,3.1h4.5l6.7,1l3.6-1.6l5.8-1l4.5-4.4l3.3,0.7l3.9,2.1l5.5-0.5l7.3,2.3l4.4-3.9 l-1.9-2.7l-0.1-6.5l1.2-2l-2.5-3.3l-3.7-1.5l1.7-3l5.1-1.1l6.2-0.2l8.5,1.8l5.9,2.3l7.7,6.1l3.8,2.7l4.4,3.7l6.1,6.1l9.9,1.9 l8.9,4.5l6,5.8h7.5l2.6-2.5l6.9-1.8l1.3,5.6l-0.4,2.3l2.8,6.8l0.6,6l-6.8-1.1l-2.9,2.2l4.7,5.3l3.8,7.3l-2.5,0.1l1.9,3.1l0,0 l1.4,1.1l0,0l0,0l0,0l-0.4-2l4-4.5l5.1,3l3.2-0.1l4.4-3.6l1-3.7l2.1-7.1l1.9-7.2l-1.3-4.3l1-9l-5.2-9.9l-5.5-7.3l-1.3-6.2l-4.7-5.1 l-12.7-6.7l-5.6-0.4l-0.3,3l-5.8-1.3l-5.7-3.8l-8-0.7l4.9-14.1l3.5-11.5l13.1-1.8l14.9,1l2.5-2.8l7.9,0.8l4.3,4.3l6.4-0.6l8.4-1.6 l-7.7-3.5v-9.8l9.1-1.9l12.1,7.1l3.6-6.4l-3.2-4.7l4.7-0.5l6.5,8.1l-2.4,4.6l-0.8,6l0.3,7.5l-5.7,1.3l2.8,2.7l-0.1,3.6l6.4,8.3 l16,13.4l10.5,8.8l5.7,4.3l1.6-5.7l-4.5-6.2l5.7-1.5l-5.4-6.9l5-3.1l-4.7-2.6l-3.4-5l4.1-0.2l-9-8.6l-6.7-1.4l-2.9-2.4l-1.1-5.6 l-3.1-3.9l7,0.8l1.3-2.5l4.7,2.2l6.1-4.6l11.4,4l-1.7-2.6l2-3.6l1.5-4l3.1-0.7l6.5-4.3l9.8,1.2l-0.9-1.5l-3.8-2.3l-4.1-1.6l-9.1-4.6 l-8.1-3l6.1,0.4l2-2.5l0,0l-32.9-21.9l-9.4-2.3l-15.7-2.6l-7.9,0.3l-15.2-1.4l1.8,2.3l8.5,3.4l-2.5,1.8l-14.2-4.8l-6.8,0.6l-9.2-1.1 l-7,0.2l-3.9,1.1l-7.2-1.6l-5.1-3.8l-6.5-2.2l-9.2-0.9l-14.7,1l-16.1-4l-7.8-3l-40.1-3.4l-2.1,2.2l9.3,4.8l-7.5-0.7l-1,1.5l-9.7-1.6 l-5,1.4l-9.3-2.4l3,5.5l-8.9-2.1l-10-4.1l-0.4-2.2l-6-3.3l-9.8-2.6h-6.1l-9.3-0.9l4.7,3.9l-17.2-0.8l-3.9-2.3l-13.3-0.9l-5.3,0.8 l-0.1,1.3l-5.8-3.2l-2.3,0.9l-7.2-1.2l-5.6-0.7l1.1-1.5l6.6-2.8l2.3-1.5l-2.4-2.5l-5.5-1.9l-11.5-2.3l-10.8-0.1l-1.9,1.2L1369.3,104 L1369.3,104z M1207.1,135.6l-9.9-4.3l-3.1-4.3l3.3-4.9l2.8-5l8.6-4.7l9.8-2.4l11.3-2.4l1.3-1.5l-4.2-1.9l-6.6,0.6l-4.9,1.8 l-11.7,0.9l-10.1,3.1l-6.8,2.7l2.5,2.2l-6.6,4.4l3.9,0.7l-5.4,4.3l1.6,2.8l-3.4,1.1l1.9,2.8l7.9,1.4l2.2,2.3l13.4,0.7L1207.1,135.6 L1207.1,135.6z M1521.1,110.9l-17.9-2.6l-10.2-0.2l-3.4,0.9l3.4,3.4l12.4,3.2l4.5-1.2l14.2,0.2 C1524.1,114.6,1521.1,110.9,1521.1,110.9z M1546.3,113.2l-11.7-1.3l-8.2-0.7l1.7,1.6l10.3,2l6.8,0.4L1546.3,113.2L1546.3,113.2z M1533.8,122.7l-2.5-1.4l-8.3-1.9l-4.1,0.5l-0.8,2l1.1,0.2l8.8,0.6C1528,122.7,1533.8,122.7,1533.8,122.7z M1696.4,135l-6-3.6 l-1.4,2.2l3.5,1.6L1696.4,135z M1084,228.9l-0.6-1.5l0.2-1.7l-2.2-0.9l-5-1.1l-6.3,2l-0.7,2.6l5.9,0.7L1084,228.9z M1673.7,250.7 l-7.2-6.2l-5.1-6l-6.8-5.8l-4.9-4l-1.3,0.8l4.4,2.8l-1.9,2.8l6.8,8.3l7.8,6l6.4,8.3l2.4,4.6l5.5,6.8l3.8,6l4.6,5.2l-0.1-4.8l6.5,3.8 l-3-4.4l-9.5-6.3l-3.7-9l8.9,2L1673.7,250.7L1673.7,250.7z\"},RW:{d:\"M1147.6,579.4l-3.3,1.9l-1.4-0.6l-1.6,1.8l-0.2,3.8l-0.8,0.4l-0.6,3.5l3.5,0.5l1.7-3.6l3,0.4l0,0l1.6-0.8l0.4-3.7 L1147.6,579.4L1147.6,579.4z\"},KN:{d:\"M629.9,463.2v-0.3l-0.2-0.2h-0.3v0.5l0.2,0.2L629.9,463.2z M629.4,462.5l-0.1-0.2l-0.1-0.1l-0.2-0.4l-0.4-0.4 l-0.2,0.1l-0.1,0.2v0.1l0,0l0.3,0.3l0.4,0.1l0.2,0.4L629.4,462.5L629.4,462.5z\"},LC:{d:\"M637.4,484.2l0.1-1.2l-0.1-0.5l-0.2,0.1l-0.3,0.4l-0.4,0.6l-0.1,0.3v0.6l0.6,0.4L637.4,484.2L637.4,484.2z\"},VC:{d:\"M634.5,491.4L634.5,491.4v-0.1h0.1v-0.1l0,0v-0.1h-0.1v0.1l0,0v0.1h-0.1L634.5,491.4L634.5,491.4L634.5,491.4 L634.5,491.4z M635.2,489.5l0.1-0.2l0.1-0.1l0,0l0,0l-0.1-0.1l0,0v0.1l-0.2,0.1l0,0v0.1l0,0v0.1H635h-0.1l0,0h0.1l0,0l0.1,0.1l0,0 l0,0l0,0L635.2,489.5L635.2,489.5z M635.5,488.4l0.3-0.2l0.1-0.6l-0.1-0.4h-0.2l-0.3,0.1l-0.2,0.3l-0.1,0.5L635.5,488.4L635.5,488.4 L635.5,488.4z\"},SM:{d:\"M1040.3,293.5l-0.7,0.1l-0.2-0.9l0.9-0.3L1040.3,293.5z\"},ST:{d:\"M1014.1,571.4l0.5-0.8v-0.5l-0.3-0.5h-0.4l-0.5,0.4l-0.3,0.4v0.3l0.1,0.7l0.1,0.3l0.3,0.2L1014.1,571.4 L1014.1,571.4z M1018.4,562.2l0.2-0.4v-0.2l-0.1-0.1l-0.1-0.1l-0.2,0.1l-0.3,0.5l0.1,0.2l0.2,0.2L1018.4,562.2L1018.4,562.2z\"},SA:{d:\"M1228.7,387l-10.2-0.5l-16.7-12.7l-8.5-4.5l-6.7-1.7l-0.9,1l-10.4,3.1l6.1,6.4l-1.7,1l-0.7,2.2l-4,0.8l-1.1,2.3 l-2.1,2l-6.1-1l-0.5,2.5v2.2l-0.6,3.5h2.7l3.2,4.4l3.7,5.1l2.5,4.7l1.7,1.5l1.7,3.3l-0.2,1.4l2.1,3.7l3,1.3l2.8,2.5l3.6,7v3.8 l0.9,4.4l4,6.1l2.5,1l4.1,4.4l1.9,5.2l3.2,5.3l3,2.3l0.6,2.5l1.8,1.9l0.9,2.8l2.3-2.1l-0.7-2.7l1.2-3.1l2.4,1.7l1.5-0.6l6.4-0.2 l1,0.7l5.4,0.6l2.1-0.3l1.6,2.1l2.5-1l3.5-6.7l5-2.9l15.7-2.4l16.1-6.4l2.6-12.7l-2.9-4.5l-1,1.3l-16.8-3.2l-2.6-6.4l-0.4-1.5 l-1.2-2.4l-1.5,0.4l-1.8-1.2l-1-1.6l-0.9-2.1l-1.7-1.8l-1-2.1l0.4-2.1l-0.6-2.7l-4-2.6l-1.2-2.3l-2.9-1.4l-2.7-5.5l-3.8,0.2 l-1.7-3.1L1228.7,387L1228.7,387z\"},SN:{d:\"M908.9,479.2l-3.6-4.4l-3.2-4.7l-3.7-1.7l-2.6-1.8h-3.1l-2.8,1.4l-2.7-0.5l-2,2l-1.3,3.3l-2.8,4.4l-2.5,1.2l2.7,2.3 l2.2,5l6.1-0.2l1.3-1.5l1.8-0.1l2.1,1.5l1.8,0.1l1.8-1.1l1.1,1.8l-2.4,1.5l-2.4-0.1l-2.4-1.4l-2.1,1.5h-1l-1.4,0.9l-5-0.1l0.8,4.9 l3-1.1l1.8,0.2l1.5-0.7l10.3,0.3l2.7,0.1l4,1.5l1.3-0.1l0.4-0.7l3,0.5l0.8-0.4l0.3-2l-0.4-2.4l-2.1-1.8l-1.1-3.7L908.9,479.2 L908.9,479.2z\"},RS:{d:\"M1084.8,285.2l-3.2-1.5l-0.8-1.9l-2.9-2.5l-3.2-0.2l-3.7,1.6l0,0l1.5,2.4l1.7,1.8l-1.7,2.3l0,0h1.8l-1,2.7l2.7,2.3 l-0.5,2.9l-1.2,0.3l1.5,1.1l0.8,0.8l1.8,0.7l2,1.2l-0.4,0.6l1.2-0.5l0.5-2l0.9-0.4l0.8,0.9l1,0.4l0.8,1l0.8,0.3l1.1,1.1h0.8 l-0.5,1.5l-0.5,0.7l0.2,0.5l1.7-0.4l2.4-0.1l0.7-0.9l-0.6-0.7l0.7-2l1.7-1.9l-2.8-2.6l-0.7-2.3l1.1-1.4l-1-1l1.1-1.1l-1.4-0.7 l-1.4,1.3l-3.1-1.8L1084.8,285.2L1084.8,285.2z\"},SC:{d:\"M1288.5,602l-0.5-0.8l-0.4,0.3l0.2,0.3l0.3,0.2l0.1,0.4l0.3,0.2V602L1288.5,602z\"},SL:{d:\"M919.4,518.7l-1.5,0.3v-2.3L917,515l0.2-1.8l-1.2-2.7l-1.5-2.3H910l-1.3,1.2l-1.5,0.2l-1,1.4l-0.7,1.7l-3,2.8 l0.7,4.7l0.9,2.3l2.9,3.5l4.1,2.5l1.5,0.5l1.3-2l0.3-1.9l2.6-3.4L919.4,518.7L919.4,518.7z\"},SG:{d:\"M1561,563.7l0.1-0.2l-0.2-0.2l-0.3-0.1l-0.5-0.2l-0.6,0.1l-0.3,0.6l0.9,0.4L1561,563.7L1561,563.7z\"},SX:{d:\"M627.1,457.2L627.1,457.2l0.2,0.2l0.3,0.1l0.1-0.1v-0.2H627.1z\"},SK:{d:\"M1087.4,260.9l-4.9-2.3l-3.4,0.8l-2.4-0.6l-2.8,1.3l-2.7-2.2l-1.9,0.9l-0.3-0.4h-1.5l-0.6,1.1l-1.1,0.3l-0.2,1.4 l-0.9,0.3l-0.1,0.6l-1.6,0.6l-2.2-0.1l-0.6,1.4l-0.3,0.8l0.7,2.1l2.6,1.6l1.9,0.7l4.1-0.8l0.3-1.2l1.9-0.2l2.3-1l0.6,0.4l2.2-0.7 l1-1.5l1.6-0.4l5.5,1.9l1-0.6l0.7-2.5L1087.4,260.9L1087.4,260.9z\"},SI:{d:\"M1059.4,277l-1.2-2.1l-0.8-0.1l-0.9,1.1l-4.3,0.1l-2.4,1.4l-4.2-0.4l-0.3,3l1.4,2.7l-1.1,0.5l3.5,0.2l0.8-1l1.8,1 l2,0.1l-0.2-1.7l1.7-0.6l0.3-2.5L1059.4,277L1059.4,277z\"},SB:{d:\"M1909.1,646.4l-0.2-0.2l-0.1-0.4h-0.3l-0.3,0.1l0.2,0.6h0.2L1909.1,646.4L1909.1,646.4z M1873.5,647.2l-0.1-0.2 l-0.5-0.4l-1.9-1.3l-0.4-0.1l-0.1,0.1l-0.1,0.3l0.1,0.2l0.5,0.1v0.1l0.3,0.2l0.7,0.2l0.4,0.3l0.1,0.5l0.3,0.1l0.3,0.1L1873.5,647.2 L1873.5,647.2z M1905.5,640.6L1905.5,640.6l0.2-0.4l-0.2-0.1l-0.5-0.1l-0.7,0.1l-0.3,0.2l-0.2,0.3h-0.2v0.2l0.1,0.4l0.2-0.1l0.2,0.1 l0.5-0.5h0.3h0.1L1905.5,640.6L1905.5,640.6z M1881.1,638.3l-0.1-0.2l-0.2-0.1l-0.9-0.7l-0.5-0.2h-0.5l-0.1,0.5v0.3h0.6l0.4,0.2v0.6 l0.2,0.2v0.5l1.2,0.9l0.7,0.4l0.7,0.1l0.4,0.2l0.5-0.1l0.5,0.2l0.4-0.1l-0.4-0.3v-0.4l-0.5-1.3l-0.3-0.3l-0.5,0.1l-0.5-0.2h-0.4 L1881.1,638.3L1881.1,638.3z M1880.7,633.4l-0.6-1.6l-0.2-0.1l0.1,0.6l0.1,0.4l-0.1,0.5l-0.1,0.6l0.2,0.2l0.2-0.2l0.4,0.5v-0.2 V633.4z M1870.9,631.2l-0.3-0.1l-0.4,0.3l-0.1,0.3l-0.1,0.7v0.4l0.3,0.7l0.3,0.5l0.3,0.3l0.2,0.2l0.9,0.1l1.7,0.1l0.9,0.4l0.9,0.2 l0.4-0.1l0.5-0.2l0.1-0.1l-0.1-0.6l-0.2-0.3l-0.4-0.2l-0.2-0.6l-0.5-0.4l-0.9-0.7h-1.6l-0.6,0.1L1870.9,631.2L1870.9,631.2z M1873.5,629.4l-0.5,0.2v0.3l0.4,0.1l0.4,0.2l0.1,0.3l0,0l0.2-0.1l0.4,0.2l0.2-0.3l-0.4-0.5l-0.4-0.3h-0.1L1873.5,629.4 L1873.5,629.4z M1867.9,630.2l0.3-0.2v-0.4h-0.3l-0.1-0.2h-0.2l-0.3,0.2l-0.2,0.3l0.1,0.2h0.4L1867.9,630.2L1867.9,630.2 L1867.9,630.2z M1859.5,627.9l-0.1-0.2l-0.3-0.2h-0.2l-0.5,0.1l0.1,0.1l0.6,0.3l0.3,0.1L1859.5,627.9L1859.5,627.9z M1862.6,628.3 l0.3-0.2l-0.1-0.2l-0.1-0.5l-0.4,0.7l0.1,0.2H1862.6z M1862.1,627.4v-0.2V627l-0.2-0.1l0.4-0.3l-0.1-0.1l-0.6-0.2l-0.2,0.2l-0.2,0.1 l-0.1,0.1l-0.1,0.1l-0.1,0.5l0.2,0.4l0.4,0.2L1862.1,627.4L1862.1,627.4z M1858.1,627.6l-0.3-0.4l0.1-0.5l0.2-0.1l0.2-0.5l-0.1-0.4 l-0.2,0.1l-0.7,0.6l-0.1,0.3l0.6,0.8L1858.1,627.6L1858.1,627.6L1858.1,627.6z M1871.1,626.3l-0.2-0.4v-0.2l-0.3-0.2l-0.2,0.1 l-0.1,0.3l0.1,0.2l0.4,0.3L1871.1,626.3L1871.1,626.3z M1877.1,625.1h-0.2l-0.1,0.1h-0.2h-0.3l-0.1,0.2l0.6,1.1l-0.3,0.5l0.4,2.2 l0.4,1.2l0.8,0.8v0.2l0.8,0.5l0.6,1.3l0.2,0.1l0.1-0.2v-0.6l-0.5-1.1l0.1-0.8l-0.2-0.3V630l-0.2-0.8l-0.6-0.7l-0.3-0.1l-0.2-0.3 l0.2-0.6l0.2-0.2l0.1-0.3L1877.1,625.1L1877.1,625.1z M1860.5,624.6l-0.6-0.2l-0.2-0.3v-1l-0.6-0.3l-0.3,0.2l-0.6,0.7l-0.2,0.4 l-0.5,0.3l-0.1,0.3v0.4l0.4,0.1l0.3-0.4l0.9-0.1l0.3,0.1v0.4l0.1,0.7l0.3,0.3l0.5,0.2l0.4,0.6l0.1-0.3h0.2l0.2-0.4l-0.3-1.2 L1860.5,624.6L1860.5,624.6z M1854,624.2l0.1-0.5l-0.1-0.9l-0.2,0.1v0.2l-0.1,0.4L1854,624.2L1854,624.2z M1857.2,623.8l0.2-0.2 v-0.4v-0.5l-0.2-0.4l-0.2-0.2l-0.5,0.1l-0.4,0.5v0.5l0.4,0.6L1857.2,623.8L1857.2,623.8L1857.2,623.8z M1854.6,622.6l0.2-0.3 l0.5-0.7l0.1-0.3l-0.5-0.2l-0.4-0.5l-0.4-0.2l-0.3,0.4v0.4l0.5,0.6l-0.1,0.4l0.2,0.1l0.1,0.4L1854.6,622.6L1854.6,622.6z M1872.1,626.5l-0.1-0.5l-0.3-0.4l0.4-0.5l-2.2-1.9l-0.3-0.2l-0.4-0.1l-0.5-0.4l-0.5-0.1l-0.5-0.4l-0.2-0.3l-0.6-0.4l-0.6-0.8 l-1.5-0.3l0.1,0.2l0.4,0.4l0.1,0.7l0.5,0.4l0.5,0.6l0.2,0.1l0.2,0.2l0.4,0.5l0.8,0.4l0.8,0.6l0.3,0.1l0.3,0.3l1.5,0.7l0.5,0.7 L1872.1,626.5L1872.1,626.5L1872.1,626.5z M1850.3,617.3l0.2-0.3l-0.7-0.5l-0.2,0.3l-0.2,0.5l0.4,0.2L1850.3,617.3L1850.3,617.3z M1859.4,618.8L1859.4,618.8l-0.4-0.1l-0.4-0.2l-0.7-0.8l-0.2-0.3l-0.2-1l-0.4-0.4l-1.4-0.8l-0.8-0.8l-0.7-0.2l-0.2,0.2v0.5l0.2,0.3 l1,0.9l1.1,1.7l1,1l0.8,0.1h0.4v0.1l0.1,0.2l0.5,0.2l0.5-0.4L1859.4,618.8L1859.4,618.8z\"},SO:{d:\"M1223.4,505.7l-2.6-2.7l-1.2-2.6l-1.8-1.2l-2,3.4l-1.1,2.3l2.2,3.5l2.1,3.1l2.2,2.2l18.5,7.6l4.8-0.1l-15.4,19.1 l-7.4,0.3l-4.9,4.5l-3.6,0.1l-1.5,2l-4.8,7.2l0.2,23.2l3.3,5.3l1.3-1.5l1.3-3.4l6.1-7.7l5.3-4.8l8.3-6.4l5.6-5.1l6.4-8.7l4.7-7.1 l4.6-9.3l3.2-8.2l2.5-7.1l1.3-6.8l1.1-2.3l-0.2-3.4l0.4-3.7l-0.2-1.7h-2.1l-2.6,2.2l-2.9,0.6l-2.5,0.9l-1.8,0.2l0,0l-3.2,0.2 l-1.9,1.1l-2.8,0.5l-4.8,1.9l-6.1,0.8l-5.2,1.6L1223.4,505.7L1223.4,505.7z\"},ZA:{d:\"M1148.2,713.7l-2.9-0.6l-1.9,0.8l-2.6-1.1l-2.2-0.1l-8,4.7l-5.2,4.7l-2,4.3l-1.7,2.4l-3,0.5l-1.2,3l-0.6,2l-3.6,1.5 l-4.4-0.3l-2.5-1.8l-2.3-0.8l-2.7,1.5l-1.5,3.1l-2.7,1.9l-2.8,2.8l-4,0.7l-1.1-2.3l0.7-3.8l-3-6.1l-1.4-1l-1.1,23.6l-5,3.2l-2.9,0.5 l-3.3-1.2l-2.4-0.5l-0.8-2.7l-2.1-1.8l-2.7,3.2l3.5,8.2v0.1l2.5,5.3l3.2,6l-0.2,4.8l-1.7,1.2l1.4,4.2l-0.2,3.8l0.6,1.7l0.3-0.9 l2.1,2.9l1.8,0.1l2.1,2.3l2.4-0.2l3.5-2.4l4.6-1l5.6-2.5l2.2,0.3l3.3-0.8l5.7,1.2l2.7-1.2l3.2,1l0.8-1.8l2.7-0.3l5.8-2.5l4.3-2.9 l4.1-3.8l6.7-6.5l3.4-4.6l1.8-3.2l2.5-3.3l1.2-0.9l3.9-3.2l1.6-2.9l1.1-5.2l1.7-4.7h-4.1l-1.3,2.8l-3.3,0.7l-3-3.5l0.1-2.2l1.6-2.4 l0.7-1.8l1.6-0.5l2.7,1.2l-0.4-2.3l1.4-7.1l-1.1-4.5L1148.2,713.7L1148.2,713.7z M1128.1,766.5l-2,0.6l-3.7-4.9l3.2-4l3.1-2.5 l2.6-1.3l2.3,2l1.7,1.9l-1.9,3.1l-1.1,2.1l-3.1,1L1128.1,766.5L1128.1,766.5z\"},KR:{d:\"M1637.3,331.7l6.2,5.5l-3.4,1.1l5.2,6.8l1.1,4.8l2.1,3.5l4.5-0.5l3.2-2.7l4.2-1.2l0.5-3.6l-3.4-7.5l-3.3-4.2 l-8.2-7.6l0.1,1.6l-2.1,0.4l-3.5,0.3l-0.7,2.9l-2.4-0.2L1637.3,331.7L1637.3,331.7z\"},SS:{d:\"M1166,508.7l-0.7-2.2l-2.9-2.5l-0.8-4.6l0.5-4.7l-2.6-0.5l-0.3,1.5l-3.4,0.3l1.4,1.8l0.6,3.9l-3,3.5l-2.7,4.5 l-2.8,0.7l-4.8-3.7l-2.1,1.3l-0.5,1.9l-2.9,1.2l-0.2,1.3h-5.5l-0.8-1.3l-4.1-0.3l-2,1.1l-1.5-0.5l-3-3.7l-1-1.8l-4,0.9l-1.5,2.9 l-1.3,5.7l-1.9,1.2l-1.7,0.7l3.8,2.5l3.1,2.6l0.1,2l3.8,3.4l2.4,2.7l1.5,3.8l4.2,2.5l0.9,2.1l3.5,5.2l2.5,0.8l1.5-1.1l2.6,0.4 l3.1-1.3l1.4,2.7l5,4.2l0,0l2.3-1.7l3.5,1.4l4.5-1.5l4,0.1l3.4-3l3.4-3.8l3.8-4.2l-3.5-6.9l-2.6-1.5l-1-2.5l-2.9-3.1l-3.4-0.5 l1.8-3.6l3-0.1l0.8-2l-0.2-5l-0.8-0.1L1166,508.7L1166,508.7z\"},ES:{d:\"M888.3,390.4l1-0.1v0.3l-1.2,1l-0.5,1.4l-0.4,0.6l-0.3,0.2l-0.6,0.2l-0.7-0.9l-0.4-1l-0.2-0.3l0.4-0.2h0.5l1-0.1 l0.3-0.1L888.3,390.4z M883.3,392.7h-0.2l-0.2,0.2l-0.2,0.4l0.3,0.5l0.2,0.1h0.2l0.5-0.4v-0.2l-0.1-0.3L883.3,392.7z M880.6,389 l-0.3-0.4h-0.7l-0.4,0.6l0.6,1.2l0.1,0.5h0.1l0.5-0.5l0.1-0.3l-0.1-0.5l0.2-0.2L880.6,389z M878.7,395.5h-0.6l0.1,0.2l0.1,0.2 l0.7,0.4l0.6-1.1l-0.2-0.2L878.7,395.5z M901.1,389.3l-0.3,0.2l-0.1,0.6l-0.7,1.3l-0.5,1.2l-0.7,0.6l-0.7,0.2l0.1,0.1l0.7,0.1 l0.8-0.7l1.5-0.5l0.3-1l0.3-1.1v-0.7l-0.3-0.3L901.1,389.3L901.1,389.3z M893.1,393.1L893.1,393.1L893.1,393.1h-0.2l-1.3-0.1 l-0.2,0.6l-0.5,0.4v0.7l0.5,0.7l0.3,0.1l0.5,0.1l0.7-0.4l0.2-0.4l0.1-0.8l-0.1-0.4V393.1z M994.3,318.7l-0.3-0.1l-0.5,0.2l-0.5-0.2 l0.1-0.3l0.1-0.2l0.1-0.1l-0.2-0.2v-0.1l0.2-0.2l-0.2-0.1l-1.3,0.4l-0.7,0.4l-2.1,1.5v0.3l0.1,0.2h0.4l0.2,0.4l0.4-0.4l0.3-0.1 l0.3,0.1l0.3,0.2l0.1,0.6l0.1,0.2l0.6,0.1l0.9,0.4l0.4-0.2l0.5-0.3l0.2-0.6l0.3-0.5l0.3-0.5l0.3-0.4l-0.1-0.4L994.3,318.7z M998.6,317.1l-0.9-0.3l-1,0.1l-0.1,0.1v0.4l0.1,0.1l0.6,0.1l1.6,0.7h0.1l0.1-0.4v-0.1L998.6,317.1z M992,301.9l-6,0.8l-1.3-0.7 l-0.2,0.1h-0.4l-0.1-0.2v-0.2l-3.7-1.8l-1.9,1.3l-9.4-2.8l-2-2.4l-8.2-0.2l-4.2,0.3l-5.4-1h-6.8l-6.2-1.1l-7.4,4.5l2,2.6l-0.4,4.4 l1.9-1.6l2.1-0.9l1.2,3.1h3l0.9-0.8l3,0.2l1.3,3.1l-2.4,1.7l-0.2,4.9l-0.9,0.9l-0.3,3l-2.2,0.5l2,3.8l-1.6,4.3l1.8,1.9l-0.8,1.7 l-2,2.5l0.4,2.1l4.8,1l1.4,3.7l2,2.2l2.5,0.6l2.1-2.5l3.3-2.3l5,0.1h6.7l3.8-5l3.9-1.3l1.2-4.2l3-2.9l-2-3.7l2-5.1l3.1-3.5l0.5-2.1 l6.6-1.3l4.8-4.2L992,301.9z M903.7,386.3l-0.2,0.4l-0.6,0.2l-0.8,0.4l-0.2,0.3l-0.2,0.9l0.4,0.1l0.3-0.4l0.9-0.3l0.5-0.3l0.1-0.9 l0.2-0.3l-0.2-0.3L903.7,386.3z M983.7,323.1l-0.2,0.3v0.3l-0.3,0.1l-0.1,0.4l0.1,0.2l0.8,0.1l0.2-0.4h0.3l0.6-0.7v-0.3l-0.3-0.2 L983.7,323.1z M984.2,325.1l-0.1,0.2l-0.1,0.2v0.2h0.5l0.4,0.1l0.1-0.1v-0.2h-0.5L984.2,325.1z\"},LK:{d:\"M1432.2,532.7l2.3-1.8l0.6-6.6l-3-6.6l-2.9-4.5l-4.1-3.5l-1.9,10.3l1.4,9.1l2.8,5.1L1432.2,532.7L1432.2,532.7z\"},SD:{d:\"M1180.8,468.5l0.4-4.2l1.6-2l4-1l2.6-3.6l-3.1-2.4l-2.2-1.6l-2.5-7.6l-1.1-6.5l1.1-1.2l-2.1-6.2h-21.8h-21.4h-22.1 l0.5,12.7h-6.3v2.7l1.1,25.2l-4.8-0.4l-2.4,4.7l-1.4,3.9l1.2,1.5l-1.8,1.9l0.7,2.7l-1.4,2.6l-0.5,2.4l2-0.4l1.2,2.5l0.1,3.7l2.1,1.8 v1.6l0.7,2.7l3.3,4v2.6l-0.8,2.6l0.3,2l2,1.8l0.5,0.3l1.7-0.7l1.9-1.2l1.3-5.7l1.5-2.9l4-0.9l1,1.8l3,3.7l1.5,0.5l2-1.1l4.1,0.3 l0.8,1.3h5.5l0.2-1.3l2.9-1.2l0.5-1.9l2.1-1.3l4.8,3.7l2.8-0.7l2.7-4.5l3-3.5l-0.6-3.9l-1.4-1.8l3.4-0.3l0.3-1.5l2.6,0.5l-0.5,4.7 l0.8,4.6l2.9,2.5l0.7,2.2v3.1l0.8,0.1v-0.7l1.4-6.7l2.6-1.8l0.5-2.6l2.3-4.8l3.2-3.2l2.1-6.2l0.7-5.5l-0.7-2.5L1180.8,468.5 L1180.8,468.5z\"},SR:{d:\"M668,533.8l-4.6,0.5l-0.6,1.1l-6.7-1.2l-1,5.7l-3.5,1.6l0.3,1.5l-1.1,3.3l2.4,4.6l1.8,0.1l0.7,3.5l3.3,5.6l3.1,0.5 l0.5-1.3l-0.9-1.3l0.5-1.8l2.3,0.6l2.7-0.7l3.2,1.4l1.4-2.7l0.6-2.9l1-2.8l-2.1-3.7l-0.4-4.4l3.1-5.5L668,533.8L668,533.8z\"},SZ:{d:\"M1150.5,736.6l-2.7-1.2l-1.6,0.5l-0.7,1.8l-1.6,2.4l-0.1,2.2l3,3.5l3.3-0.7l1.3-2.8l-0.3-2.8L1150.5,736.6 L1150.5,736.6z\"},SE:{d:\"M1077.7,161.1l-1.9-2.2l-1.7-8.4l-7.2-3.7l-5.9-2.7l-2.5,0.3v3.5l-7.9-0.9l-0.6,3.1l-4-0.1l-2.2,3.9l-3.4,6.1 l-5.7,7.9l1.8,1.9l-1.3,2.2l-4.3-0.1l-2.3,5.3l1,7.6l3.1,2.9l-0.9,6.9l-3.4,4l-1.7,3.3l4.2,8.4l4.4,6.7l2,5.7l5.3-0.3l2.2-4.7 l5.7,0.5l2-5.5l0.6-10l4.6-1.3l3.3-6.6l-4.8-3.3l-3.6-4l2.1-8.1l7.7-4.9l6.1-4.5l-1.2-3.5l3.4-3.9L1077.7,161.1L1077.7,161.1z\"},CH:{d:\"M1024.3,270.6l-5.4-1.9l-1,1.4h-4.2l-1.3,1l-2.3-0.6l0.2,1.6l-3.5,3.5v2.8l2.4-0.9l1.8,2.7l2.2,1.3l2.4-0.3l2.7-2.1 l0.9,1l2.4-0.2l0.9-2.5l3.8,0.8l2.1-1.1l0.3-2.5l-2.6-0.2l-2.3-1.1l0.7-1.6L1024.3,270.6L1024.3,270.6z\"},SY:{d:\"M1183.5,359.9l11-6.7l0.9-7.8l-1.2-4.7l2.7-1.6l2.1-4.1l-5.9,1.1l-2.8-0.2l-5.7,2.5h-4.3l-3-1.2l-5.5,1.8l-1.9-1.3 l0.1,3.6l-1.2,1.5l-1.2,1.4l-1,2.6l1.1,5l2.4,0.3l1.2,2.5l-2.6,2.4l-0.9,3.5l0.3,2.6l-0.6,1h0.1l6.3,2.5L1183.5,359.9L1183.5,359.9z \"},TW:{d:\"M1642.3,427.2l1.2-10.2l0.1-3.9l-2.9-1.9l-3.3,4.8l-1.9,6.3l1.5,4.7l4,5.4L1642.3,427.2L1642.3,427.2z\"},TJ:{d:\"M1344.1,315.7l-2.1,0.2l-1.3-1.8l0.2-2.9l-6.4,1.5l-0.5,4l-1.5,3.5l-4.4-0.3l-0.6,2.8l4.2,1.6l2.4,4.7l-1.3,6.6 l1.8,0.8l3.3-2.1l2.1,1.3l0.9-3l3.2,0.1l0.6-0.9l-0.2-2.6l1.7-2.3l3.2,1.5v2l1.6,0.3l1,5.4l2.6,2.1l1.5-1.3l2.1-0.7l2.5-2.9l3.8,0.5 h5.4l-1.8-3.7l-0.6-2.5l-3.5-1.4l-1.6,0.6l-3-5.9l-9.5,0.9l-7.1-2l-5.4,0.5l-0.6-3.7l5.9,1.1L1344.1,315.7L1344.1,315.7z\"},TZ:{d:\"M1149.6,578.6l-2,0.8l2.3,3.6l-0.4,3.7l-1.6,0.8l0,0l0.3,2.5l1.2,1.5v2l-1.4,1.4l-2.2,3.3l-2.1,2.3l-0.6,0.1 l-0.3,2.7l1.1,0.9l-0.2,2.7l1,2.6l-1.3,2.4l4.5,4.3l0.3,3.9l2.7,6.5l0,0l0.3,0.2l2.2,1.1l3.5,1.1l3.2,1.9l5.4,1.2l1.1,1.7l0,0 l0.4-1.2l2.8,3.4l0.3,6.7l1.8,2.4v0.1l2.1-0.3l6.7,1.8l1.4-0.8l3.9-0.1l2.1-1.9l3.3,0.1l6.2-2.5l4.6-3.7l0,0l-2-1.4l-2.2-6.3 l-1.8-3.9l0.4-3.1l-0.3-1.9l1.7-3.9l-0.2-1.6l-3.5-2.3l-0.3-3.6l2.8-7.9l-8-6.3l-0.4-3.7l-20.2-13l0,0l-2.8,2.8l-1.9,2.9l2.2,2.2 l-3.2,1.6l-0.7-0.8l-3.2,0.4l-2.5,1.4l-1.6-2.4l1.1-4.5l0.2-3.8l0,0l0,0L1149.6,578.6L1149.6,578.6z\"},TH:{d:\"M1562.7,481.4l1.5-2.9l-0.5-5.4l-5.2-5.5l-1.3-6.3l-4.9-5.2l-4.3-0.4l-0.8,2.2l-3.2,0.2l-1.8-1.2l-5.3,3.8l-1-5.7 l0.4-6.7l-3.8-0.3l-0.9-3.8l-2.6-1.9l-3,1.4l-2.8,2.8l-3.9,0.3l-1.5,6.9l-2.2,1.1l3.5,5.6l4.1,4.6l2.9,4.2l-1.4,5.6l-1.7,1.1 l1.7,3.2l4.2,5.1l1,3.5l0.2,3l2.8,5.8l-2.6,5.9l-2.2,6.6l-1.3,6.1l-0.3,3.9l1.2,3.6l0.7-3.8l2.9,3.1l3.2,3.5l1.1,3.2l2.4,2.4 l0.9-1.1l4.7,2.8l0.6,3.3l3.7-0.8l1.7-2.6l-3.1-3.3l-3.4-0.8l-3.3-3.6l-1.4-5.5l-2.6-5.8l-3.7-0.2l-0.7-4.6l1.4-5.6l2.2-9.3l-0.2-7 l4.9-0.1l-0.3,5l4.7-0.1l5.3,2.9l-2.1-7.7l3-5.2l7.1-1.3L1562.7,481.4L1562.7,481.4z\"},TL:{d:\"M1676.8,631.9l4.9-1.8l6-2.8l2.2-1.7l-2-0.8l-1.8,0.8l-4,0.2l-4.9,1.4l-0.8,1.5l0.5,1.3L1676.8,631.9L1676.8,631.9z \"},TG:{d:\"M981.7,502.2l-4.9-0.1l-0.4,1.9l2.4,3.3l-0.1,4.6l0.6,5.1l1.4,2.3l-1.2,5.7l0.4,3.2l1.5,4l1.2,2.2l4.6-1.3l-1.4-4.4 l0.2-14.6l-1.1-1.3l-0.2-3.1l-2-2.3l-1.7-1.9L981.7,502.2L981.7,502.2z\"},TO:{d:\"M13.3,707.7L13.3,707.7l-0.2,0.3v0.2l0.4,0.4L13.3,707.7z M11.7,706.8h-0.2H11.7l-0.4-0.3h-0.4l-0.2-0.1v-0.2 l-0.2,0.3l0.2,0.3l0.9,0.4l0.3,0.2l0.2-0.6v-0.2l-0.3,0.1v0.1H11.7z M14.2,690.8l0.1-0.2v-0.2l-0.3-0.1h-0.1l-0.3,0.5l0.1,0.1 l0.3,0.2h0.1L14.2,690.8z\"},TT:{d:\"M635.4,507.7l0.1-0.2v-0.6l0.2-0.4l-0.2-0.4l-0.1-0.6l0.1-0.5v-0.7l0.2-0.3l0.5-0.8h-0.9l-0.6,0.2l-1.1,0.1 l-0.5,0.2l-0.7,0.1L632,504l0.1,0.1l0.5,0.2l0.2,0.2l0.1,0.2l0.1,0.4l-0.3,1.7l-0.1,0.1L632,507l-0.2,0.3l-1.4,0.8l0.8-0.1l0.9,0.1 l2.4-0.1L635.4,507.7L635.4,507.7z M637.2,501l1.2-0.5l0.1-0.4h-0.2l-0.8,0.3l-0.6,0.5v0.2L637.2,501z\"},TN:{d:\"M1038,361.4l-2-1l-1.5-3l-2.8-0.1l-1.1-3.5l3.4-3.2l0.5-5.6l-1.9-1.6l-0.1-3l2.5-3.2l-0.4-1.3l-4.4,2.4l0.1-3.3 l-3.7-0.7l-5.6,2.6l-1,3.3l1,6.2l-1.1,5.3l-3.2,3.6l0.6,4.8l4.5,3.8v1.5l3.4,2.6l2.6,11.3l2.6-1.4l0.4-2.7l-0.7-2.6l3.7-2.5l1.5-2 l2.6-1.8L1038,361.4L1038,361.4z\"},TR:{d:\"M1166.6,308.9l-9.7-4.4l-8.5,0.2l-5.7,1.7l-5.6,4l-9.9-0.8l-1.6,4.8l-7.9,0.2l-5.1,6.1l3.6,3l-2,5l4.2,3.6l3.7,6.4 l5.8-0.1l5.4,3.5l3.6-0.8l0.9-2.7l5.7,0.2l4.6,3.5l8-0.7l3.1-3.7l4.6,1.5l3.2-0.6l-1.7,2.4l2.3,3l1.2-1.4l1.2-1.5l-0.1-3.6l1.9,1.3 l5.5-1.8l3,1.2h4.3l5.7-2.5l2.8,0.2l5.9-1.1l2.1-1l6.2,0.9l2.1,1.6l2.3-1.1l0,0l-3.7-5.2l0.7-2l-2.9-7.3l3.3-1.8l-2.4-1.9l-4.2-1.5 v-3.1l-1.3-2.2l-5.6-3l-5.4,0.3l-5.5,3.2l-4.5-0.6l-5.8,1L1166.6,308.9L1166.6,308.9z M1117,312.9l2-1.9l6.1-0.4l0.7-1.5l-4.7-2 l-0.9-2.4l-4.5-0.8l-5,2l2.7,1.6l-1.2,3.9l-1.1,0.7l0.1,1.3l1.9,2.9L1117,312.9L1117,312.9z\"},TM:{d:\"M1325.6,334.2l-0.8-4l-7.7-2.7l-6.2-3.2l-4.2-3l-7-4.4l-4.3-6.4l-2-1.2l-5.5,0.3l-2.3-1.3l-1.9-4.9l-7.8-3.3 l-3.3,3.6l-3.8,2.2l1.6,3.1l-5.8,0.1l-2.5,0.3l-4.9-4.9l-3.8-1.7l-5.5,1.3l-1.8,2l2.5,4l-0.5-4.5l3.7-1.6l2.4,3.6l4.6,3.7l-4,2 l-5.3-1.5l0.1,5.2l3.5,0.4l-0.4,4.4l4.5,2.1l0.7,6.8l1.8,4.5l4.4-1.2l3-3.7l3.5,0.2l2.1-1.2l3.8,0.6l6.5,3.3l4.3,0.7l7.3,5.7 l3.9,0.2l1.6,5.5l5.9,2.4l3.9-0.8l0.4-3l4-0.9l2.5-2l-0.1-5.2l4.1-1.2l0.3-2.3l2.9,1.7L1325.6,334.2L1325.6,334.2z\"},TC:{d:\"M578.7,433.1l-0.1,0.4v0.2l0.2,0.1l0.6-0.1l0.1-0.1l0.2-0.1v-0.1l-0.4,0.1L578.7,433.1z M582.3,433.7l0.2-0.2 l-0.2-0.2l-0.7-0.2l-0.2,0.1v0.3h0.6L582.3,433.7L582.3,433.7L582.3,433.7z M581.2,433.2l-0.1-0.1l-0.1-0.6h-0.5v0.2l0.1,0.2h0.1 l0.1,0.2l0.3,0.2L581.2,433.2L581.2,433.2z\"},UG:{d:\"M1167.6,545.1l-3.4,3l-4-0.1l-4.5,1.5l-3.5-1.4l-2.3,1.7l0,0l-0.3,7.5l2.3,0.8l-1.8,2.3l-2.2,1.7l-2.1,3.3l-1.2,3 l-0.3,5.1l-1.3,2.4l-0.1,4.8l1.4,0.6l3.3-1.9l2-0.8l6.2,0.1l0,0l-0.3-2.5l2.6-3.7l3.5-0.9l2.4-1.5l2.9,1.2l0.3,0.5v-0.3l1.6-2.6 l2.7-4.2l2.1-4.7l-2.6-7.3l-0.7-3.2L1167.6,545.1L1167.6,545.1z\"},UA:{d:\"M1138.5,241l-4.8,0.5l-1.5-0.3l-1,1.4l-1.8-0.2l0,0l-4.1,0.3l-1.2,1.4l0.2,3.1l-2-0.6l-4.3,0.3l-1.5-1.5l-1.6,1.1 l-2-0.9l-3.8-0.1l-5.6-1.5l-5-0.5l-3.7,0.2l-2.4,1.6l-2.2,0.3l3.1,5.3l-0.3,1.8l-2.3,0.7l-3.8,5.1l1.6,2.8l-1.1-0.4l-1.1,1.7 l-0.7,2.5l2.9,1.7l0.6,1.6l1.9-1.3l3.2,0.7h3.2l2.4,1.5l1.6-0.9l3.6-0.6l1-1.5h2.1l1.1-0.9l3.2-0.6l3.9,1.9l2,0.3l2.5,1.6v2.1 l1.9,1.1l1.1,2.6l2,1.5l-0.2,1l1,0.6l-1.2,0.5l-3-0.2l-0.6-0.9l-1,0.5l0.5,1.1l-1.1,2l-0.5,2.1l-1.2,0.7l2.4,1.1l2.2-1l2.4,1.1 l3.3-4.6l1.3-3.4l4.5-0.8l0.7,2.4l8,1.5l1.7,1.4l-4.5,2.1l-0.7,1.2l5.8,1.8l-0.6,2.9l3,1.3l6.3-3.6l5.3-1.1l0.6-2.2l-5.1,0.4 l-2.7-1.5l-1-3.9l3.9-2.3l4.6-0.3l3-2l3.9-0.5l-0.4-2.8l2.2-1.7l4.7-0.5l0.3-2.1l-1.8-3.4l1.3-3.2l-0.4-1.9l-7.6-2l-2.9,0.1 l-3.6-2.9l-3.5,1l-6.6-2.2l-0.2-1.2l-2.2-2.7l-4-0.2l-0.7-1.9l0.9-1.3L1138.5,241L1138.5,241z\"},AE:{d:\"M1283.9,408.6l-1.3-2.2l-3,3.9l-3.7,4.1l-3.3,4.3l-3.3-0.2l-4.6-0.2l-4.2,1l-0.3-1.7l-1,0.3l0.4,1.5l2.6,6.4 l16.8,3.2l1-1.3l-0.1-2.6l1.4-2.6l-0.3-2.6l2.4-1.3l-1.1-0.8l0.1-4.2h2.8L1283.9,408.6L1283.9,408.6z\"},GB:{d:\"M950,227.5l-4.9-3.7l-3.9,0.3l0.8,3.2l-1.1,3.2l2.9-0.1l3.5,1.3L950,227.5z M963,203.2l-5.5,0.5l-3.6-0.4l-3.7,4.8 l-1.9,6.1l2.2,3l0.1,5.8l2.6-2.8l1.4,1.6l-1.7,2.7l1,1.6l5.7,1.1h0.1l3.1,3.8l-0.8,3.5l0,0l-7.1-0.6l-1,4l2.6,3.3l-5.1,1.9l1.3,2.4 l7.5,1l0,0l-4.3,1.3l-7.3,6.5l2.5,1.2l3.5-2.3l4.5,0.7l3.3-2.9l2.2,1.2l8.3-1.7l6.5,0.1l4.3-3.3l-1.9-3.1l2.4-1.8l0.5-3.9l-5.8-1.2 l-1.3-2.3l-2.9-6.9l-3.2-1l-4.1-7.1l-0.4-0.6l-4.8-0.4l4.2-5.3l1.3-4.9h-5l-4.7,0.8L963,203.2L963,203.2z\"},US:{d:\"M116.7,450.7l2-0.9l2.5-1.4l0.2-0.4l-0.9-2.2l-0.7-0.8l-0.8-0.6l-1.9-1.1l-0.4-0.1l-0.4,0.6v1.3l-1.2,1l-0.4,0.7 l0.4,2.3l-0.6,1.8l1.2,0.9L116.7,450.7L116.7,450.7z M116.1,440.8l0.6-0.7l-1.2-1l-1.8-0.6L113,439v0.4l0.5,0.5l0.6,1.4L116.1,440.8 L116.1,440.8z M113.1,437.4l-2.6-0.2l-0.6,0.7l2.9,0.2L113.1,437.4z M108.4,436.5l-1.1-2.1L107,434l-1.7,0.9l0.1,0.2l0.4,1.5 l1.8,0.2l0.4,0.1L108.4,436.5L108.4,436.5z M100.1,432.3l0.3-1.5l-1.3-0.1l-1,0.6l-0.4,0.5l1.6,1.1L100.1,432.3z M512.2,259.1h-1.6 l-1.3,2.4h-10.1h-16.8h-16.7h-14.8h-14.7h-14.5h-15h-4.8h-14.6h-13.9l-1.6,5.1l-2.4,5.1l-2.3,1.6l1.1-5.9l-5.8-2.1l-1.4,1.2 l-0.4,2.9l-1.8,5.4l-4.2,8.3l-4,5.6l-4,5.6l-5.4,5.8l-1.1,4.7l-2.8,5.3l-3.9,5.2l1,3.4l-1.9,5.2l1.5,5.4l1.3,2.2l-0.8,1.5l0.4,9 l2.5,6.5l-0.8,3.5l1,1l4.6,0.7l1.3,1.7l2.8,0.3l-0.1,1.9l2.2,0.7l2.1,3.7l-0.3,3.2l6.3-0.5l7-0.7l-1,1.3l7.1,3.1l10.7,4.4H391h4.3 l0.8-2.6h9.3l1.3,2.2l2.1,2l2.4,2.8l0.8,3.3l0.4,3.5l2.2,1.9l4,1.9l4.8-5l4.4-0.1l3.1,2.5l1.6,4.4l1,3.7l2.4,3.6l0.2,4.5l0.8,3 l3.9,2l3.6,1.4l2.1-0.2l-0.6-2.2l0.4-3.1l1-4.4l1.9-2.8l3.7-3.1l6-2.7l6.1-4.7l4.9-1.5l3.5-0.4l3.5,1.4l4.9-0.8l3.3,3.4l3.8,0.2 l2.4-1.2l1.7,0.9l1.3-0.8l-0.9-1.3l0.7-2.5l-0.5-1.7l2.4-1l4.2-0.4l4.7,0.7l6.2-0.8l3,1.5l2,3l0.9,0.3l6.1-2.9l1.9,1l3,5.3l0.8,3.5 l-2,4.2l0.4,2.5l1.6,4.9l2,5.5l1.8,1.4l0.4,2.8l2.6,0.8l1.7-0.8l2-3.9l0.7-2.5l0.9-4.3l-1.2-7.4l0.5-2.7l-1.5-4.5l-0.7-5.4l0.1-4.4 l1.8-4.5l3.5-3.8l3.7-3l6.9-4.1l1.3-2.2l3.3-2.3l2.8-0.4l4.4-3.8l6-1.9l4.6-4.8l0.9-6.5l0.1-2.2l-1.4-0.4l1.5-6.2l-3-2.1l3.2,1v-4.1 l1.9-2.7l-1,5.3l2,2.5l-2.9,4.4l0.4,0.2l4.4-5.1l2.4-2.5l0.6-2.5l-0.9-1.1l-0.1-3.5l1.2,1.6l1.1,0.4l-0.1,1.6l5.2-4.9l2.5-4.5 l-1.4-0.3l2.1-1.8l-0.4,0.8h3.3l7.8-1.9l-1.1-1.2l-7.9,1.2l4.8-1.8l3.1-0.3l2.4-0.3l4.1-1.1l2.4,0.1l3.8-1l1-1.7l-1.1-1.4l-0.2,2.2 L615,306l-0.6-3.3l1.1-3.3l1.4-1.3l3.9-3.7l5.9-1.8l6-2.1l6.3-3l-0.2-2l-2.1-3.5l2.8-8.5l-1.5-1.8l-3.7,1.1l-1.1-1.7l-5.5,4.7 l-3.2,4.9l-2.7,2.8l-2.5,0.9l-1.7,0.3l-1,1.6h-9.3h-7.7l-2.7,1.2l-6.7,4.2l0.2,0.9l-0.6,2.4l-4.6,2l-3.9-0.5l-4-0.2l-2.6,0.7 l-0.3,1.8l0,0l-0.1,0.6l-5.8,3.7l-4.5,1.8l-2.9,0.8l-3.7,1.7l-4,0.9l-2.5-0.3l-2.7-1.3l2.7-2.4l0,0l2-2.2l3.7-3.4l0,0l0,0l0.7-2.5 l0.5-3.5l-1.6-0.7l-4.3,2.8l-0.9-0.1l0.3-1.5l3.8-2.5l1.6-2.8l0.7-2.8l-2.7-2.4l-3.7-1.3l-1.7,2.4l-1.4,0.6l-2.2,3.1l0.4-2.1 l-2.6,1.5l-2.1,2l-2.6,3.1l-1.3,2.6l0.1,3.8l-1.8,4l-3.3,3l-1.4,0.9l-1.6,0.7h-1.8l-0.3-0.4l-0.1-3.3l0.7-1.6l0.7-1.5l0.6-3l2.5-3.5 l2.9-4.3l4.6-4.7h-0.7l-5.4,4l-0.4-0.7l2.9-2.3l4.7-4l3.7-0.5l4.4-1.3l3.7,0.7h0.1l4.7-0.5l-1.5-2.5l0,0l-1.2-0.2l0,0l0,0l-1.4-0.3 l-0.4-1.7l-5.1,0.5l-5,1.4l-2.5-2.3l-2.5-0.8l3.1-3.3l-5.3,2l-4.9,2.1l-4.6,1.5l-2.1-2.1l-5.5,1.3l0.4-0.9l4.6-2.6l4.7-2.5l5.9-2.1 l0,0l0,0l-5.3-1.6l-4.4,0.8l-3.8-1.9l-4.6-1l-3.2-0.4l-1-1L512.2,259.1L512.2,259.1z M271.6,212.2l6.9-2.8v-1.8l-2.6-0.4l-3.4,0.9 l-6.4,2.1l-2.2,2.7l0.7,1.6L271.6,212.2z M232.9,195.8l2.3-2.3l-2.9-0.5l-5.7,1l0.8,1.6l1.6,1.1L232.9,195.8L232.9,195.8z M234.1,173.5l-3.1,2.2l0.4,0.5l4.2-0.4l0.3,1.1l1.7,1.2l4.9-1.2l1.2-0.6l-3.3-0.8l-1.6-1.5l-3.4,0.6L234.1,173.5L234.1,173.5z M359,133.3l-4.4-1.1l-10.2,2.8l-3.2-0.3l-11,2.3l-4.8,0.6l-7.8,2.5l-4.8,2.6l-8.6,2.5l-7.6,0.1l-6.3,2.9l3.2,1.7l0.7,2.3l-0.8,2.7 l2.3,2.1l-1.2,3.5l-9.2,0.2l4.3-2.8h-3.4l-13.1,2.7l-9.1,2.3l1,3.3l-1.2,2.2l4.5,1.4l6.9-0.7l1.8,1.3l2.9-1.3l6.1-1.2h2.7l-5.9,2.1 l1.1,1l-2.5,2.6l-5.5,1.8l-2.5-0.5l-7,2.7l-1.8-0.9l-4.1,0.4l-5.3,3l-7.6,3.1l-5.8,3.4l0.3,2.4l-4,3.3l1.4,1.4l0.5,2.7l7.2-1.1 l0.4,2.1l-3.3,2.1l-3.6,3.5h2.8l7.2-2.3l-1.6,2.9l3.6-2.1l-0.4,3l4.8-2.2l0.4,1.1l7.2-1.8l-6.2,3.4l-5.7,4.5l-5.7,2.1l-2.3,1.2 l-10.3,3.6l-4.9,2.4l-6.5,0.7l-8.5,3.3l-6.6,1.8l-8.1,2.8l-0.4,1l10-1.7l6-2l6.9-2l6.1-1.7l2.8,0.5l8.1-2.6l4.5-2.8l10.5-3.1 l3.9-2.6l6.6-1.8l7.6-2.5l8.9-4.2l-0.2-2.9l11.1-4.1l7.4-3.9l9.2-3.2l-0.4,1.4l-6.7,1.8l-8.3,5.7l-3.2,3.5l6.4-1.3l6.1-1.9l6.5-1.3 l2.9-0.3l3.5-4.1l6.3-1.2l2.6,2.5l6,2.7l6.7-0.5l5.7,2l3.2,1.1l3.3,6.1l3.7,1.7l7.1,0.2l4.1,0.4l-2.7,5.5l1.6,4.9l-3.3,5.2l2.5,1.9 l0.6,2.2l0,0l5.1-2.9l3.1-3.7l-4.6-3.8l1.5-6.8l1.1-4.2l-1.7-2.7l-0.7-2.4l0.5-3l-6.4,1.9l-7.6,3.3l-0.2-3.9l-0.6-2.6l-2.7-1.6 l-4.2-0.1l35.4-32.4l24.3-20.2l0,0l0,0l-3.5-0.7l-4.1-1.6l-6.5,0.8l-2.2-0.7l-7.1-0.5l-6.2-1.6l-4.8,0.5l-4.9-0.9l2-1.2l-6.3-0.3 l-3.3,1L359,133.3L359,133.3z\"},VI:{d:\"M617.9,458.9l-0.7,0.2l-0.1,0.4h1.1l0.7-0.3h-0.6L617.9,458.9L617.9,458.9z M618.8,455.4l-0.5-0.1l-0.2,0.2l0,0 l0.3,0.1L618.8,455.4z M617.7,455.5l-0.2-0.2l-0.3-0.1l-0.4,0.1l0.5,0.3L617.7,455.5L617.7,455.5z\"},UY:{d:\"M692.5,787l-2.1-3.7l1.9-3l-3.8-4.3l-4.8-3.5l-6.2-4.1l-1.9,0.2l-6.2-4.9l-3.4,0.7l-0.5,5.1l-0.3,6.5l1.1,6.3 l-0.9,1.4l0.4,4.2l3.9,3.5l3.6-0.2l5.4,2.7l2.7-0.6l4.2,1.2l5.3-3.5L692.5,787L692.5,787z\"},UZ:{d:\"M1339.8,303.1l-2.5,1.2l-5.4,4.3l-0.9,4.5h-1.9l-2.3-3l-6.6-0.2l-2.6-5l-2.5-0.1l-1.5-6.2l-7.5-4.5l-8.6,0.5 l-5.7,0.9l-6.5-5.5l-4.8-2.3l-9.1-4.5l-1.1-0.5l-11.9,3.6l6.2,22.8l5.8-0.1l-1.6-3.1l3.8-2.2l3.3-3.6l7.8,3.3l1.9,4.9l2.3,1.3 l5.5-0.3l2,1.2l4.3,6.4l7,4.4l4.2,3l6.2,3.2l7.7,2.7l0.8,4h2.9l4.3,1.4l1.3-6.6l-2.4-4.7l-4.2-1.6l0.6-2.8l4.4,0.3l1.5-3.5l0.5-4 l6.4-1.5l-0.2,2.9l1.3,1.8l2.1-0.2l4.1,0.6l5.2-4.5l-7.1-3.3l-3.2,1.6l-4.6-2.3l3.1-4.1L1339.8,303.1L1339.8,303.1z\"},VU:{d:\"M1908.6,676.9l-2.7-3.6l-0.6,1.7l1.3,2.8L1908.6,676.9L1908.6,676.9z M1906.6,667.2l-2.3-2l-0.9,4.9l0.5,1.8 l1.2-0.4l1.3,0.8L1906.6,667.2L1906.6,667.2z\"},VA:{d:\"M1039.5,304.8l0.6-0.1l0.1,0.6h-0.9L1039.5,304.8z\"},VE:{d:\"M642,518.9l-2.2-1.5l-2.9,0.2l-0.7-5.1l-4.1-3.2l-4.4-0.4l-1.8-3l4.8-1.9l-6.7,0.1l-6.9,0.4l-0.2,1.6l-3.2,1.9 l-4.2-0.7l-3.1-2.9l-6,0.7l-5-0.1l-0.1-2.1l-3.5-3.5l-3.9-0.1l-1.7-4.5l-2.1,2l0.6,3l-7.1,2.6v4.8l1.6,2.2l-1.5,4.6l-2.4,0.4l-1.9-5 l2.7-3.7l0.3-3.3l-1.7-2.9l3.3-0.8l0.3-1.5l-3.7,1.1l-1.6,3.2l-2.2,1.8l-1.8,2.4l-0.9,4.5l-1.8,3.7l2.9,0.5l0.6,2.9l1.1,1.4l0.4,2.5 l-0.8,2.4l0.2,1.3l1.3,0.6l1.3,2.2l7.2-0.6l3.2,0.8l3.8,5.5l2.3-0.7l4,0.3l3.2-0.7l2,1.1l-1.2,3.4l-1.3,2.1l-0.5,4.6l1,4.2l1.5,1.9 l0.2,1.5l-2.9,3.1l2,1.4l1.4,2.2l1.7,6.4l3,3.4l4.4-0.5l1.1-1.9l4.2-1.5l2.3-1l0.7-2.7l4.1-1.8l-0.3-1.4l-4.8-0.5l-0.7-4l0.3-4.3 l-2.4-1.6l1-0.6l4.2,0.8l4.4,1.6l1.7-1.5l4-1l6.4-2.4l2.1-2.4l-0.7-1.8l-3.7-4.8l1.6-1.8v-2.9l3.4-1.1l1.5-1.2l-1.9-2.3l0.6-2.3 L642,518.9L642,518.9z\"},VN:{d:\"M1571.6,435l-5.9-1.6l-3-2.6l0.2-3.7l-5.2-1.1l-3-2.4l-4.1,3.4l-5.3,0.7h-4.3l-2.7,1.5l4,5.1l3.4,5.7l6.8,0.1l3,5.5 l-3.3,1.7l-1.3,2.3l7.3,3.8l5.7,7.5l4.3,5.6l4.8,4.4l2,4.5l-0.2,6.4l1.8,4.2l0.1,7.7l-8.9,4.9l2.8,3.8l-5.8,0.5l-4.7,2.5l4.5,3.7 l-1.3,4.3l2.3,4l6.6-5.9l4.1-5.3l6.1-4.1l4.3-4.2l-0.4-11.2l-4-11.7l-4.1-5.1l-5.6-4l-6.4-8.3l-5.3-6.7l0.5-4.4l3.7-6L1571.6,435z\"},EH:{d:\"M928.8,396.2h0.8v0.4l-0.1,1.2l-0.2,9.7l-17.9-0.3l-0.2,16.3L906,424l-1.4,3.3l0.9,9.2l-21.6-0.1l-1.2,2.2l0.3-2.7 h0.1l12.4-0.5l0.7-2.3l2.3-2.9l2-8.8l7.8-6.8l2.8-8.1l1.7-0.4l1.9-5l4.6-0.7l1.9,0.9h2.5l1.8-1.5l3.4-0.2L928.8,396.2z\"},YE:{d:\"M1271.5,466.2l-2.1-4.4l-5.2-10.5l-15.7,2.4l-5,2.9l-3.5,6.7l-2.5,1l-1.6-2.1l-2.1,0.3l-5.4-0.6l-1-0.7l-6.4,0.2 l-1.5,0.6l-2.4-1.7l-1.2,3.1l0.7,2.7l-2.3,2.1l0.4,2.7l-0.6,1.3l0.7,2.9l-1.1,0.3l1.7,2.6l1.3,4.7l1,1.9v3.4l1.6,3.8l3.9,0.3 l1.8-0.9l2.7,0.2l0.8-1.7l1.5-0.4l1.1-1.7l1.4-0.4l4.7-0.3l3.5-1.2l3.1-2.7l1.7,0.4l2.4-0.3l4.7-4.5l8.8-3l5.3-2.7v-2.1l0.9-2.9 L1271.5,466.2L1271.5,466.2z\"},ZM:{d:\"M1149.2,626.7l-1.9-0.5l0.4-1.3l-1-0.3l-7.5,1.1l-1.6,0.7l-1.6,4.1l1.2,2.8l-1.2,7.5l-0.8,6.4l1.4,1.1l3.9,2.5 l1.5-1.2l0.3,6.9h-4.3l-2.1-3.5l-2-2.8l-4.3-0.8l-1.2-3.4l-3.4,2l-4.5-0.9l-1.8-2.8l-3.5-0.6l-2.6,0.1l-0.3-2l-1.9-0.1l0.5,2l-0.7,3 l0.9,3l-0.9,2.4l0.5,2.2l-11.6-0.1l-0.8,20.3l3.6,5.2l3.5,4l4.6-1.5l3.6,0.4l2.1,1.4v0.5l1,0.5l6.2,0.7l1.7,0.7l1.9-0.1l3.2-4.1 l5.1-5.3l2-0.5l0.7-2.2l3.3-2.5l4.2-0.9l-0.3-4.5l17.1-5.2l-2.9-1.7l1.9-5.9l1.8-2.2l-0.9-5.3l1.2-5.1l1-1.8l-1.2-5.4l-2.6-2.8 l-3.2-1.9l-3.5-1.1l-2.2-1.1l-0.3-0.2l0,0l0.5,1.1l-1,0.4L1149.2,626.7L1149.2,626.7z\"},ZW:{d:\"M1148.2,713.7l6.2-7.2l1.6-4.6l0.9-0.6l0.8-3.7l-0.8-1.9l0.5-4.7l1.3-4.4l0.3-8.1l-2.8-2l-2.6-0.5l-1.1-1.6 l-2.6-1.3l-4.6,0.1l-0.3-2.4l-4.2,0.9l-3.3,2.5l-0.7,2.2l-2,0.5l-5.1,5.3l-3.2,4.1l-1.9,0.1l-1.7-0.7l-6.2-0.7l1.9,5.1l1.1,1.1 l1.6,3.7l6,7l2.3,0.7l-0.1,2.2l1.5,4.1l4.2,0.9l3.4,2.9l2.2,0.1l2.6,1.1l1.9-0.8L1148.2,713.7L1148.2,713.7z\"},XK:{d:\"M1080,299.8l1.2-0.5l0.5-2l0.9-0.4l0.8,0.9l1,0.4l0.8,1l0.8,0.3l1.1,1.1h0.8l-0.5,1.5l-0.5,0.7l0.2,0.5l-1.1,0.2l-2.9,1l-0.1,1.2h-0.7l-0.5-2.3l-1.3-0.6l-1.3-1.6L1080,299.8z\"},\"MA-EH\":{d:\"M969.3,363.1l-1.8-6.7l-0.3-3.9l-2-4.1l-2.3-0.1l-5.5-1.4l-5,0.4l-3.1-2.7h-3.9l-1.8,3.9l-3.7,6.7l-4,2.6 l-5.4,2.9L927,365l-0.9,3.4l-2.1,5.4l1.1,7.9l-4.7,5.3l-2.7,1.7l-4.4,4.4l-5.1,0.7l-2.8,2.4l-0.1,0.1l-3.6,6.5l-3.7,2.3l-2.1,4 l-0.2,3.3l-1.6,3.8l-1.9,1l-3.1,4l-2,4.5l0.3,2.2l-1.9,3.3l-2.2,1.7l-0.3,3l-0.3,2.7l1.2-2.2l21.6,0.1l-0.9-9.2l1.4-3.3l5.2-0.5 l0.2-16.3l17.9,0.3l0.2-9.7l0.1-1.2v-0.4l0,0l0,0l0,0l0.1-7.5l8.9-4.7l5.4-1l4.4-1.7l2.1-3.2l6.3-2.5l0.3-4.7l3.1-0.5l2.5-2.4l7-1 l1-2.5L969.3,363.1z\"},\"RU-WITH-CRIMEA\":{d:\"M1145,281l-4.5,2.1l-0.7,1.2l5.8,1.8l-0.6,2.9l3,1.3l6.3-3.6l5.3-1.1l0.6-2.2l-5.1,0.4l-2.7-1.5L1145,281z M1332.3,95.1l-4.5-4l-13.6-4.1l-9.4-2.1l-6.2,0.9l-5.3,2.9l5.8,0.8l6.6,3.2l8,1.7l11.5,1.3C1325.2,95.7,1332.3,95.1,1332.3,95.1z M1153.6,87.8l0.9-0.6l-5.7-0.9L1146,87l-1.3,1l-1.5-1.2l-5.2,0.1l-6.2,0.8l7.7,0.1l-1.1,1.3l4.4,1l3.6-0.7l0.1-0.7l2.9-0.3C1149.4,88.4,1153.6,87.8,1153.6,87.8z M1354.1,97.7l-1.5-1.8l-12.5-2.6l-3-0.3l-2.2,0.5l1.2,6C1336.1,99.5,1354.1,97.7,1354.1,97.7z M1369.3,104l-9.2-0.7l3.4-1.2l-8.2-1.5l-6.1,1.9l-1,2l1.5,2.1l-6.9-0.1l-5.3,2.6l-4.3-1.1l-9.3,0.5l0.3,1.3l-9.2,0.7l-4.9,2.4l-4.2,0.2l-1.2,3.3l5.5,2.6l-7.7,0.7l-9.5-0.3l-5.8,1.1l4.8,5.4l6.9,4.3l-9.6-3l-7.9,0.3l-5.1,2l4.5,3.8l-4.9-1l-2.1-5l-4.2-2.8l-1.8,0.1l3.6,3.7l-4.6,3.5l8.1,4.2l0.4,5.4l2.9,2.9l4.7,0.5l0.4,3.5l4.4,3.1l-1.9,2.6l0.5,2.7l-3.7,1.4l-0.5,2l-5.3-0.8l3.5-7.8l-0.5-3.6l-6.7-3.3l-3.8-7.3l-3.7-3.7l-3.6-1.6l0.8-4.2l-2.9-2.9l-11.3-1.4l-2.1,1l0.5,4.7l-4.3,4.7l1.2,1.7l4.7,4.1l0.1,2.6l5.3,0.5l0.8,1.1l5.8,2.9l-1,2.8l-18.5-6.1l-6.6-1.7l-12.8-1.6l-1.2,1.7l5.9,3.1l-2.7,3.6l-6.4-3.2l-5,2.2l-7.6,0.1l-2.1,1.9l-5.3-0.6l2.5-3.3l-3.2-0.2l-12.3,4.6l-7.6,2.6l0.4,3.5l-6,1.2l-4-1.9l-1.2-3l5-0.7l-3.6-3l-12.2-1.8l4.3,3.4l-0.8,3.2l4.7,3.3l-1.1,3.8l-4.6-1.9l-4-0.3l-8,5.4l4.2,4.1l-3.2,1.4l-11.4-3.5l-2.1,2.1l3.3,2.4l0.2,2.7l-3.8-1.4l-6-1.7l-1.9-5.8l-1-2.6l-8-4l2.9-0.7l20.1,4.2l6.4-1.5l3.7-2.9l-1.6-3.6l-4-2.6l-17.6-6.1l-11.6-1.3l-7.6-3.2l-3.6,1.8l0,0l-6.4,2.2l-3.2,0.5l0.4,3.7l7.2,3.7l-2.8,4.1l6.4,6.3l-1.7,4.8l4.9,4.1l-0.9,3.7l7.3,3.9l-0.9,2.9l-3.3,3.3l-7.9,7.4l0,0l5.3,2.8l-4.5,3.2l0,0l0.9,1l-2.6,3.4l2.5,5.5l-1.6,1.9l2.4,1.4l1,2.8l2.1,3.6l5.2,1.5l1,1.4l2.3-0.7l4.8,1.4l1,2.9l-0.6,1.6l3.7,3.9l2.2,1.1l-0.1,1.1l3.4,1.1l1.7,1.6l-1.6,1.3l-3.9-0.2l-0.8,0.6l1.5,2l2,3.9l0,0l1.8,0.2l1-1.4l1.5,0.3l4.8-0.5l3.8,3.4l-0.9,1.3l0.7,1.9l4,0.2l2.2,2.7l0.2,1.2l6.6,2.2l3.5-1l3.6,2.9l2.9-0.1l7.6,2l0.4,1.9l-1.3,3.2l1.8,3.4l-0.3,2.1l-4.7,0.5l-2.2,1.7l0.4,2.8l4.2-1l0.4,1.3l-6.8,2.6l3.2,2.4l-3.2,5.2l-3.4,1l5,3.6l6.2,2.4l7.4,5.1l0.5-0.7l4.5,1.1l7.7,1l7.5,2.9l1.1,1.2l2.9-1l5.1,1.3l2.1,2.5l3.5,1.4l1.5,0.2l4.3,3.8l2.4,0.4l0.5-1.5l2.6-2.5l0,0l-7.3-7.3l-0.4-4.1l-5.9-5.9l3.5-6.3l4.6-1.1l1.4-3.7l-2.8-1l-0.2-3.2l-4.2-4.1l-3.6,0.2l-5.3-4.3l1.7-4.7l-1.7-1.2l2.1-6.8l6,3.6l-0.7-4.6l8.1-6.6l7.5-0.2l11.9,4.3l6.6,2.4l4.3-2.5l7.6-0.2l7.3,3.2l0.8-1.8l6.9,0.3l0.2-3l-9.4-4.2l3.6-2.9l-1.5-1.7l3.9-1.6l-5-4.1l1.4-2.1l16.8-2.1l1.7-1.5l10.8-2.2l3.1-2.5l9,1.3l4.3,6.3l4.3-1.5l7,2.1l1.2,3.3l4.4-0.4l9.1-5.7l-0.8,1.9l8.3,4.7l18.1,15.5l1.1-3.3l8.3,3.6l6.2-1.6l3.2,1.1l4.1,3.6l3.9,1.2l3.3,2.6l6-0.9l4.3,3.8l1.7-0.5l4.7-1l6.6-5.4l5.9-2.9l5.3,1.9l5.1,0.1l4.7,2.9l5,0.2l7.9,1.6l2.4-4.3l-4-3.6l1.3-6.4l6.9,2.5l4.8,0.8l6.6,1.5l3.7,4.6l8.4,2.6l3.9-1.1l5.7-0.8l5.4,0.8l6.5,3l4.9,3.1h4.5l6.7,1l3.6-1.6l5.8-1l4.5-4.4l3.3,0.7l3.9,2.1l5.5-0.5l7.3,2.3l4.4-3.9l-1.9-2.7l-0.1-6.5l1.2-2l-2.5-3.3l-3.7-1.5l1.7-3l5.1-1.1l6.2-0.2l8.5,1.8l5.9,2.3l7.7,6.1l3.8,2.7l4.4,3.7l6.1,6.1l9.9,1.9l8.9,4.5l6,5.8h7.5l2.6-2.5l6.9-1.8l1.3,5.6l-0.4,2.3l2.8,6.8l0.6,6l-6.8-1.1l-2.9,2.2l4.7,5.3l3.8,7.3l-2.5,0.1l1.9,3.1l0,0l1.4,1.1l0,0l0,0l0,0l-0.4-2l4-4.5l5.1,3l3.2-0.1l4.4-3.6l1-3.7l2.1-7.1l1.9-7.2l-1.3-4.3l1-9l-5.2-9.9l-5.5-7.3l-1.3-6.2l-4.7-5.1l-12.7-6.7l-5.6-0.4l-0.3,3l-5.8-1.3l-5.7-3.8l-8-0.7l4.9-14.1l3.5-11.5l13.1-1.8l14.9,1l2.5-2.8l7.9,0.8l4.3,4.3l6.4-0.6l8.4-1.6l-7.7-3.5v-9.8l9.1-1.9l12.1,7.1l3.6-6.4l-3.2-4.7l4.7-0.5l6.5,8.1l-2.4,4.6l-0.8,6l0.3,7.5l-5.7,1.3l2.8,2.7l-0.1,3.6l6.4,8.3l16,13.4l10.5,8.8l5.7,4.3l1.6-5.7l-4.5-6.2l5.7-1.5l-5.4-6.9l5-3.1l-4.7-2.6l-3.4-5l4.1-0.2l-9-8.6l-6.7-1.4l-2.9-2.4l-1.1-5.6l-3.1-3.9l7,0.8l1.3-2.5l4.7,2.2l6.1-4.6l11.4,4l-1.7-2.6l2-3.6l1.5-4l3.1-0.7l6.5-4.3l9.8,1.2l-0.9-1.5l-3.8-2.3l-4.1-1.6l-9.1-4.6l-8.1-3l6.1,0.4l2-2.5l0,0l-32.9-21.9l-9.4-2.3l-15.7-2.6l-7.9,0.3l-15.2-1.4l1.8,2.3l8.5,3.4l-2.5,1.8l-14.2-4.8l-6.8,0.6l-9.2-1.1l-7,0.2l-3.9,1.1l-7.2-1.6l-5.1-3.8l-6.5-2.2l-9.2-0.9l-14.7,1l-16.1-4l-7.8-3l-40.1-3.4l-2.1,2.2l9.3,4.8l-7.5-0.7l-1,1.5l-9.7-1.6l-5,1.4l-9.3-2.4l3,5.5l-8.9-2.1l-10-4.1l-0.4-2.2l-6-3.3l-9.8-2.6h-6.1l-9.3-0.9l4.7,3.9l-17.2-0.8l-3.9-2.3l-13.3-0.9l-5.3,0.8l-0.1,1.3l-5.8-3.2l-2.3,0.9l-7.2-1.2l-5.6-0.7l1.1-1.5l6.6-2.8l2.3-1.5l-2.4-2.5l-5.5-1.9l-11.5-2.3l-10.8-0.1l-1.9,1.2L1369.3,104L1369.3,104z M1207.1,135.6l-9.9-4.3l-3.1-4.3l3.3-4.9l2.8-5l8.6-4.7l9.8-2.4l11.3-2.4l1.3-1.5l-4.2-1.9l-6.6,0.6l-4.9,1.8l-11.7,0.9l-10.1,3.1l-6.8,2.7l2.5,2.2l-6.6,4.4l3.9,0.7l-5.4,4.3l1.6,2.8l-3.4,1.1l1.9,2.8l7.9,1.4l2.2,2.3l13.4,0.7L1207.1,135.6L1207.1,135.6z M1521.1,110.9l-17.9-2.6l-10.2-0.2l-3.4,0.9l3.4,3.4l12.4,3.2l4.5-1.2l14.2,0.2C1524.1,114.6,1521.1,110.9,1521.1,110.9z M1546.3,113.2l-11.7-1.3l-8.2-0.7l1.7,1.6l10.3,2l6.8,0.4L1546.3,113.2L1546.3,113.2z M1533.8,122.7l-2.5-1.4l-8.3-1.9l-4.1,0.5l-0.8,2l1.1,0.2l8.8,0.6C1528,122.7,1533.8,122.7,1533.8,122.7z M1696.4,135l-6-3.6l-1.4,2.2l3.5,1.6L1696.4,135z M1084,228.9l-0.6-1.5l0.2-1.7l-2.2-0.9l-5-1.1l-6.3,2l-0.7,2.6l5.9,0.7L1084,228.9z M1673.7,250.7l-7.2-6.2l-5.1-6l-6.8-5.8l-4.9-4l-1.3,0.8l4.4,2.8l-1.9,2.8l6.8,8.3l7.8,6l6.4,8.3l2.4,4.6l5.5,6.8l3.8,6l4.6,5.2l-0.1-4.8l6.5,3.8l-3-4.4l-9.5-6.3l-3.7-9l8.9,2L1673.7,250.7L1673.7,250.7z\"},\"UA-WITHOUT-CRIMEA\":{d:\"M1138.5,241l-4.8,0.5l-1.5-0.3l-1,1.4l-1.8-0.2l0,0l-4.1,0.3l-1.2,1.4l0.2,3.1l-2-0.6l-4.3,0.3l-1.5-1.5l-1.6,1.1l-2-0.9l-3.8-0.1l-5.6-1.5l-5-0.5l-3.7,0.2l-2.4,1.6l-2.2,0.3l3.1,5.3l-0.3,1.8l-2.3,0.7l-3.8,5.1l1.6,2.8l-1.1-0.4l-1.1,1.7l-0.7,2.5l2.9,1.7l0.6,1.6l1.9-1.3l3.2,0.7h3.2l2.4,1.5l1.6-0.9l3.6-0.6l1-1.5h2.1l1.1-0.9l3.2-0.6l3.9,1.9l2,0.3l2.5,1.6v2.1l1.9,1.1l1.1,2.6l2,1.5l-0.2,1l1,0.6l-1.2,0.5l-3-0.2l-0.6-0.9l-1,0.5l0.5,1.1l-1.1,2l-0.5,2.1l-1.2,0.7l2.4,1.1l2.2-1l2.4,1.1l3.3-4.6l1.3-3.4l4.5-0.8l0.7,2.4l8,1.5l1.7,1.4l7.4,1.3l-1-3.9l3.9-2.3l4.6-0.3l3-2l3.9-0.5l-0.4-2.8l2.2-1.7l4.7-0.5l0.3-2.1l-1.8-3.4l1.3-3.2l-0.4-1.9l-7.6-2l-2.9,0.1l-3.6-2.9l-3.5,1l-6.6-2.2l-0.2-1.2l-2.2-2.7l-4.7-2.1l0.9-1.3L1138.5,241L1138.5,241z\"}},a.prototype.createTooltip=function(){if(this.tooltip)return!1;this.tooltip=this.createElement(\"div\",\"svgMap-tooltip\",document.getElementsByTagName(\"body\")[0]),this.tooltipContent=this.createElement(\"div\",\"svgMap-tooltip-content-wrapper\",this.tooltip),this.tooltipPointer=this.createElement(\"div\",\"svgMap-tooltip-pointer\",this.tooltip)},a.prototype.setTooltipContent=function(l){this.tooltip&&(this.tooltipContent.innerHTML=\"\",this.tooltipContent.append(l))},a.prototype.showTooltip=function(l){this.tooltip.classList.add(\"svgMap-active\"),this.moveTooltip(l)},a.prototype.hideTooltip=function(){this.tooltip.classList.remove(\"svgMap-active\")},a.prototype.moveTooltip=function(l){var t,e,o,i,a=l.pageX||(l.touches&&l.touches[0]?l.touches[0].pageX:null),L=l.pageY||(l.touches&&l.touches[0]?l.touches[0].pageY:null);null!==a&&null!==L&&(t=window.innerWidth,e=this.tooltip.offsetWidth,o=this.tooltip.offsetHeight,(i=a-e/2)<=6?(a=6+e/2,this.tooltipPointer.style.marginLeft=i-6+\"px\"):t-6<=i+e?(a=t-6-e/2,this.tooltipPointer.style.marginLeft=-1*(t-6-l.pageX-e/2)+\"px\"):this.tooltipPointer.style.marginLeft=\"0px\",L-12-o<=6?(this.tooltip.classList.add(\"svgMap-tooltip-flipped\"),L+=32):(this.tooltip.classList.remove(\"svgMap-tooltip-flipped\"),L-=12),this.tooltip.style.left=a+\"px\",this.tooltip.style.top=L+\"px\")},a.prototype.error=function(l){(console.error||console.log)(\"svgMap error: \"+(l||\"Unknown error\"))},a.prototype.createElement=function(l,t,e,o){var i=document.createElement(l);return t&&(t=t.split(\" \")).forEach(function(l){i.classList.add(l)}),o&&(i.innerHTML=o),e&&e.appendChild(i),i},a.prototype.numberWithCommas=function(l,t){return l.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,t||\",\")},a.prototype.getColor=function(l,t,e){l=l.slice(-6),t=t.slice(-6),e=parseFloat(e).toFixed(1);var o=Math.ceil(parseInt(l.substring(0,2),16)*e+parseInt(t.substring(0,2),16)*(1-e)),i=Math.ceil(parseInt(l.substring(2,4),16)*e+parseInt(t.substring(2,4),16)*(1-e)),e=Math.ceil(parseInt(l.substring(4,6),16)*e+parseInt(t.substring(4,6),16)*(1-e));return\"#\"+this.getHex(o)+this.getHex(i)+this.getHex(e)},a.prototype.getHex=function(l){return(\"0\"+(l=l.toString(16))).slice(-2)},a.prototype.getCountryName=function(l){return(this.options.countryNames&&this.options.countryNames[l]?this.options.countryNames:this.countries)[l]},a}!function(t,e){\"function\"==typeof define&&define.amd?define([\"svg-pan-zoom\"],function(l){return t.svgMap=e(l)}):\"object\"==typeof module&&module.exports?module.exports=t.svgMap=e(require(\"svg-pan-zoom\")):t.svgMap=e(t.svgPanZoom)}(this,function(l){return svgMapWrapper(l)});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default {\n    AF: 'Afghanistan',\n    AX: 'Åland Islands',\n    AL: 'Albania',\n    DZ: 'Algeria',\n    AS: 'American Samoa',\n    AD: 'Andorra',\n    AO: 'Angola',\n    AI: 'Anguilla',\n    AQ: 'Antarctica',\n    AG: 'Antigua and Barbuda',\n    AR: 'Argentina',\n    AM: 'Armenia',\n    AW: 'Aruba',\n    AU: 'Australia',\n    AT: 'Austria',\n    AZ: 'Azerbaijan',\n    BS: 'Bahamas',\n    BH: 'Bahrain',\n    BD: 'Bangladesh',\n    BB: 'Barbados',\n    BY: 'Belarus',\n    BE: 'Belgium',\n    BZ: 'Belize',\n    BJ: 'Benin',\n    BM: 'Bermuda',\n    BT: 'Bhutan',\n    BO: 'Bolivia',\n    BA: 'Bosnia and Herzegovina',\n    BW: 'Botswana',\n    BR: 'Brazil',\n    IO: 'British Indian Ocean Territory',\n    VG: 'British Virgin Islands',\n    BN: 'Brunei Darussalam',\n    BG: 'Bulgaria',\n    BF: 'Burkina Faso',\n    BI: 'Burundi',\n    KH: 'Cambodia',\n    CM: 'Cameroon',\n    CA: 'Canada',\n    CV: 'Cape Verde',\n    BQ: 'Caribbean Netherlands',\n    KY: 'Cayman Islands',\n    CF: 'Central African Republic',\n    TD: 'Chad',\n    CL: 'Chile',\n    CN: 'China',\n    CX: 'Christmas Island',\n    CC: 'Cocos Islands',\n    CO: 'Colombia',\n    KM: 'Comoros',\n    CG: 'Congo',\n    CK: 'Cook Islands',\n    CR: 'Costa Rica',\n    HR: 'Croatia',\n    CU: 'Cuba',\n    CW: 'Curaçao',\n    CY: 'Cyprus',\n    CZ: 'Czech Republic',\n    CD: 'Democratic Republic of the Congo',\n    DK: 'Denmark',\n    DJ: 'Djibouti',\n    DM: 'Dominica',\n    DO: 'Dominican Republic',\n    EC: 'Ecuador',\n    EG: 'Egypt',\n    SV: 'El Salvador',\n    GQ: 'Equatorial Guinea',\n    ER: 'Eritrea',\n    EE: 'Estonia',\n    ET: 'Ethiopia',\n    FK: 'Falkland Islands',\n    FO: 'Faroe Islands',\n    FM: 'Federated States of Micronesia',\n    FJ: 'Fiji',\n    FI: 'Finland',\n    FR: 'France',\n    GF: 'French Guiana',\n    PF: 'French Polynesia',\n    TF: 'French Southern Territories',\n    GA: 'Gabon',\n    GM: 'Gambia',\n    GE: 'Georgia',\n    DE: 'Germany',\n    GH: 'Ghana',\n    GI: 'Gibraltar',\n    GR: 'Greece',\n    GL: 'Greenland',\n    GD: 'Grenada',\n    GP: 'Guadeloupe',\n    GU: 'Guam',\n    GT: 'Guatemala',\n    GN: 'Guinea',\n    GW: 'Guinea-Bissau',\n    GY: 'Guyana',\n    HT: 'Haiti',\n    HN: 'Honduras',\n    HK: 'Hong Kong',\n    HU: 'Hungary',\n    IS: 'Iceland',\n    IN: 'India',\n    ID: 'Indonesia',\n    IR: 'Iran',\n    IQ: 'Iraq',\n    IE: 'Ireland',\n    IM: 'Isle of Man',\n    IL: 'Israel',\n    IT: 'Italy',\n    CI: 'Ivory Coast',\n    JM: 'Jamaica',\n    JP: 'Japan',\n    JE: 'Jersey',\n    JO: 'Jordan',\n    KZ: 'Kazakhstan',\n    KE: 'Kenya',\n    KI: 'Kiribati',\n    XK: 'Kosovo',\n    KW: 'Kuwait',\n    KG: 'Kyrgyzstan',\n    LA: 'Laos',\n    LV: 'Latvia',\n    LB: 'Lebanon',\n    LS: 'Lesotho',\n    LR: 'Liberia',\n    LY: 'Libya',\n    LI: 'Liechtenstein',\n    LT: 'Lithuania',\n    LU: 'Luxembourg',\n    MO: 'Macau',\n    MK: 'Macedonia',\n    MG: 'Madagascar',\n    MW: 'Malawi',\n    MY: 'Malaysia',\n    MV: 'Maldives',\n    ML: 'Mali',\n    MT: 'Malta',\n    MH: 'Marshall Islands',\n    MQ: 'Martinique',\n    MR: 'Mauritania',\n    MU: 'Mauritius',\n    YT: 'Mayotte',\n    MX: 'Mexico',\n    MD: 'Moldova',\n    MC: 'Monaco',\n    MN: 'Mongolia',\n    ME: 'Montenegro',\n    MS: 'Montserrat',\n    MA: 'Morocco',\n    MZ: 'Mozambique',\n    MM: 'Myanmar',\n    NA: 'Namibia',\n    NR: 'Nauru',\n    NP: 'Nepal',\n    NL: 'Netherlands',\n    NC: 'New Caledonia',\n    NZ: 'New Zealand',\n    NI: 'Nicaragua',\n    NE: 'Niger',\n    NG: 'Nigeria',\n    NU: 'Niue',\n    NF: 'Norfolk Island',\n    KP: 'North Korea',\n    MP: 'Northern Mariana Islands',\n    NO: 'Norway',\n    OM: 'Oman',\n    PK: 'Pakistan',\n    PW: 'Palau',\n    PS: 'Palestine',\n    PA: 'Panama',\n    PG: 'Papua New Guinea',\n    PY: 'Paraguay',\n    PE: 'Peru',\n    PH: 'Philippines',\n    PN: 'Pitcairn Islands',\n    PL: 'Poland',\n    PT: 'Portugal',\n    PR: 'Puerto Rico',\n    QA: 'Qatar',\n    RE: 'Reunion',\n    RO: 'Romania',\n    RU: 'Russia',\n    RW: 'Rwanda',\n    SH: 'Saint Helena',\n    KN: 'Saint Kitts and Nevis',\n    LC: 'Saint Lucia',\n    PM: 'Saint Pierre and Miquelon',\n    VC: 'Saint Vincent and the Grenadines',\n    WS: 'Samoa',\n    SM: 'San Marino',\n    ST: 'São Tomé and Príncipe',\n    SA: 'Saudi Arabia',\n    SN: 'Senegal',\n    RS: 'Serbia',\n    SC: 'Seychelles',\n    SL: 'Sierra Leone',\n    SG: 'Singapore',\n    SX: 'Sint Maarten',\n    SK: 'Slovakia',\n    SI: 'Slovenia',\n    SB: 'Solomon Islands',\n    SO: 'Somalia',\n    ZA: 'South Africa',\n    GS: 'South Georgia and the South Sandwich Islands',\n    KR: 'South Korea',\n    SS: 'South Sudan',\n    ES: 'Spain',\n    LK: 'Sri Lanka',\n    SD: 'Sudan',\n    SR: 'Suriname',\n    SJ: 'Svalbard and Jan Mayen',\n    SZ: 'Eswatini',\n    SE: 'Sweden',\n    CH: 'Switzerland',\n    SY: 'Syria',\n    TW: 'Taiwan',\n    TJ: 'Tajikistan',\n    TZ: 'Tanzania',\n    TH: 'Thailand',\n    TL: 'Timor-Leste',\n    TG: 'Togo',\n    TK: 'Tokelau',\n    TO: 'Tonga',\n    TT: 'Trinidad and Tobago',\n    TN: 'Tunisia',\n    TR: 'Turkey',\n    TM: 'Turkmenistan',\n    TC: 'Turks and Caicos Islands',\n    TV: 'Tuvalu',\n    UG: 'Uganda',\n    UA: 'Ukraine',\n    AE: 'United Arab Emirates',\n    GB: 'United Kingdom',\n    US: 'United States',\n    UM: 'United States Minor Outlying Islands',\n    VI: 'United States Virgin Islands',\n    UY: 'Uruguay',\n    UZ: 'Uzbekistan',\n    VU: 'Vanuatu',\n    VA: 'Vatican City',\n    VE: 'Venezuela',\n    VN: 'Vietnam',\n    WF: 'Wallis and Futuna',\n    EH: 'Western Sahara',\n    YE: 'Yemen',\n    ZM: 'Zambia',\n    ZW: 'Zimbabwe'\n  };","export default {\n    AF: 'Kabul',\n    AX: 'Mariehamn',\n    AL: 'Tirana',\n    DZ: 'Algiers',\n    AD: 'Andorra la Vella',\n    AO: 'Luanda',\n    AG: \"St John's\",\n    AR: 'Buenos Aires',\n    AM: 'Yerevan',\n    AW: 'Oranjestad',\n    AU: 'Sydney',\n    AT: 'Vienna',\n    AZ: 'Baku',\n    BS: 'Nassau',\n    BH: 'Manama',\n    BD: 'Dhaka',\n    BB: 'Bridgetown',\n    BY: 'Minsk',\n    BE: 'Brussels',\n    BZ: 'Belmopan',\n    BM: 'Hamilton',\n    BT: 'Thimphu',\n    BO: 'La Paz',\n    BA: 'Sarajevo',\n    BW: 'Gaborone',\n    BR: 'Rio de Janeiro',\n    VG: 'Road Town',\n    BN: 'Bandar Seri Begawan',\n    BG: 'Sofia',\n    BF: 'Ouagadougou',\n    BI: 'Gitega',\n    KH: 'Phnom Penh',\n    CM: 'Yaounde',\n    CA: 'Calgary',\n    CV: 'Praia',\n    KY: 'George Town',\n    TD: 'Baibokoum',\n    CL: 'Santiago',\n    CN: 'Beijing',\n    CO: 'Bogota',\n    CG: 'Kinshasa',\n    CR: 'San José',\n    HR: 'Zagreb',\n    CU: 'Havana',\n    CW: 'Willemstad',\n    CY: 'Nicosia',\n    CZ: 'Prague',\n    CD: 'Brazzaville',\n    DK: 'Copenhagen',\n    DJ: 'Djibouti',\n    DM: 'Roseau',\n    DO: 'Boca Chica',\n    EC: 'Quito',\n    EG: 'Cairo',\n    SV: 'San Salvador',\n    GQ: 'Malabo',\n    EE: 'Tartu',\n    ET: 'Addis Ababa',\n    FO: 'Tórshavn',\n    FJ: 'Fiji',\n    FI: 'Helsinki',\n    FR: 'Paris',\n    PF: 'Amaru',\n    GA: 'Libreville',\n    GM: 'Banjul',\n    GE: 'Tbilisi',\n    DE: 'Berlin',\n    GH: 'Tongo',\n    GI: 'Gibraltar',\n    GR: 'Athens',\n    GL: 'Nuuk',\n    GD: 'Sauteurs',\n    GP: 'Guadeloupe',\n    GU: 'Hagåtña',\n    GT: 'Zacapa',\n    GW: 'Gabu',\n    GY: 'Georgetown',\n    HT: 'Yoro',\n    HN: 'La Paz',\n    HK: 'Hong Kong',\n    HU: 'Budapest',\n    IS: 'Reykjavík',\n    IN: 'Delhi',\n    ID: 'Jakarta',\n    IR: 'Tehran',\n    IQ: 'Nasiriyah',\n    IE: 'Dublin',\n    IM: 'Ramsey',\n    IL: 'Jerusalem',\n    IT: 'Rome',\n    CI: 'San-Pedro',\n    JM: 'Kingston',\n    JP: 'Tokyo',\n    JE: 'St Helier',\n    JO: 'Al-qasr',\n    KZ: 'Almaty',\n    KE: 'Nairobi',\n    KI: 'Kiribati', // no edit\n    XK: 'Gjilan',\n    KW: 'Rawda',\n    KG: 'Kant',\n    LA: 'Vientiane',\n    LV: 'Jelgava',\n    LB: 'Beirut',\n    LS: 'Mafeteng',\n    LR: 'Ganta',\n    LY: 'Benghazi',\n    LI: 'Liechtenstein', // no edit\n    LT: 'Lithuania',\n    LU: 'Luxembourg',\n    MO: 'Macao',\n    MK: 'Macedonia', // no edit\n    MG: 'Antananarivo',\n    MW: 'Blantyre',\n    MY: 'Kuala Lumpur',\n    MV: 'Hulhumale',\n    ML: 'Bamako',\n    MT: 'Birkirkara',\n    MH: 'Marshall Islands', // no edit\n    MQ: 'Martinique', // no edit\n    MR: 'Nouakchott',\n    MU: 'Grand Baie',\n    YT: 'Mayotte', // no edit\n    MX: 'Mexico City',\n    MD: 'Chisinau',\n    MC: 'Monaco',\n    MN: 'Ulaanbaatar',\n    ME: 'Bar',\n    MS: 'Montserrat', // no edit\n    MA: 'Marrakesh',\n    MZ: 'Maputo',\n    MM: 'Mandalay',\n    NA: 'Walvis Bay',\n    NR: 'Nauru', // no edit\n    NP: 'Biratnagar',\n    NL: 'Bussum',\n    NC: 'Noumea',\n    NZ: 'Auckland',\n    NI: 'Jinotega',\n    NE: 'Niger', // no edit\n    NG: 'Abuja',\n    NU: 'Niue', // no edit\n    NF: 'Norfolk Island', // no edit\n    KP: 'North Korea', // no edit\n    MP: 'Saipan',\n    NO: 'Oslo',\n    OM: 'Muscat',\n    PK: 'Bahawalpur',\n    PA: 'Panama City',\n    PG: 'Port Moresby',\n    PY: 'Asuncion',\n    PE: 'Lima',\n    PH: 'Cebu',\n    PL: 'Wroclaw',\n    PT: 'Lisbon',\n    PR: 'Dorado',\n    QA: 'Doha',\n    RE: 'Saint Pierre',\n    RO: 'Cluj-Napoca',\n    RU: 'Moscow',\n    RW: 'Kigali',\n    LC: 'Dennery',\n    WS: 'Apia', \n    SA: 'Riyadh',\n    SN: 'Foundiougne',\n    RS: 'Belgrade',\n    SC: 'Mahé',\n    SG: 'Singapore',\n    SX: 'Philipsburg',\n    SK: 'Bratislava',\n    SI: 'Ljubljana',\n    SB: 'Honiara',\n    SO: 'Hargeisa',\n    ZA: 'Cape Town',\n    KR: 'Seoul',\n    SS: 'Juba',\n    ES: 'Barcelona',\n    LK: 'Colombo',\n    SD: 'Khartoum',\n    SR: 'Friendship',\n    SJ: 'Svalbard and Jan Mayen', // no edit\n    SZ: 'Eswatini', // no edit\n    SE: 'Gothenburg',\n    CH: 'Baden',\n    SY: 'Syria', // no edit\n    TW: 'Taipei',\n    TJ: 'Dushanbe',\n    TZ: 'Dar es Salaam',\n    TH: 'Bangkok',\n    TG: 'Lome',\n    TO: 'Hihifo',\n    TT: 'Chaguanas',\n    TN: 'La Marsa',\n    TR: 'Ankara',\n    TM: 'Ashgabat',\n    TC: 'Providenciales',\n    UG: 'Gulu',\n    UA: 'Kiev',\n    AE: 'Abu Dhabi',\n    GB: 'London',\n    US: 'San Francisco',\n    VI: 'Frederiksted', \n    UY: 'Montevideo',\n    UZ: 'Tashkent',\n    VU: 'Port Vila',\n    VE: 'Caracas',\n    VN: 'Hanoi',\n    YE: 'Aden',\n    ZM: 'Kitwe',\n    ZW: 'Bulawayo'\n  \n  };","export const fakeData = {\n      \"city_id\": 9377,\n      \"city_name\": \"Kant\",\n      \"state_code\": null,\n      \"country_name\": \"Kyrgyzstan\",\n      \"exchange_rate\": {\n          \"EUR\": 0.9141043559814876,\n          \"AUD\": 1.5044384337004684,\n          \"USD\": 1,\n          \"CAD\": 1.365551246061353,\n          \"CNY\": 6.958206234740171,\n          \"CZK\": 21.75104642096151,\n          \"DKK\": 6.863042486656362,\n          \"GBP\": 0.8026009925345098,\n          \"HKD\": 7.847752263093859,\n          \"JPY\": 135.73507701786255,\n          \"NZD\": 1.6151181891227067,\n          \"NOK\": 10.724763178413976,\n          \"RUB\": 77.36039478338927,\n          \"KRW\": 1342.4607515583195,\n          \"CHF\": 0.8978689485149004,\n          \"UAH\": 36.81677509467836,\n          \"SEK\": 10.473343345823046\n      },\n      \"exchange_rates_updated\": {\n          \"date\": \"2023-05-13\",\n          \"timestamp\": 1684019043\n      },\n      \"prices\": [\n          {\n              \"good_id\": 3,\n              \"item_name\": \"International Primary School, Yearly for 1 Child\",\n              \"category_id\": 2,\n              \"category_name\": \"Childcare\",\n              \"min\": 279662.21,\n              \"avg\": 724465.15,\n              \"max\": 1506214.33,\n              \"usd\": {\n                  \"min\": \"3203.32\",\n                  \"avg\": \"8298.21\",\n                  \"max\": \"17252.56\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 4,\n              \"item_name\": \"Private Preschool or Kindergarten, Monthly for 1 Child\",\n              \"category_id\": 2,\n              \"category_name\": \"Childcare\",\n              \"min\": 5993.17,\n              \"avg\": 10046.77,\n              \"max\": 19975.81,\n              \"usd\": {\n                  \"min\": \"68.65\",\n                  \"avg\": \"115.08\",\n                  \"max\": \"228.81\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 5,\n              \"item_name\": \"Pair of Jeans in a Chain Store Like George, H&M, Zara, etc.\",\n              \"category_id\": 3,\n              \"category_name\": \"Clothing And Shoes\",\n              \"min\": 998.58,\n              \"avg\": 1934.48,\n              \"max\": 3495.45,\n              \"usd\": {\n                  \"min\": \"11.44\",\n                  \"avg\": \"22.16\",\n                  \"max\": \"40.04\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 6,\n              \"item_name\": \"Pair of Leather Business Shoes\",\n              \"category_id\": 3,\n              \"category_name\": \"Clothing And Shoes\",\n              \"min\": 2496.87,\n              \"avg\": 4547.39,\n              \"max\": 6597.91,\n              \"usd\": {\n                  \"min\": \"28.60\",\n                  \"avg\": \"52.09\",\n                  \"max\": \"75.57\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 7,\n              \"item_name\": \"Pair of Running Shoes, Mid-Range Price\",\n              \"category_id\": 3,\n              \"category_name\": \"Clothing And Shoes\",\n              \"min\": 1998,\n              \"avg\": 4069.7,\n              \"max\": 6141.4,\n              \"usd\": {\n                  \"min\": \"22.89\",\n                  \"avg\": \"46.62\",\n                  \"max\": \"70.35\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 9,\n              \"item_name\": \"Apples, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 20.33,\n              \"avg\": 80.46,\n              \"max\": 140.59,\n              \"usd\": {\n                  \"min\": \"0.23\",\n                  \"avg\": \"0.92\",\n                  \"max\": \"1.61\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 10,\n              \"item_name\": \"Banana, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 79.62,\n              \"avg\": 101.64,\n              \"max\": 199.89,\n              \"usd\": {\n                  \"min\": \"0.91\",\n                  \"avg\": \"1.16\",\n                  \"max\": \"2.29\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 11,\n              \"item_name\": \"Beef Round or Equivalent Back Leg Red Meat, 1 kg \",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 319.31,\n              \"avg\": 366.74,\n              \"max\": 499.71,\n              \"usd\": {\n                  \"min\": \"3.66\",\n                  \"avg\": \"4.20\",\n                  \"max\": \"5.72\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 12,\n              \"item_name\": \"Bottle of Wine, Mid-Range Price\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 149.91,\n              \"avg\": 349.8,\n              \"max\": 599.66,\n              \"usd\": {\n                  \"min\": \"1.72\",\n                  \"avg\": \"4.01\",\n                  \"max\": \"6.87\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 13,\n              \"item_name\": \"Chicken Breasts, Boneless and Skinless, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 199.89,\n              \"avg\": 282.04,\n              \"max\": 364.19,\n              \"usd\": {\n                  \"min\": \"2.29\",\n                  \"avg\": \"3.23\",\n                  \"max\": \"4.17\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 14,\n              \"item_name\": \"Domestic Beer, 0.5 liter Bottle\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 49.97,\n              \"avg\": 66.91,\n              \"max\": 99.94,\n              \"usd\": {\n                  \"min\": \"0.57\",\n                  \"avg\": \"0.77\",\n                  \"max\": \"1.14\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 15,\n              \"item_name\": \"Eggs, 12 pack\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 60.13,\n              \"avg\": 92.32,\n              \"max\": 124.51,\n              \"usd\": {\n                  \"min\": \"0.69\",\n                  \"avg\": \"1.06\",\n                  \"max\": \"1.43\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 17,\n              \"item_name\": \"Lettuce, 1 head\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 10.16,\n              \"avg\": 19.48,\n              \"max\": 49.97,\n              \"usd\": {\n                  \"min\": \"0.12\",\n                  \"avg\": \"0.22\",\n                  \"max\": \"0.57\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 18,\n              \"item_name\": \"Loaf of Fresh White Bread, 0.5 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 16.09,\n              \"avg\": 21.17,\n              \"max\": 39.81,\n              \"usd\": {\n                  \"min\": \"0.18\",\n                  \"avg\": \"0.24\",\n                  \"max\": \"0.46\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 19,\n              \"item_name\": \"Local Cheese, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 199.89,\n              \"avg\": 404.85,\n              \"max\": 698.75,\n              \"usd\": {\n                  \"min\": \"2.29\",\n                  \"avg\": \"4.64\",\n                  \"max\": \"8.00\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 20,\n              \"item_name\": \"Milk, Regular,1 liter\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 34.73,\n              \"avg\": 44.04,\n              \"max\": 54.21,\n              \"usd\": {\n                  \"min\": \"0.40\",\n                  \"avg\": \"0.50\",\n                  \"max\": \"0.62\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 21,\n              \"item_name\": \"Onion, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 15.25,\n              \"avg\": 22.87,\n              \"max\": 34.73,\n              \"usd\": {\n                  \"min\": \"0.17\",\n                  \"avg\": \"0.26\",\n                  \"max\": \"0.40\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 22,\n              \"item_name\": \"Oranges, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 74.53,\n              \"avg\": 110.11,\n              \"max\": 189.72,\n              \"usd\": {\n                  \"min\": \"0.85\",\n                  \"avg\": \"1.26\",\n                  \"max\": \"2.17\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 23,\n              \"item_name\": \"Pack of Cigarettes\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 79.62,\n              \"avg\": 89.78,\n              \"max\": 99.94,\n              \"usd\": {\n                  \"min\": \"0.91\",\n                  \"avg\": \"1.03\",\n                  \"max\": \"1.14\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 24,\n              \"item_name\": \"Potato, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 15.25,\n              \"avg\": 23.72,\n              \"max\": 34.73,\n              \"usd\": {\n                  \"min\": \"0.17\",\n                  \"avg\": \"0.27\",\n                  \"max\": \"0.40\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 25,\n              \"item_name\": \"White Rice, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 49.97,\n              \"avg\": 72.84,\n              \"max\": 129.59,\n              \"usd\": {\n                  \"min\": \"0.57\",\n                  \"avg\": \"0.83\",\n                  \"max\": \"1.48\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 26,\n              \"item_name\": \"Tomato, 1 kg\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 20.33,\n              \"avg\": 100.79,\n              \"max\": 181.25,\n              \"usd\": {\n                  \"min\": \"0.23\",\n                  \"avg\": \"1.15\",\n                  \"max\": \"2.08\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 27,\n              \"item_name\": \"Water, 1.5 liter Bottle\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 20.33,\n              \"avg\": 31.34,\n              \"max\": 55.05,\n              \"usd\": {\n                  \"min\": \"0.23\",\n                  \"avg\": \"0.36\",\n                  \"max\": \"0.63\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 32,\n              \"item_name\": \"Cappuccino\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 110.11,\n              \"avg\": 118.58,\n              \"max\": 129.59,\n              \"usd\": {\n                  \"min\": \"1.26\",\n                  \"avg\": \"1.36\",\n                  \"max\": \"1.48\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 33,\n              \"item_name\": \"Coca-Cola, 0.33 liter Bottle\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 29.64,\n              \"avg\": 33.88,\n              \"max\": 49.97,\n              \"usd\": {\n                  \"min\": \"0.34\",\n                  \"avg\": \"0.39\",\n                  \"max\": \"0.57\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 34,\n              \"item_name\": \"Domestic Beer, 0.5 liter Draught\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 60.13,\n              \"avg\": 70.3,\n              \"max\": 115.19,\n              \"usd\": {\n                  \"min\": \"0.69\",\n                  \"avg\": \"0.81\",\n                  \"max\": \"1.32\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 35,\n              \"item_name\": \"Imported Beer, 0.33 liter Bottle\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 79.62,\n              \"avg\": 120.27,\n              \"max\": 160.92,\n              \"usd\": {\n                  \"min\": \"0.91\",\n                  \"avg\": \"1.38\",\n                  \"max\": \"1.84\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 36,\n              \"item_name\": \"McMeal at McDonalds or Alternative Combo Meal\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 224.87,\n              \"avg\": 249.86,\n              \"max\": 274.85,\n              \"usd\": {\n                  \"min\": \"2.58\",\n                  \"avg\": \"2.86\",\n                  \"max\": \"3.15\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 37,\n              \"item_name\": \"Meal for 2 People, Mid-range Restaurant, Three-course\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 1498.29,\n              \"avg\": 1698.18,\n              \"max\": 4184.04,\n              \"usd\": {\n                  \"min\": \"17.16\",\n                  \"avg\": \"19.45\",\n                  \"max\": \"47.93\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 38,\n              \"item_name\": \"Meal in Inexpensive Restaurant\",\n              \"category_id\": 6,\n              \"category_name\": \"Restaurants\",\n              \"min\": 199.89,\n              \"avg\": 299.83,\n              \"max\": 657.25,\n              \"usd\": {\n                  \"min\": \"2.29\",\n                  \"avg\": \"3.43\",\n                  \"max\": \"7.53\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 42,\n              \"item_name\": \"Cinema ticket, 1 Seat\",\n              \"category_id\": 8,\n              \"category_name\": \"Sports And Leisure\",\n              \"min\": 199.89,\n              \"avg\": 299.83,\n              \"max\": 499.71,\n              \"usd\": {\n                  \"min\": \"2.29\",\n                  \"avg\": \"3.43\",\n                  \"max\": \"5.72\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 45,\n              \"item_name\": \"Gasoline, 1 liter\",\n              \"category_id\": 9,\n              \"category_name\": \"Transportation\",\n              \"min\": 39.81,\n              \"avg\": 43.2,\n              \"max\": 46.59,\n              \"usd\": {\n                  \"min\": \"0.46\",\n                  \"avg\": \"0.49\",\n                  \"max\": \"0.53\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 48,\n              \"item_name\": \"Taxi, price for 1 hour Waiting, Normal Tariff\",\n              \"category_id\": 9,\n              \"category_name\": \"Transportation\",\n              \"min\": 99.94,\n              \"avg\": 179.56,\n              \"max\": 259.18,\n              \"usd\": {\n                  \"min\": \"1.14\",\n                  \"avg\": \"2.06\",\n                  \"max\": \"2.97\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 49,\n              \"item_name\": \"Taxi, price for 1 km, Normal Tariff\",\n              \"category_id\": 9,\n              \"category_name\": \"Transportation\",\n              \"min\": 10.16,\n              \"avg\": 11.86,\n              \"max\": 15.25,\n              \"usd\": {\n                  \"min\": \"0.12\",\n                  \"avg\": \"0.14\",\n                  \"max\": \"0.17\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 50,\n              \"item_name\": \"Taxi Start, Normal Tariff\",\n              \"category_id\": 9,\n              \"category_name\": \"Transportation\",\n              \"min\": 39.81,\n              \"avg\": 49.97,\n              \"max\": 99.94,\n              \"usd\": {\n                  \"min\": \"0.46\",\n                  \"avg\": \"0.57\",\n                  \"max\": \"1.14\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 52,\n              \"item_name\": \"Volkswagen Golf 1.4 90 KW Trendline (Or Equivalent New Car)\",\n              \"category_id\": 9,\n              \"category_name\": \"Transportation\",\n              \"min\": 1143617.56,\n              \"avg\": 1198551.26,\n              \"max\": 1498188.44,\n              \"usd\": {\n                  \"min\": \"13099.28\",\n                  \"avg\": \"13728.51\",\n                  \"max\": \"17160.63\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 53,\n              \"item_name\": \"Prepaid Mobile Tariff Local, price per 1 min, No Discounts or Plans\",\n              \"category_id\": 10,\n              \"category_name\": \"Utilities Per Month\",\n              \"min\": 0.85,\n              \"avg\": 1.69,\n              \"max\": 3.39,\n              \"usd\": {\n                  \"min\": \"0.01\",\n                  \"avg\": \"0.02\",\n                  \"max\": \"0.04\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 54,\n              \"item_name\": \"Basic utilities for 85 square meter Apartment including Electricity, Heating or Cooling, Water and Garbage\",\n              \"category_id\": 10,\n              \"category_name\": \"Utilities Per Month\",\n              \"min\": 1998,\n              \"avg\": 3043.17,\n              \"max\": 4494.88,\n              \"usd\": {\n                  \"min\": \"22.89\",\n                  \"avg\": \"34.86\",\n                  \"max\": \"51.49\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 55,\n              \"item_name\": \"Internet, 60 Mbps or More, Unlimited Data, Cable/ADSL\",\n              \"category_id\": 10,\n              \"category_name\": \"Utilities Per Month\",\n              \"min\": 898.64,\n              \"avg\": 1350.07,\n              \"max\": 1998,\n              \"usd\": {\n                  \"min\": \"10.29\",\n                  \"avg\": \"15.46\",\n                  \"max\": \"22.89\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 58,\n              \"item_name\": \"Water, 0.33 liter Bottle\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 20.33,\n              \"avg\": 22.87,\n              \"max\": 32.18,\n              \"usd\": {\n                  \"min\": \"0.23\",\n                  \"avg\": \"0.26\",\n                  \"max\": \"0.37\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 64,\n              \"item_name\": \"Summer Dress in a Chain Store Like George, H&M, Zara, etc.\",\n              \"category_id\": 3,\n              \"category_name\": \"Clothing And Shoes\",\n              \"min\": 898.64,\n              \"avg\": 2185.19,\n              \"max\": 3495.45,\n              \"usd\": {\n                  \"min\": \"10.29\",\n                  \"avg\": \"25.03\",\n                  \"max\": \"40.04\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          },\n          {\n              \"good_id\": 65,\n              \"item_name\": \"Mortgage Interest Rate in Percentages for 20 Years Fixed-Rate, Yearly, Fixed-Rate\",\n              \"category_id\": 7,\n              \"category_name\": \"Salaries And Financing\",\n              \"min\": 14.53,\n              \"avg\": 16.14,\n              \"max\": 17.75,\n              \"measure\": \"percent\"\n          },\n          {\n              \"good_id\": 68,\n              \"item_name\": \"Imported Beer, 0.33 liter Bottle\",\n              \"category_id\": 4,\n              \"category_name\": \"Markets\",\n              \"min\": 65.22,\n              \"avg\": 93.17,\n              \"max\": 121.12,\n              \"usd\": {\n                  \"min\": \"0.75\",\n                  \"avg\": \"1.07\",\n                  \"max\": \"1.39\"\n              },\n              \"measure\": \"money\",\n              \"currency_code\": \"KGS\"\n          }\n      ],\n      \"error\": null\n  \n  }","import svgMap from 'svgmap';\nimport countryCodesList from './countriesList.js';\nimport cityNamesList from './cityNamesList.js';\nimport { fakeData } from './fakeData.js';\n\nconst countryInformation = new Map();\nconst popup = document.getElementById(\"popup\");\nconst clearDataCardsBtn = document.getElementById(\"clear-data-cards-btn\")\nclearDataCardsBtn.classList.add(\"hide\")\nconst svgMapInstance = document.getElementById('svgMap')\nlet domain = 'https://food-around-the-world-proxy-server.onrender.com'\n\n\nif (process.env.NODE_ENV !== 'production') {\n  domain = 'http://localhost:5001'\n}\n\n// HANDLES WELCOME POP-UP\nfunction showPopup() {\n\nconst popupContentDiv = document.createElement(\"div\");\npopupContentDiv.classList.add(\"popup-content\")\n\nconst h2 = document.createElement(\"h2\")\nh2.innerHTML =(\"Discover your next journey!\")\nh2.style.color=\"purple\"\n\nconst ul = document.createElement(\"ul\");\nul.id = \"popop-ul\"\n\nconst ol1 = document.createElement(\"ol\")\nol1.innerHTML= \"Hover over a country for a brief description and rating\"\nconst br1 = document.createElement(\"br\")\n\nconst ol2 = document.createElement(\"ol\")\nol2.innerHTML = \"Click on up to 4 countries at a time to compare local living costs and average salary, in $USD\"\nconst br2 = document.createElement(\"br\")\n\nconst ol3 = document.createElement(\"ol\")\nol3.innerHTML = \"For more indepth destination details, click the underlined labels of the data cards\"\nconst br3 = document.createElement(\"br\")\n\nconst ol4 = document.createElement(\"ol\")\nol4.innerHTML = \"Happy Exploring!\"\n\nul.appendChild(ol1)\nul.appendChild(br1)\nul.appendChild(ol2)\nul.appendChild(br2)\nul.appendChild(ol3)\nul.appendChild(br3)\nul.appendChild(ol4)\n\npopupContentDiv.appendChild(h2)\npopupContentDiv.appendChild(ul)\n\npopup.appendChild(popupContentDiv)\n\npopup.style.display = \"block\";\n\nreturn popup\n}\n\nfunction closePopup() {\n  popup.style.display = \"none\";``\n}\n\nwindow.onclick = function(event) {\n  closePopup()\n}\n\nwindow.onload = function() {\n  showPopup();\n}\n\nfunction getCountryNameByCode(countryCode) {\n  if (countryCode in countryCodesList) {\n    return countryCodesList[countryCode];\n  } else {\n    return 'Country code not found';\n  }\n}\nfunction getCityNameByCode(countryCode) {\n  if (countryCode in cityNamesList) {\n    return cityNamesList[countryCode];\n  } else {\n    return 'CityName not found';\n  }\n}\n\n// CREATES AND LOADS SVG MAP WITH TOOLTIP\nconst map = new svgMap({\n  targetElementID: 'svgMap',\n  // flagURL: flagURL,\n  onGetTooltip(toolTipdiv, countryId, countryValues) { \n    const cityName = getCityNameByCode(countryId);\n    const countryName = getCountryNameByCode(countryId);\n\n    getTeleportAPI(cityName) \n    .then((res) => {\n      const summary = getCitySummary(res)\n      if (summary) {\n        document.getElementById(`summary-${countryId}`).innerHTML = summary\n      }\n    })\n\n      const hoverDivEle = document.createElement('div');\n      hoverDivEle.classList.add('wrapper');\n\n      const flagDiv = document.createElement(\"img\")\n      // flagDiv.id =`${countryId}-flag`\n      // flagDiv.src = 'https://cdn.jsdelivr.net/gh/hjnilsson/country-flags@latest/svg/{0}.svg'\n\n      const locationH1 = document.createElement(\"h1\");\n      locationH1.class = \"hover-H1\"\n      locationH1.id =`${cityName}, ${countryName}`\n      locationH1.innerHTML = `${cityName}, ${countryName}`;\n\n      const summarySpan = document.createElement('span');\n      summarySpan.id = `summary-${countryId}`\n      summarySpan.classList.add(\"summary\")\n\n      // hoverDivEle.appendChild(flagDiv);\n      hoverDivEle.appendChild(locationH1);\n      if (summarySpan.innerHTML != null) {\n        hoverDivEle.appendChild(summarySpan);\n      }\n  \n      return hoverDivEle;\n\n  },\n  data: {\n    data: {\n      threeCourse: {\n        name: \"holder\",\n        format: 'holder',\n      },\n    },\n    applyData: 'threeCourse',\n    values: {}\n  },\n  \n});\n\n// IF MAP IS LOADED, ADD EVENTLISTENER FOR CLICK ON EACH COUNTRY WHICH WILL THEN \n//MAKE A NEW DATA CARD\n\nif (map) {\n  document.querySelector('.svg-pan-zoom_viewport').addEventListener('click', (e) => {\n    if (e.target.tagName === 'path') {\n      const countryCode = e.target.dataset.id\n      const cityName = getCityNameByCode(countryCode);\n      const countryName = getCountryNameByCode(countryCode);\n\n      getCityCostData(countryName, cityName)\n      .then((div) => { \n        return countryInformation.set(countryCode, div) \n      })\n      .then(result => result.get(countryCode))\n      .then((div) => {\n        const body = document.querySelector(\"#body\")\n        rotateChildrenInOrder(body, div)\n      })\n    }\n  });\n}\n\n\nasync function getTeleportAPI(city) {\n  const url = `https://api.teleport.org/api/cities/?search=${city}&limit=1&embed=city%3Asearch-results%2Fcity%3Aitem%2Fcity%3Aurban_area%2Fua%3Ascores`\n  const options = {\n    method: \"GET\",\n    headers: {\n     \"Accept\": \"application/vnd.teleport.v1+json\"\n    }\n  }\n  try {\n    const response = await fetch(url, options);\n      if (response.ok) {\n        const result = await response.json();\n        return result\n      } \n  } catch (error) {\n  }\n}\n\nfunction getCitySummary (response) {\n  if(response._embedded['city:search-results'][0]?._embedded['city:item']?._embedded) {\n    const summary = response._embedded['city:search-results'][0]._embedded['city:item']._embedded['city:urban_area']._embedded['ua:scores'].summary;\n    return summary\n  } else {\n    return null\n  }\n}\n\nfunction getCityUrlLink(response) {\n  if (response._embedded['city:search-results'][0]?._embedded['city:item']?._embedded) {\n    const url = response._embedded['city:search-results'][0]._embedded['city:item']._embedded['city:urban_area'].teleport_city_url;\n    return url\n  } else {\n    return null\n  }\n}\n\n// fetching to get cost data, then calling createDataCard to make the data cards.\nasync function getCityCostData(countryName, cityName) {\n  const url = `https://cost-of-living-and-prices.p.rapidapi.com/prices?city_name=${cityName}&country_name=${countryName}`\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': 'e377e81e46mshc55f3ddf23c5d2dp1a6d0cjsn8fe11bcbb1f8',\n      'X-RapidAPI-Host': 'cost-of-living-and-prices.p.rapidapi.com'\n    }\n  };\n    try {\n        const useFakeResponse = false;\n        let result;\n\n        if (useFakeResponse) {\n            result = await Promise.resolve(fakeData)\n        } else {\n            const response = await fetch(url, options);\n            if (response.ok) {\n             result = await response.json();\n            } \n        }\n       \n        const infoArray = [];\n        infoArray.push(getItemAvgUSDPriceByName(\"Tomato, 1 kg\", result, 'Tomatoes - 1kg'));\n        infoArray.push(getItemAvgUSDPriceByName(\"Gasoline, 1 liter\", result, \"Gasoline, 1L\"));\n        infoArray.push(getItemAvgUSDPriceByName(\"Meal for 2 People, Mid-range Restaurant, Three-course\", result, '3-Course Meal (2ppl)'));\n        infoArray.push(getItemAvgUSDPriceByName(\"Average Monthly Net Salary, After Tax\", result, 'Salary (Monthly, after tax)'));\n        infoArray.push(getItemAvgUSDPriceByName(\"One bedroom apartment in city centre\", result, \"Rent (1bd Apt)\"));\n      \n        const parentDiv = document.createElement('div');\n        parentDiv.classList.add('wrapper');\n        \n        return createDataCards(cityName, countryName, infoArray, parentDiv)\n    } catch (error) {\n        // console.error(error);\n    }\n}\n\nasync function createDataCards (city, country, infoArray, parentDiv)  {\n  let url;\n  const body = document.getElementById(\"body\")\n  clearDataCardsBtn.classList.remove(\"hide\")\n  clearDataCardsBtn.classList.add(\"show\")\n\n  return await getTeleportAPI(city)\n  .then((res) => {\n    url = getCityUrlLink(res)\n    if (url === null) {\n      const h1 = document.createElement('h1');\n      h1.id = \"data-card-h1\"\n      h1.innerHTML = `${city}, ${country}`;\n      parentDiv.appendChild(h1);\n      infoArray.forEach(item => parentDiv.appendChild(item));\n      return parentDiv;\n    } else {\n      const h1 = document.createElement('h1');\n      h1.id = \"data-card-h1-with-link\"\n      const linkText = `<a href=\"${url}\" target=\"_blank\" >${city}, ${country}</a>`\n      h1.innerHTML = linkText\n      parentDiv.appendChild(h1);\n      infoArray.forEach(item => parentDiv.appendChild(item)); \n      return parentDiv;\n    }\n  })\n}\n\nfunction getItemAvgUSDPriceByName(itemName, result, label) {\n  const item = result.prices.find((item) => item.item_name === itemName);\n  const divEl = document.createElement('div');\n  divEl.classList.add('row');\n  const labelEl = document.createElement('label');\n  labelEl.innerHTML = label;\n\n  if (item) {\n        const spanEl = document.createElement('span');\n        spanEl.innerHTML = '$' + item['usd']['avg'];\n\n        divEl.appendChild(labelEl);\n        divEl.appendChild(spanEl);\n        `\n        <div class=\"row\">\n            <label>{label}</label>\n            <span>$1.23</span>\n        </div>\n        `\n        return divEl;\n  } else {\n    const spanEl = document.createElement('span');\n    spanEl.innerHTML = 'unavailable';\n\n    divEl.appendChild(labelEl);\n    divEl.appendChild(spanEl);\n\n    return divEl\n  }\n}\n\nfunction rotateChildrenInOrder(body, div) {\n  const totalChildren = body.children.length;\n  let arrayFromCollection = Array.from(body.children);\n\n  const hasNoDuplicateText = () => {\n    let elementExists = arrayFromCollection.some(element => (element.textContent || element.innerText) === div.textContent);\n    \n    if (!elementExists) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  if (totalChildren === 4 && hasNoDuplicateText()) {\n    let firstElement = body.children[0];\n    firstElement.parentNode.removeChild(firstElement);\n    if (hasNoDuplicateText()) {\n      body.appendChild(div);\n    }\n  } else {\n    if (hasNoDuplicateText()) {\n      body.appendChild(div);\n    }\n  }\n}\n\nclearDataCardsBtn.addEventListener(\"click\", clearALLDataCards)\n\nfunction clearALLDataCards (e) {\n  let arrayOfChildren = Array.from(body.children);\n  arrayOfChildren.forEach(kid => body.removeChild(kid))\n  clearDataCardsBtn.classList.add(\"hide\")\n  clearDataCardsBtn.classList.remove(\"show\")\n \n}\n\n"],"names":["SvgPanZoom","module","exports","SvgUtils","enable","instance","defs","svg","querySelector","document","createElementNS","svgNS","appendChild","style","setAttribute","textContent","zoomGroup","width","height","this","_createZoomIn","_createZoomReset","_createZoomOut","controlIcons","zoomIn","addEventListener","getPublicInstance","zoomInBackground","zoomInShape","resetPanZoomControl","reset","resetPanZoomControlBackground","resetPanZoomControlShape1","resetPanZoomControlShape2","zoomOut","zoomOutBackground","zoomOutShape","disable","parentNode","removeChild","Utils","ShadowViewport","viewport","options","init","prototype","originalState","zoom","x","y","activeState","updateCTMCached","proxy","updateCTM","requestAnimationFrame","createRequestAnimationFrame","refreshRate","viewBox","cacheViewBox","newCTM","processCTM","setCTM","svgViewBox","getAttribute","viewBoxValues","split","filter","v","map","parseFloat","Math","min","updateCTMOnNextFrame","removeAttribute","simpleViewBoxCache","bBox","getBBox","getViewBox","extend","newScale","getCTM","fit","contain","max","a","d","e","f","center","offsetX","offsetY","getOriginalState","getState","getZoom","getRelativeZoom","computeRelativeZoom","scale","getPan","safeCTM","createSVGMatrix","b","c","willZoom","isZoomDifferent","willPan","isPanDifferent","beforeZoom","updateCache","onZoom","preventPan","beforePan","preventPanX","preventPanY","isObject","isNumber","onPan","pendingUpdate","call","window","ctm","onUpdatedCTM","Wheel","ControlIcons","optionsDefaults","viewportSelector","panEnabled","controlIconsEnabled","zoomEnabled","dblClickZoomEnabled","mouseWheelZoomEnabled","preventMouseEventsDefault","zoomScaleSensitivity","minZoom","maxZoom","customEventsHandler","eventsListenerElement","passiveListenerOption","passive","that","setupSvgAttributes","state","boundingClientRectNormalized","getBoundingClientRectNormalized","getOrCreateViewport","oldScale","oldPoint","newPoint","point","publicInstance","setBeforeZoom","setOnZoom","setBeforePan","setOnPan","setOnUpdatedCTM","lastMouseWheelEventTime","Date","now","setupHandlers","prevEvt","eventListeners","mousedown","evt","result","handleMouseDown","touchstart","mouseup","handleMouseUp","touchend","mousemove","handleMouseMove","touchmove","mouseleave","touchleave","touchcancel","svgElement","haltEventListeners","length","i","hasOwnProperty","event","enableMouseWheelZoom","wheelListener","handleMouseWheel","isPassiveListener","on","disableMouseWheelZoom","off","preventDefault","returnValue","delta","deltaY","timeDelta","divider","deltaMode","wheelDelta","abs","log","inversedScreenCTM","getScreenCTM","inverse","relativeMousePoint","getEventPoint","matrixTransform","pow","zoomAtPoint","zoomScale","zoomAbsolute","oldCTM","relativePoint","modifier","translate","multiply","absolute","getSvgCenterPoint","publicZoom","computeFromRelativeZoom","publicZoomAtPoint","getType","Error","createSVGPoint","resetZoom","resetPan","pan","handleDblClick","zoomFactor","target","indexOf","shiftKey","mouseAndTouchNormalize","isDblClick","firstEventCTM","stateOrigin","viewportCTM","updateBBox","panBy","resize","disableControlIcons","enableControlIcons","destroy","removeEventListener","instancesStore","pi","enablePan","disablePan","isPanEnabled","fn","enableZoom","disableZoom","isZoomEnabled","isControlIconsEnabled","enableDblClickZoom","disableDblClickZoom","isDblClickZoomEnabled","isMouseWheelZoomEnabled","setZoomScaleSensitivity","setMinZoom","setMaxZoom","zoomBy","zoomAtPointBy","getSizes","realZoom","elementOrSelector","getSvg","push","_browser","documentMode","xmlNS","xmlnsNS","xlinkNS","evNS","clientWidth","clientHeight","getBoundingClientRect","selector","isElement","childNodes","Array","slice","children","el","nodeName","viewportId","toISOString","replace","svgChildren","classNames","join","setAttributeNS","toLowerCase","internetExplorerRedisplayInterval","refreshDefsGlobal","throttle","allDefs","querySelectorAll","allDefsCount","thisDefs","insertBefore","element","matrix","s","transform","setTimeout","clientX","clientY","_addEventListener","_removeEventListener","support","prefix","fns","passiveOption","_addWheelListener","elem","eventName","callback","cb","originalEvent","srcElement","type","deltaX","delatZ","wheelDeltaX","detail","createCallback","_removeWheelListener","getCallback","splice","removeCallback","createElement","undefined","onmousewheel","requestTimeout","timeout","source","prop","o","HTMLElement","SVGElement","SVGSVGElement","nodeType","Object","toString","n","isNaN","isFinite","String","tagName","contentDocument","documentElement","getSVGDocument","context","apply","arguments","touches","pageX","rect","left","pageY","top","timeStampDiff","timeStamp","touchesDistance","sqrt","getTime","func","wait","args","previous","later","leading","remaining","clearTimeout","trailing","floor","t","l","svgMap","assign","targetElementID","initialZoom","initialPan","mouseWheelZoomWithKey","mouseWheelKeyMessage","mouseWheelKeyMessageMac","colorMax","colorMin","colorNoData","manualColorAttribute","flagType","flagURL","hideFlag","hideMissingData","noDataText","touchLink","showZoomReset","onGetTooltip","countries","EH","Crimea","showContinentSelector","getElementById","error","data","id","wrapper","classList","add","container","addMouseWheelZoomNotice","addMouseWheelZoomWithKeyEvents","mapContainer","createMap","applyData","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BR","IO","VG","BN","BG","BF","BI","KH","CM","CA","CV","BQ","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CK","CR","HR","CU","CW","CY","CZ","CD","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FM","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GN","GW","GY","HT","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","CI","JM","JP","JE","JO","KZ","KE","KI","XK","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","NC","NZ","NI","NE","NG","NU","NF","KP","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","SH","KN","LC","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SX","SK","SI","SB","SO","ZA","GS","KR","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","VI","UY","UZ","VU","VA","VE","VN","WF","YE","ZM","ZW","keys","values","forEach","parseInt","thresholdMax","thresholdMin","color","getColor","bind","emojiFlags","continents","EA","iso","name","EU","OC","createTooltip","mapWrapper","mapImage","charAt","toUpperCase","zoomMap","zoomControlIn","zoomControlOut","continentSelect","value","zoomContinent","mapPaths","tooltipMoveEvent","moveTooltip","location","href","setTooltipContent","getTooltipContent","showTooltip","link","linkTarget","open","hideTooltip","remove","mapPanZoom","setControlStatuses","offsetWidth","offsetHeight","L","tooltip","innerHTML","getCountryName","floatingNumbers","toFixed","thousandSeparator","numberWithCommas","format","zoomControlReset","contains","navigator","appVersion","append","showMouseWheelZoomNotice","mouseWheelNoticeJustHidden","autoHideMouseWheelNoticeTimeout","hideMouseWheelZoomNotice","blockMouseWheelZoomNotice","mouseWheelNoticeJustHiddenTimeout","body","key","altKey","ctrlKey","metaKey","getElementsByTagName","tooltipContent","tooltipPointer","innerWidth","marginLeft","console","ceil","substring","getHex","countryNames","svgMapWrapper","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","defineProperty","enumerable","get","obj","countryInformation","Map","popup","clearDataCardsBtn","getCountryNameByCode","countryCode","countryCodesList","getCityNameByCode","cityNamesList","async","getTeleportAPI","city","url","method","headers","response","fetch","ok","json","getItemAvgUSDPriceByName","itemName","label","item","prices","find","item_name","divEl","labelEl","spanEl","onclick","display","onload","popupContentDiv","h2","ul","ol1","br1","ol2","br2","ol3","br3","ol4","showPopup","toolTipdiv","countryId","countryValues","cityName","countryName","then","res","summary","_embedded","hoverDivEle","locationH1","class","summarySpan","threeCourse","dataset","infoArray","parentDiv","country","teleport_city_url","h1","linkText","createDataCards","getCityCostData","div","set","totalChildren","arrayFromCollection","from","hasNoDuplicateText","some","innerText","firstElement","rotateChildrenInOrder","kid"],"sourceRoot":""}